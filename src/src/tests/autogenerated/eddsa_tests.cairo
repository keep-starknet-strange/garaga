#[cfg(test)]
mod eddsa_tests {
    use garaga::signatures::eddsa_25519::{
        EdDSASignature, EdDSASignatureWithHint, is_valid_eddsa_signature,
    };

    #[test]
    fn test_eddsa_0() {
        let mut eddsa_sig_with_hints_serialized = array![
            0x8a826e80cce2869072ac60c3004356e5,
            0x5501492265e073d874d9e5b81e7f8784,
            0x6bb4f91c70391ec6ac3ba3901582b85f,
            0xb107a8e4341516524be5b59f0f55bd2,
            0x3a0764c9d3fe4bd5b70ab18201985ad7,
            0x1a5107f7681a02af2523a6daf372e10e,
            0x0,
            0x50595796082478c3a10202c,
            0xe3b035a1ff792e0aeb395276,
            0x8acae7ac8a37dc4,
            0x0,
            0x4f954f318d6cb9f09565310,
            0xa81c2560d606ee2bc786152e,
            0x1a3e13036142bb15,
            0x0,
            0x609a0d787c3237bde752338b,
            0x6a21783701e5ace720634243,
            0x725e3172beefa4c8,
            0x0,
            0xfd249cef70ef6c4a363cc1c6,
            0x373998749ba58fd5bffb13ec,
            0x1e4b31dedc5cb74d,
            0x0,
            0x40c15831f9022471f40dde08,
            0x2c7b8ba15482ab9558a36850,
            0x5d510568a79e4daf,
            0x0,
            0x8af805b2cc2e03ec773fe05c,
            0xd20b40fa88084e51079579b5,
            0x24a7a0bad341f31c,
            0x0,
            0x5,
            0x356d2c7f122623dec2b4c8a9,
            0xd2e29a3c673245f613445635,
            0x34d6202ff8e0dd88,
            0x0,
            0xbe52a6fbcb7570796bc22967,
            0x920bb7ad0cee930c4651d082,
            0x385cada0fc784b2c,
            0x0,
            0xf140e5ee8a13818d3dec44e1,
            0x9adc174a00e671974d33cded,
            0x1e186e1eaad8547a,
            0x0,
            0x5a505eaaf604092f5d1c4bc3,
            0xf89e3871ef7cec0b5f4945b1,
            0x59da81e766b4c4cb,
            0x0,
            0x371dec5b7bd997323481dd23,
            0x4f5bfb71eb2571f692454c3c,
            0x7371ea9ac9208a50,
            0x0,
            0x6,
            0x653db124e9e030dfe7e4ffef,
            0xb88d0d4bb71fa8e6bf2909f3,
            0x78711cf71cbdd86e,
            0x0,
            0xe833290ef51ce9e47191e2ba,
            0x549859edc2005455dd726002,
            0x390a6c20905a7b9a,
            0x0,
            0xfda0636233db419690d565a0,
            0xdaef15cd4d1cdc17db83d12a,
            0x6b8fdca55def4754,
            0x0,
            0x6006aa171df7aa35b1d9682d,
            0x4bb73fbc6082d5c5380e8be6,
            0x50211f6dc28a0e97,
            0x0,
            0xcdac70aef107ddd263a0f897,
            0xf7691e84311311bb8303c6d1,
            0x7c7e0af07c994b21,
            0x0,
            0x1,
            0x0,
            0x0,
            0x0,
            0x6,
            0x18c0d5d4c93dcf54b497e0a,
            0xd7f03521c160ecae9f846249,
            0x2b2e7dc3d759ad6f,
            0x0,
            0x73a385b9c9ada31cd30e6f86,
            0xf67442f36ab6476289eddac3,
            0x1b3353512c6a1cce,
            0x0,
            0x451594a6b4b0d66fa9e24786,
            0xba9c3a7582877d67e2cb4caf,
            0x303b184039711db3,
            0x0,
            0xd7516646d766405706ef55d7,
            0xb3d41d871ab9b14e55cb2272,
            0x24a26fe991cff8c5,
            0x0,
            0x7a9cdd866b1ccbc66c827599,
            0x8b016cb3abb7e1f420e9c861,
            0xea3fafd7094855b,
            0x0,
            0xb5e049807c9a6f6ce77afb10,
            0x6b87568a5903e6501f11b275,
            0x6957fa58d65caf4c,
            0x0,
            0x9,
            0x63bd7a85b86f90ad687cc7d,
            0x62a3e898fc4682fa54e6ef7c,
            0x301d7d8c349d23b5,
            0x0,
            0x490b8d5a23aad26748d1d940,
            0xbd05a60fa4a4a553f1bd5ba7,
            0x354d14e0660a0d3b,
            0x0,
            0xf079b11ea675982eae298b17,
            0xd315bcd60d677a0263429532,
            0x6280e90efc0bf1e7,
            0x0,
            0x9c9f2d4d4e7171c29a44feb3,
            0xafa647944e307b51c592d474,
            0x2ced5ef5e9fade19,
            0x0,
            0x66c53855d1fe40f9e54de0bd,
            0x657c39978dd48f3c0a05a365,
            0x9a33279f60a4283,
            0x0,
            0x60e06f01842950e7c72221fb,
            0xa91cb559163a778897f03d55,
            0x31ab7ee2b562d3bb,
            0x0,
            0x6cabd50eca698bc4aa957f6d,
            0x7d4f20c9c1fe139ba3c74243,
            0x2d6fcc416843cd7d,
            0x0,
            0xcdac70aef107ddd263a0f897,
            0xf7691e84311311bb8303c6d1,
            0x7c7e0af07c994b21,
            0x0,
            0x1,
            0x0,
            0x0,
            0x0,
            0x65b8c797fa416d1e771a9913,
            0x1a417109593514139ee80a82,
            0xf5f53d3c5f4de17,
            0x0,
            0x0,
            0x82324bd01ce6f3cf81ab44e62959c82a,
            0x6218e309d40065fcc338b3127f468371,
            0xc513d47253187c24b12786bd777645ce,
            0x55d0e09a2b9d34292297e08d60d0f620,
        ]
            .span();
        let eddsa_with_hints = Serde::<
            EdDSASignatureWithHint,
        >::deserialize(ref eddsa_sig_with_hints_serialized)
            .expect('FailToDeserialize');
        let is_valid = is_valid_eddsa_signature(eddsa_with_hints);
        assert!(is_valid);
    }
}
