use garaga::core::circuit::u288IntoCircuitInputValue;
use garaga::ec_ops::{DerivePointFromXHint, FunctionFelt, G1Point, MSMHint, msm_g1, u288, u384};

#[test]
fn test_msm_BN254_1P() {
    let mut data = array![
        0x1,
        0xe2c91ebbffedea5cc96ab66c,
        0x23225d3db7b3eba1aa79078,
        0x1abab72cfddaa35b,
        0x0,
        0x5ae11a6dada866bbc23ad393,
        0x26bf86500055ba137a13df58,
        0x1952422195f9e68f,
        0x0,
        0x8588b047629dc12cef448ea0,
        0xb9e0087734ce7a283626d4d,
        0x2e2526be1175da32,
        0x0,
        0x606e7e67ab335931dc6b69ed,
        0xfed6da65fe46b1d8c0cd69e7,
        0x271119715987cf8a,
        0x0,
        0x3f7b089e59fade8d29358998,
        0x9bcb567c9510886ae0a3abba,
        0xfe00f31f2f77676,
        0x0,
        0x7ed9b12e41d1e2d4fb1ecde4,
        0xef5ef3c193d8c9972728aadf,
        0xb0ac47686963964,
        0x0,
        0x4,
        0xe7b7d17adaff464283ed2f7e,
        0x3dc585b7920013b627ab55cf,
        0x1a1c18a7f6688992,
        0x2794c46dc550d815c534433a,
        0xcb69a0b1a4b2b5c69616d9a8,
        0x15a943c373de83bc,
        0x9ad37edb9cd042d005e4b5c1,
        0xac734c1852bbec08d15e7d40,
        0x21ca83dd97f6654e,
        0x5dc9a44f3664a4d7ad905993,
        0x5c7c5fd503e7b7326e64ae2e,
        0x13f7735bcbb8e320,
        0x5,
        0x93cb11657d2ef26cd924d767,
        0xe63c3cf117065bf8d91c9579,
        0x1d75c65e32c684f8,
        0xe2a67f55bc0483beed125299,
        0xd79d741c41e5284fe0680c8,
        0x246f8f63a23b9cac,
        0x19aab28b2850083130eaa456,
        0xaaa041a14ad8d1fce431296b,
        0x1e54f25f17caca26,
        0xcca47a0f0bfe16e9cc66565c,
        0xc437d2cce6639dba0c7f1596,
        0xd989136065e06e,
        0x1,
        0x0,
        0x0,
        0x5,
        0xea42f30712aa33ed09ea4016,
        0x209f4504b02bf744a0a4644,
        0x120b08c294f587b9,
        0x7bf64620068ffd65955871da,
        0xdbf7a5abddbc97f499204a5f,
        0x261004cf1373faf5,
        0x6ba2e485a5e041f7a7f7214f,
        0x171f079db58bcafc3310656,
        0xd60fad28f16b65c,
        0x2b3c22e752116f7ad6efb6ff,
        0x8d58582b58e08f9bdc677565,
        0x4c2d7467e2c7685,
        0x23c57c89f1810e7dcbcd6472,
        0x31a91f2cca5845298c959c13,
        0x1f58ba1163a0147b,
        0x8,
        0x52ef69a33b6c4b2fb2f188ee,
        0xfa64711cc391bb8cf3d455db,
        0x27fd04a7b721eec0,
        0xd70fe8e6bbcc730f163cfd3d,
        0xb7ccfa58495846d3cb10ad37,
        0xc861145244f95b0,
        0xe48e4d143ccf8c7cba42efbb,
        0x47907f2d5f091d99151211af,
        0x2a9a88aa662ebe4a,
        0xf9b87f92a129372a3e57da7b,
        0x32e3b557ca313526fe99d63d,
        0x2002619853f82645,
        0xe2a67f55bc0483beed12529c,
        0xd79d741c41e5284fe0680c8,
        0x246f8f63a23b9cac,
        0x19aab28b2850083130eaa456,
        0xaaa041a14ad8d1fce431296b,
        0x1e54f25f17caca26,
        0xcca47a0f0bfe16e9cc66565c,
        0xc437d2cce6639dba0c7f1596,
        0xd989136065e06e,
        0x1,
        0x0,
        0x0,
        0xdbc9b00f422abbd88d6c2181,
        0xcac633e0e88937eb31f4b4d0,
        0xaecdaa9df8ae568,
        0x0,
        0x0,
        0x1,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x1,
        0xb4862b21fb97d43588561712e8e5216a,
        0x967d0cae6f4590b9a164106cf6a659e,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xa9f0001b3fc543c76e78dbe5,
                limb1: 0x59d3efe5fc893f110337f203,
                limb2: 0x2a3c4edaf4eb5933,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x47c7d40af526b19cd3c8e9d6,
                limb1: 0x77e086d9ab1747415c8a345,
                limb2: 0x2ecf62cd2d14d49c,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BN254_2P() {
    let mut data = array![
        0x1,
        0x1552483255918be6d9915136,
        0x9e9cabf92f19f76fe696c08c,
        0x12d7fd1449a0c968,
        0x0,
        0x690380ff9c9ed4bfe62481bd,
        0xd1ccccaff2c60cb68e39a8f3,
        0x18c2cfd0743d2f66,
        0x0,
        0x29ed84e8539ecdf46a8ad77c,
        0xfbd9992a28bc9ba393aadc94,
        0x26ffe84692a16555,
        0x0,
        0xfbc135273fde5db6b21936ec,
        0x2e79ff49515f2adf9a839ca4,
        0x485d6af4503dd68,
        0x0,
        0x3d62b293a0f51bf8b4494bed,
        0x9cb11453fc71d84d4ccd6999,
        0x2a9dec5c563e9429,
        0x0,
        0x5a586bfa99abeb2e90f06090,
        0xc33c881d9b8cc9850ce38648,
        0x335175d12fa9832,
        0x0,
        0x5,
        0x487a6f6653cfbca1ab0410ed,
        0xf8091121ee4384fce58d6059,
        0x19db0444717c2dd0,
        0xbf925d160ff4fe427fc8fd8a,
        0x4a17a831df9a9f024db42f5f,
        0x28dd0c03ee45c3cc,
        0xf2cea770175459248b0d8792,
        0xb70ba68bfb69e9c9cfe6d679,
        0x42fdd0def19ddef,
        0x3854524445e7db6b37dfd797,
        0x77678f9588689bdd4460fa97,
        0x2f10b621cfdf1ea0,
        0x93f72e91384571ad017c2617,
        0xcb4220a80f60d86c78731278,
        0x27bb15cf3bf67d49,
        0x6,
        0xd611165daad36b9f6bb88b8f,
        0xcc09777ca49a6f01ad0761,
        0x2dffb3c8a1163656,
        0x3f1aaa6fdcecab5f3261eded,
        0x666b505720099d830646bae1,
        0x258411594128b73a,
        0x8c3f80fdc2c610087015e906,
        0xf5f99ea828fc055dabd9b2db,
        0x10355a34eb70ab30,
        0x5a49b91db46b09cd3264e73d,
        0xa2f41a0d638ad098de276662,
        0x7e28cb53161f5db,
        0xcd4043207434d4bcc1fcd2e,
        0xf2a92016f7c56a6001c60336,
        0x20df36e484ce7,
        0x1,
        0x0,
        0x0,
        0x6,
        0xbc09b34a431ff2fd9d751101,
        0xc0b8f750f91029c77ff6337c,
        0x1540c114308354d7,
        0xc8b8949daf4e6104f541401e,
        0x50d13f964dcc1256a9add027,
        0x281e91bf788f8af2,
        0x887c28ed5db5b7e7b295218,
        0x2b5f3f5da65e0ce614aabc1a,
        0x936ee6429e5148c,
        0x77b925f777328fdd7487bc7b,
        0xdde9da93608ac5f9b0369bcf,
        0x1b54a9ae0093fb35,
        0xbbb308b622e0a85e552f2bd9,
        0x74c47fd733efc722a867b7cb,
        0x2d2d9ecf661d4610,
        0x6c48cba02fc528814bdc66be,
        0x4a93056e04d8312cca21a77c,
        0x174c3cc61d5a3795,
        0x9,
        0xb14fadfe88392ab0922fa81f,
        0x91c390f972eb1e91d6044102,
        0x29367e7420df62ae,
        0xec6c6a351e84e9efe62bcf39,
        0xc2a165985d1a27cde3d15b80,
        0xfc397260116e55b,
        0x3c4cb86c0c31a40277c4bdcb,
        0x299c9641f972b7bb6c0bae01,
        0x3bc02be1206169,
        0x7c7c77298bf3fcf02a6a43ff,
        0x315811e925c3b3dc04a1cff7,
        0x15430b75540a77bf,
        0x6596b705f2b6934296c15577,
        0x3e66b09c0759dca30b98c483,
        0x258a3b338c019df2,
        0x8c3f80fdc2c610087015e909,
        0xf5f99ea828fc055dabd9b2db,
        0x10355a34eb70ab30,
        0x5a49b91db46b09cd3264e73d,
        0xa2f41a0d638ad098de276662,
        0x7e28cb53161f5db,
        0xcd4043207434d4bcc1fcd2e,
        0xf2a92016f7c56a6001c60336,
        0x20df36e484ce7,
        0x1,
        0x0,
        0x0,
        0xb009d33990ea3e18853ab302,
        0x36b8521ab9bdef3f166c48fb,
        0xe54672e5fd16956,
        0x0,
        0x0,
        0x2,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x57fa42444057cf0c1d62ae3c,
        0x4f48d341183118d68ea41313,
        0x1d2d2799db056ed1,
        0x0,
        0x2,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x1521f387af19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0x28fcb26f9c6316b950f244556f25e2a2,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x9234d7617541ef6bd6a55e9e,
                limb1: 0x7a1353bb00de9de1d818c849,
                limb2: 0x21e43e4fdf41dbf4,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x30dd41ab3aae480eb7924f99,
                limb1: 0xa94c0b54f99635a912b59f0f,
                limb2: 0x187498a467804f5b,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BN254_3P() {
    let mut data = array![
        0x1,
        0xfd80632deaa29cb198348568,
        0x5e62be88814df2e34c3c90d1,
        0x275b81f9eb6df4b6,
        0x0,
        0xeb993ff1c0b6f504c42169e4,
        0x56d5f85957caaea17075a7f5,
        0x2f256d1ffa4c2a9f,
        0x0,
        0xe394dc50ceba45b3f1897ebf,
        0x2bcacca7a6478f52a4ab789d,
        0x1f7e16ee5b9be3a3,
        0x0,
        0xdf954a865a9f3dada6f81984,
        0xd91f26518ab3049e540781a6,
        0x2bd2033496453a66,
        0x0,
        0xa4d8bca6a08607a50d12c288,
        0x87dba1889204f5e1dfd91090,
        0x661978fb3ab3f2a,
        0x0,
        0x37899012bee0ea4cc0aa0f19,
        0xd2e392b4f1c8844c3e5e1bd1,
        0x137519b260aac181,
        0x0,
        0x6,
        0x1a46f3f364e8144b08da34d2,
        0xdd9485b0a90024a7cd4ef077,
        0x1ca1e21d48b58f3c,
        0xe0753233acdd33510d719ec0,
        0xcab0d1fa7995655de50fca96,
        0x305952358b78382f,
        0xe3ef7b9affbcef64b0350388,
        0x216341c7225114f7c7ff6f94,
        0x27ee30d05d431f5f,
        0xe033f3ca663f08d7df2f688a,
        0x9829a145a728cc46f5624cfb,
        0x2939b7118a664c35,
        0x73c7150a88f07439608e5f50,
        0x5de5eb02dece7c991be56d8d,
        0x37607cbe7a62b76,
        0x350fe11bad7872d4996e571a,
        0x8217ad46b0286f3550837675,
        0x124077ce3ea10d2a,
        0x7,
        0xb85ee381eeebfa5f25a0f5ee,
        0xe26d3a5a3674ae5a0aa61d76,
        0xa103f173ae0b086,
        0xe4be5be7e2ad9e177322b0aa,
        0x47a916286c75e7e1a399d6e1,
        0x5c3d2b8f8e3ac5c,
        0xcb47947ab122140350dcc140,
        0x472c7960f029cca883723c46,
        0x162469bbc774b0c6,
        0x8c36742120b8d098595468d9,
        0x82b72b43ba7c665c78ad604c,
        0x2befadc34cee68f9,
        0xc5ebba65db175479979184b6,
        0x764d04c1b7e7eaeeacd8fdc1,
        0x8dd75abfe8b4477,
        0xe01bde89c9d8a2b38a354daf,
        0x7f8500d3c7c5e816c6bcda1d,
        0xfa6f53511f8d487,
        0x1,
        0x0,
        0x0,
        0x7,
        0xd986106fb4761bb2be80c141,
        0x4a39341a33e24e08064338b,
        0x1ac4fddec6d35dcf,
        0x61d2d3d45fb5ff0c93a9284d,
        0xefc15c1b88dd33ba398458a,
        0x9e3fa6bcbd88b34,
        0xe985994ae774361d1781de63,
        0x5e08f4524edfac2076daf5ed,
        0x1c4b1bc0446f7a78,
        0xc9e5641f6b2033f607b8be9b,
        0xb5371cd677a3c2e9b96d8d56,
        0x130ca713cb014103,
        0x15ccb68c9212f6b331b5fe82,
        0x981fd9e32316c32fbc57b0d4,
        0x8fd110df11f8e6b,
        0xe1e951961b2ae429908658cd,
        0x2d70c87fab0bbaaeecf3ad7b,
        0x2d5efee5ff2a713c,
        0xec2b29d1e965d60f1be79ac2,
        0xc86487ad80469827e2c927,
        0x2542b3bcd65cf804,
        0xa,
        0x291caa85ccc3ef1d70e2e1ca,
        0xa747af0ea35e0b0e1ff25864,
        0x1e30bd45b0a21194,
        0xae3b13b7a808da46596811fe,
        0xd6fb42794561b7a4eacd84a5,
        0x114b782aeaab0514,
        0xf964f2e2d745aff31a194679,
        0x1d35266c4efc0d9bf2d54a42,
        0x1208eec0752c7229,
        0x8c1eaacad8d553fa80a435eb,
        0xf9f230b862e730b445ab6939,
        0x2d16ab7b5f48ab1f,
        0x36818b1973f39b8439d73ecc,
        0xaa90246d942da8adaa24d027,
        0x205c33bcf48579c2,
        0x329658ad28b700716ffad06,
        0xd6b3625c5fa2c8f4027600f,
        0x14b4fae81c2d8e33,
        0x8c36742120b8d098595468dc,
        0x82b72b43ba7c665c78ad604c,
        0x2befadc34cee68f9,
        0xc5ebba65db175479979184b6,
        0x764d04c1b7e7eaeeacd8fdc1,
        0x8dd75abfe8b4477,
        0xe01bde89c9d8a2b38a354daf,
        0x7f8500d3c7c5e816c6bcda1d,
        0xfa6f53511f8d487,
        0x1,
        0x0,
        0x0,
        0xe5077e3f38cc6cb749ebbffa,
        0xe3369b89ff2c68cd74755658,
        0xdd58fdc98d2b11e,
        0x0,
        0x0,
        0x3,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x57fa42444057cf0c1d62ae3c,
        0x4f48d341183118d68ea41313,
        0x1d2d2799db056ed1,
        0x0,
        0x236ca9312dad3661a37f2d6f,
        0x98424c01caad7592315715d1,
        0x795b9fd941b23c4,
        0x0,
        0xc7ab5834609a54b8993ffd79,
        0xe81cd490528b814ca632aace,
        0x2d9ff53d3009e6f7,
        0x0,
        0x3,
        0x5a92118719c78df48f4ff31e78de5857,
        0x28fcb26f9c6316b950f244556f25e2a2,
        0x8d723104f77383c13458a748e9bb17bc,
        0x215ddba6dd84f39e71545a137a1d5006,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0x5f82a8f03983ca8ea7e9d498c778ea6,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xa505aa539534e1ed3825e1d3,
                limb1: 0xd3d6e50ccbd336be810ae134,
                limb2: 0x2b8806194c015dab,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xe3066db5d6cc9577162aa35c,
                limb1: 0x3ab20c13b3f5fdea9441aaa8,
                limb2: 0xc21ee843d06bdd4,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BN254_4P() {
    let mut data = array![
        0x1,
        0x3d5b6d73f46d6a1d2553f62a,
        0x23e8534652433fec3459778b,
        0xe6ecb79b6793c21,
        0x0,
        0xb54039549a15ae51f6f4d8a3,
        0x5af0e845e40438f42809cbdf,
        0x23059439622a9612,
        0x0,
        0x5df5ed47ddff37d52f2dcd48,
        0xe14caa9d6785a746cd6c886f,
        0x24bf2770978396f6,
        0x0,
        0x796c87926571220ba9403bc9,
        0x7f858cf42d732395434196ea,
        0x2f607ab06345c8a3,
        0x0,
        0xb2ed556e27e3fe007b580b85,
        0x6fb4f2de94796c6379f93a42,
        0x26601f9174590a47,
        0x0,
        0xefdd6fe8a9de1f198d002e0e,
        0x3b5889970086bf66a5278a09,
        0x1acf18e63f5fc023,
        0x0,
        0x7,
        0x173703f288add02cf68f8bab,
        0xd87a9bfea581a2a079f20d8c,
        0x18c5e77c6c9de0da,
        0x172809614eda5a06ab17da8c,
        0x979613bda70537e7b4e2d582,
        0x1fa8702c258b7f55,
        0xbbc6ba9952a3cdfa5612ef1c,
        0x2fb1abe98b79a2d6139ad17,
        0x12fc4aff0c36cc52,
        0xb07a62768dee64a7dd6b8e6d,
        0x945ffcc3b6c0753241f88d6d,
        0x10ba1ccc5f33e2e4,
        0x898fd4ddd5e54ce57a0d119f,
        0x2114a92dcd3ba909c487c5d6,
        0xec16db3c262919c,
        0x2b094ee593c81047077ddfe1,
        0x6c33498c2f6021d2476beac7,
        0x235798ec09fd4c2d,
        0xcc46f197c46c82d77fa40a0c,
        0xd43eab665858d35d276a6bdc,
        0x1e28a96c3e78d0c0,
        0x8,
        0x7a0042576fe79ea2d72fbf76,
        0x7ece73a485416e213a2e0f38,
        0x13f4b238f7e64fbf,
        0x2014494d065480ec0faee95c,
        0xc548e13501bf20b1f985a819,
        0x1bf6078e5090b359,
        0x95c121cf8d2c851ea48605a3,
        0x36ad92792f9d6026c9e631b6,
        0x1c20631bf23e68d4,
        0x8cb54f9bf44f371ff3e3d76f,
        0x1db3321dac1491c79933023a,
        0x24223afa237333fd,
        0x76b000a7a60c69a3fece4c2f,
        0xb8d6c41c7bb079c0cefb56af,
        0x17e4e3bbb0cc5934,
        0x676d7abd2043d1a8bb60807,
        0x8c73e16dd3fe6c06aeebdf91,
        0x1b53f81343161b1f,
        0x69ff0105b5cc208583f6976a,
        0x207f543a4dd6d739d108a0d2,
        0x19384d417eecf87e,
        0x1,
        0x0,
        0x0,
        0x8,
        0x35d2e00fc45a3225d96aa005,
        0xa9c0e17a6049ca92a68cca3e,
        0x2c441a9baea63de2,
        0x4f43de8a09c496f7c12ec563,
        0x94153afa40873f1b3984d08e,
        0x21dca73ab1ec0cf2,
        0x728e07119fb02eaf13c6267a,
        0x6e702450475a242e65cc5134,
        0x187d99bb5e379110,
        0x75c8a33ec21930d40e022558,
        0xd62083d385671caad569ddd9,
        0xfb085a7319a7c6c,
        0x538ef2051d8d1003c0dbe269,
        0x5b8ffdf3d3cd8446c26752f3,
        0x19d2af8ba877d34d,
        0x521a6162baa49cb41d5a6b3a,
        0xf29c4a57abc55928c4fb96b2,
        0x36214b9421cac95,
        0x94d7335cc3037728c93d8ef6,
        0x58e20a2e2d4f4378e7e0f075,
        0x18aa982ad793b4ca,
        0xdc6692095e0f11ce36881c2b,
        0xbffaad5d58de7cbc035ae092,
        0x121d604607b8889c,
        0xb,
        0x58efc7913964fd1ad12411b,
        0xc41b15370e42f2061708c318,
        0xb79c83806814f14,
        0xf7cb1159d6dcf6ad568fbecd,
        0x978a5de883bc09b8550f8db9,
        0x237dc838108079e3,
        0x58d19ae16b650345151513a2,
        0xebb871b50d56c816c6312a92,
        0x23fcdae0f5899a52,
        0x4f3c9c10d4942bd501e14b35,
        0x67477e90867c72bcd6c440c5,
        0x1f92c6419fdcab63,
        0xb340b6298038a5aa5b1fd35b,
        0x7f2ca21d71cddd393774d704,
        0x2dc15dba0927ea4,
        0xd84213b88af8244096ae232a,
        0x6b68ab55a895f37fa7a6fb46,
        0xd53ae6ff91d79df,
        0xf9cebd929d728082cecda31f,
        0xe90a35f929666b9dd4a0f8e,
        0xf0285d8ddd6dd24,
        0x76b000a7a60c69a3fece4c32,
        0xb8d6c41c7bb079c0cefb56af,
        0x17e4e3bbb0cc5934,
        0x676d7abd2043d1a8bb60807,
        0x8c73e16dd3fe6c06aeebdf91,
        0x1b53f81343161b1f,
        0x69ff0105b5cc208583f6976a,
        0x207f543a4dd6d739d108a0d2,
        0x19384d417eecf87e,
        0x1,
        0x0,
        0x0,
        0x67a3b03db210c3d1ac641267,
        0xbca4ff6b8d127f40faa70c40,
        0xe139134afe03b39,
        0x0,
        0x3,
        0x86328bc409261901de071b70,
        0xf9e94852ed9b9e9559aa47f4,
        0x58c81d6da064f70,
        0x0,
        0x5093a8eb21e866fff5f2474b,
        0x5cf19489c16d914597dc5daf,
        0xbcf2ebbf3d16fd1,
        0x0,
        0x5aaab6bc61ae3d685b354540,
        0xdc3747e95c6d93df710faba2,
        0x915bb0ebc51bed0,
        0x0,
        0x4,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x57fa42444057cf0c1d62ae3c,
        0x4f48d341183118d68ea41313,
        0x1d2d2799db056ed1,
        0x0,
        0x236ca9312dad3661a37f2d6f,
        0x98424c01caad7592315715d1,
        0x795b9fd941b23c4,
        0x0,
        0xc7ab5834609a54b8993ffd79,
        0xe81cd490528b814ca632aace,
        0x2d9ff53d3009e6f7,
        0x0,
        0x163df40cafbf585ca5b2ab44,
        0xb4752e4666c88dbbe23783a0,
        0x1a801462ac9cb657,
        0x0,
        0xac9b557d7ca8625d957263c6,
        0xdc6f75fa8339a78b998ae54a,
        0x28683293b6494d9f,
        0x0,
        0x4,
        0x8d723104f77383c13458a748e9bb17bc,
        0x215ddba6dd84f39e71545a137a1d5006,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0x5f82a8f03983ca8ea7e9d498c778ea6,
        0xb5d32b1666194cb1d71037d1b83e90ec,
        0x28045af9ab0c1681c8f8e3d0d3290a4c,
        0xd3fbf47a7e5b1e7f9ca5499d004ae545,
        0x2ebce25e3e70f16a55485822de1b372a,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xda530556c75d2e27b35e716b,
                limb1: 0xe263c10943a7c230d41bb940,
                limb2: 0x1d051a29c6a2eafe,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x679ed4b58350eefe8c88ae2a,
                limb1: 0x46b4e4ba8a6a9374a0120664,
                limb2: 0x121c2c711b7c7f40,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BN254_10P() {
    let mut data = array![
        0x1,
        0xa8fe14e41d021c0098f41db9,
        0x2415ee74ea2d8a16be23c8c3,
        0x2cdac994a6af8a9e,
        0x0,
        0xe51e7f6bff3f9043ff9db5a8,
        0xd01c5413a4e3e65bff22023c,
        0x115761bb38bf47a,
        0x0,
        0xb5bc4819a87cda76d5cd1bfd,
        0x3c92050f4cab4b26e0ec3317,
        0x8266bb77dfb91cc,
        0x0,
        0x9ec8caf20263f3968c2f082d,
        0x2949dd333c91a24ca5b1bc11,
        0x1f06b2f54ae7599,
        0x0,
        0xc6cdc2fa18c6e707e5d78d36,
        0x377232d75b8be869b8959bd8,
        0x4207c0370668ed5,
        0x0,
        0x46b8414153c4ec540ab28023,
        0xc9f385581bc31efb42e49218,
        0x1d3cccd80c3f27e4,
        0x0,
        0xd,
        0xa0d036b9d8dac711c46a8e5b,
        0x424a4f4ebedb26810a91e2f9,
        0x21b3c40db0f71ac2,
        0x939fde666f6098e135b645f,
        0xc435c243ad1710a46c7619cc,
        0x1c8b15408227e173,
        0xe55d5b087195adb306675890,
        0x934c585b8ec86fdf4e4996a4,
        0x1a22c3aecb2210c3,
        0x851de4a524f970c41bee32,
        0x4eff9ad8527a46aa3e28070f,
        0x133eb1f64b025ae1,
        0x664861d6dedcfa5237553f6d,
        0x1247e793f32fcf87e8611d3a,
        0x166282826d512112,
        0x279424d5f24276cb590af7a5,
        0xf0bd0b65294e84770f503649,
        0x22682db4aae857d4,
        0xb75fdfa463800f85ca077946,
        0xb0f57cc0205e8c8bbcefb368,
        0x394b0e6dc5e0b3,
        0xcb9af5b19f7e6407832d0b20,
        0x950c3464977c9bb19bc20315,
        0xb0b2066bbc89b9,
        0x8c9f39a10eeb7ab0a1b2b189,
        0x20b20b6862bebd51ff8bcf58,
        0x21c67b6541b9028c,
        0x269c7bffec3a82d3b9b275e4,
        0x6a246058ca51f88ca6e33450,
        0x1edb382e7530e70a,
        0x80afb287228a2d646ee3dc28,
        0x7f5bed7811ba67032e3e4bd3,
        0x29a3cf58e8ba74fe,
        0x57521d34cc1e808749f82b9f,
        0x8bf66b43a83f2dace2a9cebb,
        0x56be0acaf23403e,
        0x631f747ad27f136ec9b76d74,
        0x6e54c4b25015fda7ae29b2d8,
        0x1fe764014b1ae118,
        0xe,
        0xbd7fea01c0dc2ce839cfc5c3,
        0x2cfc3d29dcdd3cad08fb0afe,
        0x22ccda6b24175278,
        0xc4d9d94a7e8ae3725ce89eea,
        0x49d1d70e6c98504aa98f5b03,
        0x261402c495ae52a3,
        0x558adb919d05951e1c8a8acb,
        0x9523495728387b424ed3e0ad,
        0x16ca268c065a6b5e,
        0x7f19032989d281622502e7ea,
        0x5a98dcd79e905b073e4a9453,
        0x20ac46459e90cce1,
        0x422e047d5d1679f7d894031a,
        0x49833bc4df1c1cbcaa1d1c75,
        0x264dd1a02fef24f,
        0x57d32b492742a8d6f2278e89,
        0x5fb49ee3235875a4f4c82a5c,
        0x29ab24dc55b77571,
        0x6f45297d339ebc4131ba47a0,
        0xcd0afa845b70666df1118024,
        0x2ce1ce2bcb6ca377,
        0x71d21c69c36f0a025437a736,
        0x5632bb65fd8caeafd01b3e5b,
        0x7d6c9d12f180ebb,
        0x90acdd6a7c30f45f4be28143,
        0xe71effe4331c71ca516343a3,
        0x1cd5d220887ecbd4,
        0x987d00b12d05a212e7937458,
        0xa3c5696e0f07da530800c722,
        0x30487be468a194a0,
        0xf4ee92f048038e707943e24b,
        0xe1be4df693dc2e311b2a42c0,
        0x2e0fba0ac038a25b,
        0x1c34d6363014a3c9d1847f64,
        0xae156c663959c35884ef826f,
        0x9811738ed61aa4f,
        0x9f8a851558a8729e44fd11fc,
        0x917cfa8291a16bb598e8b39f,
        0x72bc99641bb37fc,
        0x1,
        0x0,
        0x0,
        0xe,
        0x494d3dda2d7654364e8b10c7,
        0x68f6a6612d357a6bfc0ada33,
        0xe320c87b4109b89,
        0xfcf2840bb93bf51a3f1bc9f3,
        0x170aa3c76660f5005ae313a8,
        0x41c8f81242800c9,
        0x7f09e3639ab09bda00e1325b,
        0x67a0b1563f6a7b38e819647a,
        0x27d4e5fc86c91c3c,
        0xf902dda99eebcd1638ffae16,
        0xe8b0dbf5e50a2452c6520adb,
        0x13634a05ef9c6ca0,
        0x22a3d40290cc17d10ddca30d,
        0x274d4f348934b557d58cd623,
        0x153c9b7a962cecbf,
        0x2b2a0a62d4febc7e3a1b287c,
        0x23086a6d2e90e28499e9bd1f,
        0x100e0d38faa36c73,
        0x26bf8abd590fcd7db5bbb7cf,
        0xc63ab0a182937a410d5770b,
        0x232e4169d32a2a72,
        0x19a7ff3003d094b58f95a325,
        0xce3dc6f0e622b3d283fa37f1,
        0x2d34150c8290ed94,
        0xb2a206fbd9bbf03b78af7d0d,
        0x7b860a4ee472618d3cc70f77,
        0xff426608dc5c638,
        0x53d9236509a4d24ec0a5c7b1,
        0xdde731db32ad2e66cceccc02,
        0x1c56a5213801ace3,
        0xcf1ce736a03fafc04773dcb1,
        0xa43f529c4ff76edf77e2a79b,
        0x285c9b1733b6f8ab,
        0x548265e6703f6a6319d53223,
        0x3f6b3deb0e6a48720c28fade,
        0x289fdd837fa591c7,
        0x3b93500ac06c4f816fbf8cbb,
        0xcad14d34d77a70e6c82eba4c,
        0x6135d21877f6f91,
        0xff0b09be02ed674c21723cb1,
        0xdbc367df184ca4577c3c74c2,
        0x21265849a7100e2b,
        0x11,
        0x679c28eaca536e8afc7556bb,
        0x16542c109395054bebee4bd9,
        0x79df25ba9e2b715,
        0x7da9f6c5035f922965bfe230,
        0x6cd4f9be42c64024cdab3be8,
        0x11736b67fea7b796,
        0x982ec8279af033437d22a31a,
        0x719964ef728196954fa3776,
        0x13fa253131dda1f2,
        0x69e75e63e61298e0f7de82f3,
        0xcc264843b58b9d0794d7f2d6,
        0x240910563d6678c8,
        0x8b63e6c295ce5159e6a4a838,
        0x265b8a5d09eca680a7e6b063,
        0x2d429a129eab2991,
        0x23aefdc55e6beb5e698a3e91,
        0x8b5054dd0dbdd31866a8200e,
        0x29ea9c863ebeb35,
        0x93931ff9704d11e130bac6f5,
        0x98c8fb412c5d85384afad50c,
        0x1624c5705d41d6cb,
        0x97a459baa76397fed53af8bc,
        0x4c1b6df6d7c228cc1a6ed787,
        0x19e93a8d90471e81,
        0x38f62e6e23946dc724d517c4,
        0xa4711322b9ab1a48b9ef2024,
        0x1f63fe582cd0989c,
        0xff66cbe9064dfe355efdacd3,
        0x8f6a65ab0403ec4e428f95d7,
        0x2c8e568061bc80dc,
        0x17487592e718110f368c5642,
        0xd27cd426349d302a5b15c6ea,
        0xd90c98cc2d1551,
        0x7cd9957fd04e53a5e7f30228,
        0x390eff605da8637648b0605f,
        0x8f4c9586f722a9a,
        0xeaac563fade6dd6de0dad05,
        0x9fec133f426ac5163b397770,
        0x15678a344ca19c6c,
        0xf4ee92f048038e707943e24e,
        0xe1be4df693dc2e311b2a42c0,
        0x2e0fba0ac038a25b,
        0x1c34d6363014a3c9d1847f64,
        0xae156c663959c35884ef826f,
        0x9811738ed61aa4f,
        0x9f8a851558a8729e44fd11fc,
        0x917cfa8291a16bb598e8b39f,
        0x72bc99641bb37fc,
        0x1,
        0x0,
        0x0,
        0x27bfe01163e9f19dd2bd6894,
        0xd61f0efd7f26f1034d1d6459,
        0x177470953c6f0c39,
        0x0,
        0x0,
        0xa,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x57fa42444057cf0c1d62ae3c,
        0x4f48d341183118d68ea41313,
        0x1d2d2799db056ed1,
        0x0,
        0x236ca9312dad3661a37f2d6f,
        0x98424c01caad7592315715d1,
        0x795b9fd941b23c4,
        0x0,
        0xc7ab5834609a54b8993ffd79,
        0xe81cd490528b814ca632aace,
        0x2d9ff53d3009e6f7,
        0x0,
        0x163df40cafbf585ca5b2ab44,
        0xb4752e4666c88dbbe23783a0,
        0x1a801462ac9cb657,
        0x0,
        0xac9b557d7ca8625d957263c6,
        0xdc6f75fa8339a78b998ae54a,
        0x28683293b6494d9f,
        0x0,
        0x5c4f5dca0c973b7f70bfff9,
        0x188c2afab11eef5d48ecda3c,
        0xc2fed35d36c49f1,
        0x0,
        0x9d7244ea10697ca42e2e066b,
        0xfe18a519c7d68770dc48dbf9,
        0x149bb528db998529,
        0x0,
        0xffc057151b06c496e6fdd440,
        0x5a01bae0c7441f08c7af1cf9,
        0x274e0e02529e6d26,
        0x0,
        0x65ceb8977413bc9798681ecb,
        0x19ffb287b45234f0c28fd1a7,
        0x28dbbd2f9267be76,
        0x0,
        0xcfcdbfdb2056ff1a64bf1d47,
        0xf26fe2dae9f693d9b4aab2e6,
        0x12d66ad4802d841e,
        0x0,
        0xe6e34ebfa2e18dce86cadbdc,
        0x7ce096238b3d4b1b8fba6a55,
        0x2e0a660b1549800c,
        0x0,
        0xd2dd03b29d58d045656ecf33,
        0xeddac3cf7a123aae2180739b,
        0x215bec6e0a03c924,
        0x0,
        0xe5201e51828eb11589d8619f,
        0xa6563c760aa3a2c9d15af235,
        0x7ed0c9b2e7811fb,
        0x0,
        0xc33ac21c67b06a9994457b4c,
        0xa9aa5573bf7a92aab85366eb,
        0x1a407281e1d92e91,
        0x0,
        0x5a306649d971b115d71a78b1,
        0xa70687a9b5132e26b2cfbb37,
        0x2031920af5d6c9db,
        0x0,
        0x58a3cea1103f16402eb74c08,
        0xdfefcd91df2f4295ec21e03a,
        0x1150bcc09ac40007,
        0x0,
        0x57ed7d356f91abcef751889f,
        0x5c668cded3599c9af5a7e5fa,
        0x2ccf74197cb9bc13,
        0x0,
        0xa,
        0xe005b86051ef1922fe43c49e149818d1,
        0x1f507980eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x154bc8ce8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x2305d1699a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x144a7edf6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x21c38572fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x2b70369e16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x522c9d6d7ab792809e469e6ec62b2c8,
        0x85940927468ff53d864a7a50b48d73f1,
        0xdc5dba1d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x119d0dd09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x2592a1c37c879b741d878f9f9cdf5a86,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x7f5a9b9409f2cc39825a02c,
                limb1: 0xcae0e79fbccb0daf22e3d147,
                limb2: 0xe6a2d797f40f61,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x2a28940c5db0b16b11bcb83b,
                limb1: 0x909e67a632b9f3e09db0636b,
                limb2: 0x18643fa5fa438363,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BN254_11P() {
    let mut data = array![
        0x1,
        0xa4e9d42c4ed18ac03069881,
        0x430b8983b1602ebc0b92c3dd,
        0x215e0ad0b61c3ba7,
        0x0,
        0x29374db9af3727acdb719d14,
        0x8f0b649a57550ea3400d7258,
        0x57f13ea0a5116d1,
        0x0,
        0x7c1bed7a1dd4670ae45b7994,
        0x80db4120b76d34ded07ab3a9,
        0x14ba44b66a71cd9b,
        0x0,
        0x74e5fc28e276d235d1b51027,
        0x5c50d140c5b2467fd1638754,
        0x28a1c2734df788e2,
        0x0,
        0x9601fb89849de58bb7982e2a,
        0x9464b8e42291bd64dbaff85e,
        0x14b2c4ed33019c5e,
        0x0,
        0xcdf0b2efd01e1db8ba6e824a,
        0xeb61112483898f8d3eec9504,
        0x1b033eff00d012b7,
        0x0,
        0xe,
        0xa253c3bb56bb400b38946fc6,
        0x57325d1dd4104a477e6511ae,
        0x11390ea11ebc343e,
        0x2da3f9b9dc742a4ece63b962,
        0x2ceaba410b2895d30ae37672,
        0x2544dcca16b57d88,
        0x575730462e4a9ad94dd8808e,
        0xc3becb1e00ae1c6061209c22,
        0x2557423a8efc7d3a,
        0x883f8db9b55d603fe5c12fce,
        0xf705fe67a6ab8ff323e470bc,
        0x65a08f4856312e6,
        0x76dd984d1ab067a83bf22865,
        0x8dd88abff5eeec5719ebbb8a,
        0x2d4feb0f47d6f036,
        0x6876eaf5d612e80d9ee1128b,
        0x7908e072c312b21c85a82e5f,
        0x572edd818d3223a,
        0x7ff22f253cd807bc6ad37b9,
        0x4c1cefb34acb55f178e5e532,
        0x2dfa5ed8a9947e0f,
        0xddbed06992f11fd17af45bbb,
        0xb29b1aa09cd4e481b1e14e8,
        0x2a4b860e15388e05,
        0x21429302cfcf5558cafdcc77,
        0xc4c75a1e64c5182b4b6f7f91,
        0x2cb194603c3912c7,
        0x2e71c3439a774e7c69830662,
        0xf454d73a2d058a69a9d75ca6,
        0x1155c8161507fe88,
        0x8fc13bfdb1794be137496892,
        0x76b34e828f21129c7347df22,
        0x5288f37aa5814d0,
        0x7976ee60f1b3b92c9bbd2ffa,
        0x942add39a42027e36749af7a,
        0x6d76a36d4332ef9,
        0x9328b9afe79e8d236c80e2a1,
        0xa761762858a161355d3529a6,
        0x7498bcba0365370,
        0xc8ef6f4ff1ae13d6ddb82dd5,
        0xd61742eeca63c2c21fa30e30,
        0x226abd11af262721,
        0xf,
        0x22542ebf422060d183e85945,
        0xa922c461a9ea51d796277897,
        0x2c7ed25e9e2abd78,
        0x35625986b44d6341cb131816,
        0x6e992e12ba8a087753b8dcd1,
        0x25b5e8db9924b383,
        0x993ede4c53cb17e8aae88930,
        0xb2b6959fef795d663d07f9f9,
        0x2c3d80de84ea045d,
        0x77498d312479039407a7ba4f,
        0x820ce1be004789e87d517fbf,
        0x11113605f0d75fd2,
        0x7f369a24faf63641df11706d,
        0xa2045e132e39ed492850bf3d,
        0x143037cafae22d3a,
        0xc94ec87781dfea204df53ce6,
        0x9b55a6ac15942f1459af76ec,
        0x23ca5b33364a1325,
        0x8b43793aba3e73a50df89b65,
        0x5d61a8d53d395a2852747ddd,
        0x2d3e8179a7d06884,
        0xa5c6739ea67aa4fdff0e7cd3,
        0x4451ff9abcb4f61947de6484,
        0x22ed8ffdb9d49fdc,
        0x7c07136edaab3fa848da201b,
        0x7e8f46235fecfbe972111265,
        0xbf30b18bc3f1362,
        0x39f4a294eb84c38aed8baa5d,
        0x6989907e145fb0ec9e185c14,
        0x63f9d0d2e147681,
        0xe21569628123768f79c4c00e,
        0xb0564d082f5f8e68fed92209,
        0x1507cdc790ca26e5,
        0x40b995d776f33b5043d33759,
        0xa6de1f384c0b1491978ca562,
        0x1bcaceb6c08c80c8,
        0x7560ffcc1097e360e8c42b61,
        0x91ac9b6a1c53d16eac20dc4e,
        0x1f0fa4bb540f3a64,
        0xbe86d0717a1d01daf35bdbc3,
        0x4590e9b2d2fbfed135a5cc88,
        0x45af86b13d383f6,
        0x1,
        0x0,
        0x0,
        0xf,
        0x3b2614f99f75503456f518c,
        0x8f12494b43b2aa54f89fe92c,
        0x21cb9311dff58552,
        0x65480b3ecfaeb104e9fa47b7,
        0x3881cc5aa0032e2ea91fe5ed,
        0x1af1c13320aeca76,
        0x2feefaed07dac17cd0fe7b5d,
        0x58fda4721eb3c8fa4665077a,
        0x2bfba635c286126d,
        0x8eaa381729a70f4ebade2579,
        0xbb7e9e37c825cb8c2a7660df,
        0x2b2bea401ff3d969,
        0xbc8aba10bfa8a3ec6fc25aaa,
        0x4f5281432e923cd09f019667,
        0x2191939954e12eca,
        0xda4684b4be0a934f0247d304,
        0xe4e9b5832eae67aa0c6d1e62,
        0xc426a9758c2db17,
        0x273076cad2a82d7b9f1820c9,
        0xca06c1bc484405f9f9f83e5b,
        0x2cf53b1409438e60,
        0xd9dc4f0525bb0c55ceba6270,
        0xb52ee529b5e3f20360fc2365,
        0x18abdf8ab4f3edf,
        0x23ebe302f174728a19d17775,
        0x8267be0446de517855937e2b,
        0xcb6b6582664e336,
        0xf610692122f6200862e09981,
        0x6550aab9c25699807cb89dd1,
        0x239ba8bc198616bf,
        0x19edcd0f54fc286cfc6c5973,
        0x7df7bddfcfc3c08b3f0d8c95,
        0x618b4743400e819,
        0x8b14a5b70edaa1707ccac5d2,
        0x1ecf8156be264f9722dc600f,
        0x17d437b6b190b5af,
        0x92a3ed570c9e455c48f142dd,
        0xc719a95a07813de0009dcbcd,
        0x198d68b802c27960,
        0xe660de03254ec324007e92a3,
        0xe91b807bde4a2e34d72e6967,
        0x7264a9fbffac007,
        0xb4c6a641fff371ea7c43f643,
        0x4b99af834cfd732e30a9a7d6,
        0x27ce69bbce6ea43b,
        0x12,
        0x9618f7234e200a46dabf1141,
        0x8ac7c1b7fabc44cb937394a2,
        0x24b3da36181cf816,
        0xcf437779a4a71197b03f4db4,
        0xdb2afecb2c9b68aacc27c150,
        0x10591dad090ada36,
        0xfad905ca83202f8c4fbfa102,
        0xa7833572cb696777881518c9,
        0x23efe5b5cc5accc5,
        0x1fbf0bc5736adf76c2628aeb,
        0x76f923e5293f9733769a8d44,
        0x2f4e25fd8f7f3cc6,
        0xe22292db2ceeedd9b74d6ecf,
        0xe405bcdf42351f979da84566,
        0x17df356c767fadf,
        0xbbd5d80b250932050b51480d,
        0x5bc6b880abb1e18a83921f0b,
        0x66fa71f84335d51,
        0xdfbe99399ed2ba3ea81a94a9,
        0x71410b1a336f8f48ae2ab9a3,
        0x79fcf1a44b3b8e2,
        0x9fa65fe676250d0e2b42ec58,
        0xfe59d17661561ed9d0e917a8,
        0x1c304ade65fccc7b,
        0xd4f23836d5c11d0250069ff0,
        0x5eb3335fb3d9ca731861438b,
        0x173f2e0a89d5ad23,
        0xd0af966c40ac322efe1e9d35,
        0xe1ae1498f8d71490953c2788,
        0xf990a2e50dc2bde,
        0x7b231aabb1a3f07ebb62c26f,
        0xe4b45b4647d0f0991566f57f,
        0x13c5c6ea9cfd439,
        0xd5c20a68036465823bd6c8df,
        0xbad95e15c28ce140a13597fa,
        0x2eef28ca1cb2f592,
        0xc9340cdea50b557ff6de31f2,
        0xadeed74f6658747d73781bdc,
        0x2a5ee5967dee55b,
        0x1da9dab6ef7a7c2053d85357,
        0x81090a20a8538adc9fca87a4,
        0x2218b708cc44b2c8,
        0x40b995d776f33b5043d3375c,
        0xa6de1f384c0b1491978ca562,
        0x1bcaceb6c08c80c8,
        0x7560ffcc1097e360e8c42b61,
        0x91ac9b6a1c53d16eac20dc4e,
        0x1f0fa4bb540f3a64,
        0xbe86d0717a1d01daf35bdbc3,
        0x4590e9b2d2fbfed135a5cc88,
        0x45af86b13d383f6,
        0x1,
        0x0,
        0x0,
        0x9d8d10ee0df699ff9f340708,
        0xf7af79b6db56213845b0bf92,
        0x50554707b6f2d34,
        0x0,
        0x1,
        0xe3d3ea3e9162addaa4651c44,
        0x16820e07bcb82938d13b55bb,
        0xcdcbaa3160a7dff,
        0x0,
        0xb,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x57fa42444057cf0c1d62ae3c,
        0x4f48d341183118d68ea41313,
        0x1d2d2799db056ed1,
        0x0,
        0x236ca9312dad3661a37f2d6f,
        0x98424c01caad7592315715d1,
        0x795b9fd941b23c4,
        0x0,
        0xc7ab5834609a54b8993ffd79,
        0xe81cd490528b814ca632aace,
        0x2d9ff53d3009e6f7,
        0x0,
        0x163df40cafbf585ca5b2ab44,
        0xb4752e4666c88dbbe23783a0,
        0x1a801462ac9cb657,
        0x0,
        0xac9b557d7ca8625d957263c6,
        0xdc6f75fa8339a78b998ae54a,
        0x28683293b6494d9f,
        0x0,
        0x5c4f5dca0c973b7f70bfff9,
        0x188c2afab11eef5d48ecda3c,
        0xc2fed35d36c49f1,
        0x0,
        0x9d7244ea10697ca42e2e066b,
        0xfe18a519c7d68770dc48dbf9,
        0x149bb528db998529,
        0x0,
        0xffc057151b06c496e6fdd440,
        0x5a01bae0c7441f08c7af1cf9,
        0x274e0e02529e6d26,
        0x0,
        0x65ceb8977413bc9798681ecb,
        0x19ffb287b45234f0c28fd1a7,
        0x28dbbd2f9267be76,
        0x0,
        0xcfcdbfdb2056ff1a64bf1d47,
        0xf26fe2dae9f693d9b4aab2e6,
        0x12d66ad4802d841e,
        0x0,
        0xe6e34ebfa2e18dce86cadbdc,
        0x7ce096238b3d4b1b8fba6a55,
        0x2e0a660b1549800c,
        0x0,
        0xd2dd03b29d58d045656ecf33,
        0xeddac3cf7a123aae2180739b,
        0x215bec6e0a03c924,
        0x0,
        0xe5201e51828eb11589d8619f,
        0xa6563c760aa3a2c9d15af235,
        0x7ed0c9b2e7811fb,
        0x0,
        0xc33ac21c67b06a9994457b4c,
        0xa9aa5573bf7a92aab85366eb,
        0x1a407281e1d92e91,
        0x0,
        0x5a306649d971b115d71a78b1,
        0xa70687a9b5132e26b2cfbb37,
        0x2031920af5d6c9db,
        0x0,
        0x58a3cea1103f16402eb74c08,
        0xdfefcd91df2f4295ec21e03a,
        0x1150bcc09ac40007,
        0x0,
        0x57ed7d356f91abcef751889f,
        0x5c668cded3599c9af5a7e5fa,
        0x2ccf74197cb9bc13,
        0x0,
        0x529118e291927516dfbcba2d,
        0x440af959472c61e99aac7977,
        0x218bbc79509b59ce,
        0x0,
        0x226044f7331ccf82af7afb39,
        0xc1953da25a89d084dcfaea76,
        0x1042fdc36b43dac3,
        0x0,
        0xb,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x154bc8ce8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x2305d1699a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x144a7edf6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x21c38572fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x2b70369e16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x522c9d6d7ab792809e469e6ec62b2c8,
        0x85940927468ff53d864a7a50b48d73f1,
        0xdc5dba1d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x119d0dd09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x2592a1c37c879b741d878f9f9cdf5a86,
        0x30bcab0ed857010255d44936a1515607,
        0x1158af9fbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0x1b45bb86552116dd2ba4b180cb69ca38,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x8f1d04d9dacdeb4b06745aae,
                limb1: 0x5c68471b1c99a97baed7f423,
                limb2: 0x1e8ed25080c73efd,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xc479efb2cb1c33352e438dbe,
                limb1: 0x1f9fcbf3fb537094c9816470,
                limb2: 0x2e15234a5a95acac,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BN254_12P() {
    let mut data = array![
        0x1,
        0x1f2ed8ead7825d6227a2e710,
        0xc3c4bd5c326e62c0d073278a,
        0x41ecba35acee103,
        0x0,
        0xbc578f842de9f9057251b2b,
        0x990a731415ecb85325ee65cb,
        0xef006b2ae6412a4,
        0x0,
        0x6b060be900adf51db24b93c2,
        0xe211853a49d037c2aedb05c0,
        0x2fd88991beb996d5,
        0x0,
        0xeac51b48bee8ce0a419a1961,
        0x46e77a7125a4720306020b33,
        0x1e3ff97b6a186d15,
        0x0,
        0x849035c2f92c50cb7408178c,
        0x1fdc6ed37697f959fed0be32,
        0x95eb78e21264372,
        0x0,
        0x65b0859a419a51aa527eb91f,
        0xbd1039ab1559ec7f1438d189,
        0x12a14b7c0f53cbd4,
        0x0,
        0xf,
        0xdba1cfbfb553c9708b1b6f8,
        0xd27cb35e2435808d3d9d9592,
        0xc7672d4dd340455,
        0xa5e51a5218113b20fb406a45,
        0x853de354f1b37feb7cde0fb8,
        0x54fa58db3214189,
        0xe92284a336f8f44c2e8a0aff,
        0x3020db9013ed9b70c8c88580,
        0x64e8d595ebe2ee0,
        0x5dce4179270138f2144ba894,
        0xfb09bb19dd772da61f9527b0,
        0xa0e0b1f0e3f3288,
        0x541112a8b689b1e0dd123fa1,
        0x4170a8395685454ca4ceb37f,
        0x2630e0df53c978ad,
        0x2a8b0dcd36675794bfd11c59,
        0x60b5e2f1b10b178147bce3f4,
        0x8f002c200ce6356,
        0xd65bff901f4c11a3251272a5,
        0x17774785561ebeff64db3182,
        0x1e5fc8b1478efbb2,
        0xeb89349bcbcaeb291695e31b,
        0xf4258ef487c60cf2e7c70f69,
        0xfb1c092f70aa1bf,
        0x3c9fe6e73146756e909c1079,
        0xd83f20b6526107e4b6296e2a,
        0x121064f099584ac4,
        0x392c3476ee0d16183855e9ca,
        0xedfaf92b4215e59a999beb7e,
        0x1ac8021e68e5ec56,
        0x6f6fc43ea113592d50a52a9,
        0xe75fc1b72aadb8d70b25e2b9,
        0xe5b2b9db798e9c4,
        0xe3a79d0d9b45472f2c94cf86,
        0x814033be82168cb88fa069f5,
        0x20cd7af8c4441336,
        0x103d32d5c7a6af08a7d6648d,
        0x6c6a7d738d633e7bd6a29ad0,
        0x74adea0421f2873,
        0xa7018b7af4d927828f5eba10,
        0xd04056fbff7b6d9d68434618,
        0x4609f0ac78dad43,
        0x58202575bb60591bca9fb192,
        0x3c440de8e9e19788ae2777f7,
        0x27450831b82a00d,
        0x10,
        0x5ce71e3ebb9322d2babb96e,
        0x9a8e37fff81d70da36a2da4d,
        0xf9e2a716eff4e77,
        0x1656cdbba00893537d156b6f,
        0xb16109d91853b2a18b92d0de,
        0x16b98f9672472783,
        0xd1da63aae232f783a164068e,
        0x5c423321b4a9a9097acb215e,
        0x1382361e1189c237,
        0x70e7afcfc4d97cb381494093,
        0x2f7dd527b2cae0aea1d674e4,
        0xe855d5142cf3d6f,
        0xb5e5048da2b79161084705f3,
        0x113f436fec782306645bba53,
        0x2dcbdce1c470e9df,
        0xe3a23e1d65814ea184e68698,
        0xeab8709030c824eb0cc69317,
        0x7feb55c8e88b060,
        0x644a649da7a9d39eb7e23b98,
        0x8c4f12f75d824d2e6b93bbf8,
        0x2dd03538a87010f9,
        0x660e1b22b7d9d37a0cc87a01,
        0x82ec14ff5e81a58d6b52cd85,
        0x757e4c8249191f6,
        0x996edd8e3d0689b2dce28402,
        0x77f7fc80d4b60a2979279644,
        0x1461bac07140dd97,
        0x93c8788dfdbd7671822e0180,
        0x2dbd31feb2d9ce98e53045f1,
        0x20e9a76c49053e2f,
        0xf1881ed6c1d464e1634ae489,
        0x8d2a2c97ab8853851f8bf7f2,
        0x2cdc818bb30ec282,
        0x40d4bb9759b8b19f1420f8b0,
        0x1f3d5cb3e910d3a73f05b59a,
        0xbfdc41d41f91e3e,
        0xf0fe117f9f724716561c4dc8,
        0xeff952d87983e4ed2a913d0,
        0x21e090caf6adc803,
        0xffdf9bfa5df38011006396bf,
        0x9b59e7fe8b4aa07cf1ccb18b,
        0x2d93d543a652267f,
        0x4347e7611fa7720c0c9704b1,
        0x8bb2f4921b0756de2414cdd9,
        0x145d7f80b24ccd18,
        0x1,
        0x0,
        0x0,
        0x10,
        0x2fd162adc358a746ffeb5585,
        0x7116d92da4e0758605378936,
        0x1e0077a088692490,
        0x74fef16d4c7c8edb380e9ef0,
        0xaf47428daac1b97ecbc9f3e0,
        0x2343b9d0a1049324,
        0xd55c9a3740bf5e49d0484963,
        0x21e9489903a9d42d6b71301a,
        0xb06df33f15b87ea,
        0x23bf955bf4fd4c4e5f4037bd,
        0xdaade2c90e099aeda0a58451,
        0x2e48afb3760f9a5a,
        0x85f251faf77834d4ad8de70b,
        0xa865ee67b474bd802cafde26,
        0x2377b14a4a3dfe9c,
        0xc1385a45a72239eafae5705d,
        0x3cefe88d182290ba39f05cc0,
        0x2ba5dc5d1e66cd18,
        0x6748300ca6a6d1be1785621d,
        0xdba75586edbdd80669ba68e1,
        0xc7ca732f7877bd6,
        0x94f7ce9b2828eb317f791cab,
        0x6cbdc092846635d451133762,
        0x26e635ecd410b863,
        0xeda8b1b6e7e4167bdcf2358b,
        0xfded84448f3e97d4c0e9fac5,
        0x2a0539b9bc39659d,
        0xfa8cd85c6424b9d17d0e0309,
        0xa3234503d8beee9dd7d3e6e8,
        0x168bd168635e4197,
        0xc8e5860a31ceafe25c6316b7,
        0xa71290da38f28296c3f00846,
        0x26b41fb0f5c5bee2,
        0x789a1950ed98a2dcead7fd27,
        0x79312e7ed669ec50df714b75,
        0x1e05eb2d10b43d89,
        0xc4bbfd96087f0372c60e4436,
        0xe7761a3ad224e46d72c6b42,
        0x1b7b7f486d00f938,
        0x9801e6475083bfbf9f30b8f0,
        0x58484127e451db0db4c5d23,
        0x9484d7ca0b6bcb5,
        0x8ed826031ae2cd5824024df0,
        0x68496d739c2c60a790f7e3e1,
        0x1207a522951cdf38,
        0x8edce3e6986a29fc1395204b,
        0xf1bb0a39116f46e43c797bcb,
        0x21ee6b4c120a127b,
        0x13,
        0x116b55abc32b968783032c4a,
        0xcfaaa7ffe858528ea3e88ee7,
        0x2eda7f544cfdeb66,
        0xda929ea5a3f92de39ec34506,
        0x5bd2d7d4c779bf870b370808,
        0x13c8605075a3d661,
        0xd1d60736a785a740baf1663,
        0x5c7653ae9c7ba2bed8dff98b,
        0xa2253e7536ba67c,
        0xf013b6c5fe251c30d70a7de0,
        0x70b771c08efcba8884a4ce68,
        0xac9f3f2563b669b,
        0xfeb07bbcd3cda3320c738573,
        0xbc2e03055938129bf221c024,
        0xef03ae31c0504a3,
        0x7cc11e0312b6e36830179a56,
        0x1c6b84d2470217caa11edaa6,
        0x2b7e5633bd23d35a,
        0x64717e010775534b1f78fb86,
        0xab7a3cea46cdbf211e0d6919,
        0x6c911a2988a8fde,
        0x7f9d8b688e247fb8562376af,
        0xe1b33cb7867bbb510ed2b852,
        0x136f3cc750f3ff98,
        0x477d0c3ae0745fa343111557,
        0x9a50205c2d68eb09e0bbeb54,
        0x14bf972b0119a8fd,
        0x4ec0392d28a11ec58d72458a,
        0xa4e61d86730d083dec21b8aa,
        0x2fc48e97c11c8b33,
        0x69c2e28c8515e9f085af2d0e,
        0xb9ca0f595e17ef619af3e03b,
        0x2d24cc857b5a992a,
        0xf37b45c70e10127940c870cb,
        0x1d5fcce60e672cc19eb74c81,
        0x7f6b8a555fa9828,
        0x95df17f263d33386d388f04a,
        0xea1b661a469fd8ca2e28ac41,
        0x25c2bce76aab55e4,
        0xb7d1931e274d40cfdafeb0f1,
        0x3647136fc8e42be32e6dcce2,
        0x246b15fe02705584,
        0xa23aa72d7c8e7bac6169097c,
        0xa05f4b3b8a57fe413c2b494,
        0x18b1f42c77ade55e,
        0xf0fe117f9f724716561c4dcb,
        0xeff952d87983e4ed2a913d0,
        0x21e090caf6adc803,
        0xffdf9bfa5df38011006396bf,
        0x9b59e7fe8b4aa07cf1ccb18b,
        0x2d93d543a652267f,
        0x4347e7611fa7720c0c9704b1,
        0x8bb2f4921b0756de2414cdd9,
        0x145d7f80b24ccd18,
        0x1,
        0x0,
        0x0,
        0x8ec89affe312ab6015940027,
        0xe0bf38ea6a487bfa0e70f4bd,
        0x7789e050d3cc399,
        0x0,
        0x3,
        0xe154069ffcdce112a9cdbd3c,
        0x2cc0b3504b1fd2403126c659,
        0x986cae069e80919,
        0x0,
        0x1ce49e2fca0d58795215a5a5,
        0x709521f0b6f932f20168fcc8,
        0x847207be1d4e88b,
        0x0,
        0x6ca073f5a24840c486abfcec,
        0x7f504ade9e52662202029123,
        0xc60d786be16c898,
        0x0,
        0xc,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x57fa42444057cf0c1d62ae3c,
        0x4f48d341183118d68ea41313,
        0x1d2d2799db056ed1,
        0x0,
        0x236ca9312dad3661a37f2d6f,
        0x98424c01caad7592315715d1,
        0x795b9fd941b23c4,
        0x0,
        0xc7ab5834609a54b8993ffd79,
        0xe81cd490528b814ca632aace,
        0x2d9ff53d3009e6f7,
        0x0,
        0x163df40cafbf585ca5b2ab44,
        0xb4752e4666c88dbbe23783a0,
        0x1a801462ac9cb657,
        0x0,
        0xac9b557d7ca8625d957263c6,
        0xdc6f75fa8339a78b998ae54a,
        0x28683293b6494d9f,
        0x0,
        0x5c4f5dca0c973b7f70bfff9,
        0x188c2afab11eef5d48ecda3c,
        0xc2fed35d36c49f1,
        0x0,
        0x9d7244ea10697ca42e2e066b,
        0xfe18a519c7d68770dc48dbf9,
        0x149bb528db998529,
        0x0,
        0xffc057151b06c496e6fdd440,
        0x5a01bae0c7441f08c7af1cf9,
        0x274e0e02529e6d26,
        0x0,
        0x65ceb8977413bc9798681ecb,
        0x19ffb287b45234f0c28fd1a7,
        0x28dbbd2f9267be76,
        0x0,
        0xcfcdbfdb2056ff1a64bf1d47,
        0xf26fe2dae9f693d9b4aab2e6,
        0x12d66ad4802d841e,
        0x0,
        0xe6e34ebfa2e18dce86cadbdc,
        0x7ce096238b3d4b1b8fba6a55,
        0x2e0a660b1549800c,
        0x0,
        0xd2dd03b29d58d045656ecf33,
        0xeddac3cf7a123aae2180739b,
        0x215bec6e0a03c924,
        0x0,
        0xe5201e51828eb11589d8619f,
        0xa6563c760aa3a2c9d15af235,
        0x7ed0c9b2e7811fb,
        0x0,
        0xc33ac21c67b06a9994457b4c,
        0xa9aa5573bf7a92aab85366eb,
        0x1a407281e1d92e91,
        0x0,
        0x5a306649d971b115d71a78b1,
        0xa70687a9b5132e26b2cfbb37,
        0x2031920af5d6c9db,
        0x0,
        0x58a3cea1103f16402eb74c08,
        0xdfefcd91df2f4295ec21e03a,
        0x1150bcc09ac40007,
        0x0,
        0x57ed7d356f91abcef751889f,
        0x5c668cded3599c9af5a7e5fa,
        0x2ccf74197cb9bc13,
        0x0,
        0x529118e291927516dfbcba2d,
        0x440af959472c61e99aac7977,
        0x218bbc79509b59ce,
        0x0,
        0x226044f7331ccf82af7afb39,
        0xc1953da25a89d084dcfaea76,
        0x1042fdc36b43dac3,
        0x0,
        0xf1581f4d2c98dddd1045823a,
        0x4c70cf5d1fe8d72e2b0eda8,
        0x2dd6cf0e5b99415d,
        0x0,
        0xc3ebcba51d8891914acc5129,
        0xa68f2b05936baf6578514dbf,
        0xc4404c6b9b7453d,
        0x0,
        0xc,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x2305d1699a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x144a7edf6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x21c38572fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x2b70369e16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x522c9d6d7ab792809e469e6ec62b2c8,
        0x85940927468ff53d864a7a50b48d73f1,
        0xdc5dba1d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x119d0dd09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x2592a1c37c879b741d878f9f9cdf5a86,
        0x30bcab0ed857010255d44936a1515607,
        0x1158af9fbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0x1b45bb86552116dd2ba4b180cb69ca38,
        0xc87a746319c16a0d0febd845d0dfae43,
        0xe0062d1b29a8b06daf66c5f2577bffa,
        0xa25b59fd92e8e269d12ecbc40b9475b1,
        0x2689f61688c132adefbfc19ee8f6cf32,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x744865055917ca125348c4f8,
                limb1: 0x5c545244519dd218c72f1665,
                limb2: 0xcc6f1868dc806a6,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xcbb128d3e724151be03bef12,
                limb1: 0x3d9dca95a86b6ea20b40f368,
                limb2: 0x1d2cfc3fd3c3ff7f,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_1P() {
    let mut data = array![
        0x1,
        0x29bab3bb3c5a3498ef52c10e,
        0x1a2cb9165f39a2b96e111e1d,
        0xa1e1aa80472b71ffe237f65c,
        0x8d6b69927c3363c5eccadbf,
        0x720d96acc81b6630196ccf5d,
        0xd84a5f28b95187d31a44eafa,
        0x78579d836e4f34e9573fa265,
        0x621f59b924be99226c509e5,
        0x1f331a3fc12126eebdae3f59,
        0x2cb7dbc661cf888114515a2e,
        0xb20395314f340002f87089d1,
        0x17c6859d5428edf721de9025,
        0x66c8ca463bb31730c280588f,
        0xb724561772624d4a07bde932,
        0x619e8301e670ee3f7b307d70,
        0x9a6e9b54bb78587420cb983,
        0x1256cabcc66af1452b941a8,
        0x8a3694cb214b8b9219d6b558,
        0x62da7a2bdad5e3fd7f424ab,
        0x75d1733043d8ba7f9ca3713,
        0x1c80747ef95f644c801874ee,
        0x33d485f1cc6e1729a06a74a5,
        0xefa381e03300893b110fae06,
        0x1435ec08d73e466ee22f00d1,
        0x4,
        0xcea4001df6285b3b9c0325e4,
        0xadd7d3c21f404b4a53b83637,
        0xdd0283da466e41049aeb881b,
        0xbee8b5c088653bfedbf1ddf,
        0x721a3b605a37248d5060b724,
        0xc3da967ab9bda8bf6c49d70a,
        0xf16a6f2d1023de2dcd615d0b,
        0x10f870d696066bf0d7a2b96d,
        0xbcccd3e9ad98bfc7e008c2c1,
        0xdf435c23af072250f84205fa,
        0xfafd31af04409630963a12ed,
        0x18b7a91bef8188043826874a,
        0xab06d2fbd3bfa9007c9628c6,
        0xd50a5c552316326aef3fd2d7,
        0xab4b642180d5004d76391a7a,
        0xd5aecee468da5edc901b728,
        0x5,
        0x6d6fcde1c965a45030fb8188,
        0xc6f8d909abd6cc7fe52c47b2,
        0x463563977c58192f6751e1c6,
        0x2dee83f5ff61adb6751e780,
        0xc5104f2b4788b4e21f87ca87,
        0x9c6f91847e7b45c516e5b390,
        0xf1a51a2c4c52017854191bf0,
        0x13e3049128746c973b0112c0,
        0xd66a55660cbad2d81c942101,
        0x2a9500df7dd86a0c3d3426fd,
        0x7adeea640c46fb1cc7eb6754,
        0x11ae48b391951ada0c7c5c0a,
        0xe4f0ad73192d1502c42dba96,
        0x56782f2600ba98f8e5ab3cb1,
        0xb0f891f4a53a812ede013f11,
        0xdf39ad25e4cf04151557bbc,
        0x1,
        0x0,
        0x0,
        0x0,
        0x5,
        0xf1ff1cc854b82283408b059a,
        0x66f848287c9a69d7d2d044fa,
        0xa1690cfa0f1cc1f374a983b9,
        0xe48c872ec70e4930a927f4b,
        0xe5a90639640398dfb14f8a86,
        0x564e7055c9a42a3ef90e1d82,
        0x4a7c934efe4a20b3a790d12d,
        0x52fcd47c0ba995c40df35c,
        0xe8873c60a9d14ee408a3e9a8,
        0x65cb64aa2fb19f20f9d3b1b5,
        0x323277ff5d8937969b1bae15,
        0x17886ea5b8d73a92b132e447,
        0x850695ec08055c116684a194,
        0x8d326887251b4bb46b41f2f8,
        0xdf688fbf41336c4805f88e52,
        0x8aa01259fbb715b488f98d2,
        0x8e3375b56deaad28e22ca036,
        0xebc110580a53fe3dde27aa81,
        0xbb0728790a1d3c253adfbac8,
        0x142ab0a6b85d975920a77398,
        0x8,
        0xb5bf378725969140c3ee0620,
        0x1be36426af5b31ff94b11ec9,
        0x18d58e5df16064bd9d47871b,
        0xb7ba0fd7fd86b6d9d479e01,
        0x453cadf025d3887e202a1b,
        0x3c2bce2f15da34a7ff92ce47,
        0xfcb1622b03e2235275d53784,
        0x188dc85f551fe8e0ab153e0,
        0xf7015598beed4b6072512eae,
        0xdbf25e3c09ffbbe8b7789bf9,
        0x64e44fe1682d556938a377d1,
        0x12b6fef9d3549e339bba20bd,
        0x9e8a83aeba1bf85b41b3168a,
        0x5277f05fc15f441b3e813a7c,
        0x838051bb485386e0f84cb88d,
        0x6ab2fb4662a0eac16708706,
        0xc5104f2b4788b4e21f87ca8b,
        0x9c6f91847e7b45c516e5b390,
        0xf1a51a2c4c52017854191bf0,
        0x13e3049128746c973b0112c0,
        0xd66a55660cbad2d81c942101,
        0x2a9500df7dd86a0c3d3426fd,
        0x7adeea640c46fb1cc7eb6754,
        0x11ae48b391951ada0c7c5c0a,
        0xe4f0ad73192d1502c42dba96,
        0x56782f2600ba98f8e5ab3cb1,
        0xb0f891f4a53a812ede013f11,
        0xdf39ad25e4cf04151557bbc,
        0x1,
        0x0,
        0x0,
        0x0,
        0x19131446ea3f9cf59ca4cc7f,
        0x21177881cd80e4bc8bd802b9,
        0x26ae1124ccbba1f6c359dc8b,
        0x55add1a064ea91940ca17d4,
        0x0,
        0x1,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0x1,
        0xb4862b21fb97d43588561712e8e5216a,
        0x12cfa194e6f4590b9a164106cf6a659e,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xb603ffc901ec7f3e42216ae4,
                limb1: 0x269adaf11286bf338b9dacb1,
                limb2: 0xab33b097e05378c0867894f,
                limb3: 0xbfd8ef26d4610b8e77f5c28,
            },
            y: u384 {
                limb0: 0x9afe78c2bb0f305eccbffb90,
                limb1: 0xc8b06f9aaf49eda1f9fd6cfd,
                limb2: 0xc422cd476b9611aef3a1ee3,
                limb3: 0x1201e1e9a2b0867eb9da1725,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_2P() {
    let mut data = array![
        0x1,
        0xa94cb70d1045a5f5122c6cba,
        0xbef689cbbb5a28729c98e623,
        0x46458a56de645221dec95c2b,
        0x6cb227e4fa20b20e3b8f12,
        0xd9923850c9fad3cfd8e1f841,
        0x508312ef6baba21ccc0c32a0,
        0x6eecbdb5721672de7f553c8d,
        0x186630555406053c24845a69,
        0x3e7154dc547d7dcaeefcf5b0,
        0x459890a5fd7900a43e66fc93,
        0x36625c251ff9adb2f43a4bf8,
        0x70c5545c1b87b1aafea6915,
        0x9fb6b25570fe0d775b020303,
        0xd8209910bc52b435cd4ca96,
        0xfe778adca225e978274d0406,
        0x36fa9591acef2fe92c4ca85,
        0xfc619000f58d8d41da4f7c95,
        0xead352a2b4154967b1957b16,
        0x79bf9d707833c14ff9d96a24,
        0x18e483eca3abedc74f6222f6,
        0xf49507312253ccd5057e12bc,
        0xa3dd8b643c6ee7623a8d0bb7,
        0x78798796d531318014948231,
        0xc48d18b3950768af11b67f9,
        0x5,
        0xe95a6d90166613aa0e7da45,
        0x8a9d228204ea73a7cf181adc,
        0xeb7afc3217431e95343623d7,
        0x1565ce55e88350a6644d3549,
        0x1793925ce40715613a023044,
        0x86814071e9a3d52577eabd35,
        0x846cc2e6b229231c795e4663,
        0x9c2373e94baf0c8e3c58a01,
        0x379b2628030ebe4101bf216a,
        0xf5d5e80ec8c3337b7222f831,
        0x1c63589a9ce457da8f4a4a46,
        0x127fb647eff6033d1716a17c,
        0xff3c21296b81f389a12c6cc3,
        0x62f66154343dd93ee32dbafa,
        0xbe354fa916f961703f128400,
        0x15880d8c6d75d6627c5eeb5a,
        0xf4e7162fc59d0aa0671b1005,
        0x33c6cbe48907c0d6051237df,
        0xc31d23db74f4b3be686fcfd8,
        0x1538ba032650cb516b33395b,
        0x6,
        0xec30906d3d9bf95b075129d0,
        0x20420ff626e8204b21e78e1f,
        0xc6dfb68d58d278dbe9fd2431,
        0xb13b4001d51fd84b2c1326f,
        0x2f3eca5c26f85df7a305aa53,
        0x9ee1c82e158b8981b604d779,
        0x9d22e3d73b2c2cf3ee9700ed,
        0x5462fc0adf4c7938067dbc9,
        0xc7dff2ec21d04077b25b02e7,
        0xdf999eadd7904d632cc38c96,
        0x9bebd5c6e42a19da3a2b7012,
        0x4aabb5c826ce85d84397e4e,
        0x96a182376551f651d2df2e0f,
        0xbfb8bac4fbdd6cf5b2bb951c,
        0x89738a4099a0b94cd71c6b1e,
        0x3402b670c0eebef1d93d15c,
        0x3cff56052335a55cc87021d3,
        0x9c7af421c9b9a9b13e3aebd2,
        0x386a0be8d7c27267a1a6f298,
        0x5329693c5deb644412101d5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x6,
        0xa3023c2a3ec890f0a65c5990,
        0x1777522ce53adb4b70366b6,
        0x7df1eb16fa7549a758a28364,
        0x7e325959332f5983daaa51,
        0x70ec66a8819cbe013b89e290,
        0xc0b60484c13797e0193a9ef,
        0x5f25642a1ef5e5447d2af2bf,
        0xc39efa83304396bd10d084c,
        0x13956a068d3754fc1438abfc,
        0xed61ce7dafe9e9d81a7a2a01,
        0x2c09640e648738aad325cabb,
        0x1387081eb1397f8e4f89f31,
        0xf447c2d9b174e75e559ee21e,
        0xd2d6b33528be72b2bb61e872,
        0x7b5ab47059efdd02dd34325f,
        0x15c38e141211ebdbdde105fe,
        0x7abbc9a30c78c01076798c4e,
        0xc836b9b8760d8cb24cd92b15,
        0xabfae22504a8e07c6296df33,
        0x3ec262d2e8c3b6cf6c730f7,
        0x1cfe4539bfc076f4d0419c57,
        0x52693d6313e49bc50018d85e,
        0x8ab4ca193525306394075dd5,
        0x103b9faf543b1490744d27a1,
        0x9,
        0xff6e41b53c70e56c1d44fc95,
        0x19d76d37a4ef8b0868f23880,
        0xd8332d5dfed297eab46f7e05,
        0x124dbe163bc80f787fe92208,
        0xbcfb29709be177de8c16a94c,
        0x7b8720b8562e2606d8135de4,
        0x748b8f5cecb0b3cfba5c03b6,
        0x1518bf02b7d31e4e019f6f26,
        0x1f7fcbb0874101dec96c0b9c,
        0x7e667ab75e41358cb30e325b,
        0x6faf571b90a86768e8adc04b,
        0x12aaed7209b3a17610e5f93a,
        0x46b6994ad2e3d2a252cde20c,
        0x1f24fb0a165dd421ecd5e292,
        0xecaddf8fbf555e0f466ed0ac,
        0x1814619c4d8dad41291077e1,
        0x71e82270f9cff36ac4c686f4,
        0xa99cc61445c13a22904486c3,
        0x3b7f66a335beab0d81adb890,
        0xf78258befba0a39d03b68,
        0xc7dff2ec21d04077b25b02eb,
        0xdf999eadd7904d632cc38c96,
        0x9bebd5c6e42a19da3a2b7012,
        0x4aabb5c826ce85d84397e4e,
        0x96a182376551f651d2df2e0f,
        0xbfb8bac4fbdd6cf5b2bb951c,
        0x89738a4099a0b94cd71c6b1e,
        0x3402b670c0eebef1d93d15c,
        0x3cff56052335a55cc87021d3,
        0x9c7af421c9b9a9b13e3aebd2,
        0x386a0be8d7c27267a1a6f298,
        0x5329693c5deb644412101d5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x25e7545e0bb13601d6a3d895,
        0x355b3c0ea8168f4bb457a4b7,
        0xc8b9abcf49dddc1071b51d98,
        0xa79cd9f7cc1287424955a69,
        0x0,
        0x2,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xaefd0d854043fd325dd3c34f,
        0x9b63c98d9a7845c52e1e2b0f,
        0x9db0be660d847ccc58358f3f,
        0x17cb6c41f0c4e1a7394ab62a,
        0x2,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x2a43e70faf19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0x51f964df9c6316b950f244556f25e2a2,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x32321a942ef961780ca91c06,
                limb1: 0x57e5605fbba104f908e63665,
                limb2: 0x843c0bbd70b5a837b690bd95,
                limb3: 0xbe7f58485672327a5c447c1,
            },
            y: u384 {
                limb0: 0x2150b2afd97c7793d20d0ecc,
                limb1: 0x4f6a0ae7eaf68e727f2fcb5d,
                limb2: 0x96407ddecb1fe770faf07c8c,
                limb3: 0x4c4183b2e457821188d59e7,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_3P() {
    let mut data = array![
        0x1,
        0x11823dbc15aaa1c4744e3ae6,
        0xed165517e5e9ea86ef83626d,
        0x599bb805cf82df0ad7b88d4,
        0x2259d656631cd6cb7ca503,
        0xa52767bf9500996dcb6f06de,
        0x4c3edc0a3d7e785efff8d773,
        0xa810050dbd5b772d7d4a6ec2,
        0x187f28f27554dc36632450b4,
        0xbeae5e8027eab18d8ba094b5,
        0x731aab37aea92eee9fccf8f,
        0x31bba431f14bff8a86f8ebcc,
        0x20679302b8899ab4845e9a1,
        0xefe258df34e11aff024e164a,
        0xf4d830d93bddf2773a7468b4,
        0x2fe489afbf0e10e359231e86,
        0x182a85bb31f64b21d56f0d3e,
        0x985385c853deff5bb4583470,
        0xe599c2621df11becc1f3d4f6,
        0xdd4fb32dace0fc7229e86c53,
        0x10e509e0db936c6250450203,
        0xdd875fe78892d835f6e33a20,
        0xde7c5230dbf7253a9c70f8db,
        0x388a8293eb7837b46117e229,
        0xac01465b94f9a4d0372b51c,
        0x6,
        0xbc1e05c0227c575e30d105ac,
        0x1dffff89e64fadf1b649cfad,
        0x6df32f3849319fd23262b50c,
        0x1c1d5983dfe76f10347c485,
        0xfdb2fb9bc68713cdc1846989,
        0xcb8d40b055c9c863734fe1c6,
        0xbe7ca4a6319ba6808c6be229,
        0x94d975b9e93a91207bc0a0,
        0x8a24300c61f0ec07a560c578,
        0x23c5002d374ade4f8b460920,
        0xab792ad7c93ef71dcc6d22eb,
        0x11639db9af36ff9d1b0e164b,
        0xc67a82697756f98d7abc85d3,
        0xff5abda6878be9baf8844f96,
        0xd4d0b67968ee67128e7f0d66,
        0x7f7d2d4560fde87f6fd4a1f,
        0x945c929e7d1bb76c0b82a103,
        0xa64280484f41fd5308778db6,
        0x6af48829da55365a18aabdff,
        0x1551c5964bd3d357bf78c5bc,
        0x49b07da468dbc595a83a00ba,
        0xac90aeefcfc1a31e79746fb,
        0x5b23d1d777a2dcb986c636b4,
        0x18515fd919ff279da39a6728,
        0x7,
        0x71b7d16d920024d8f983ac5c,
        0x23ffc9135767cd78976276cc,
        0x41989cdd521231458523fda1,
        0x130cb4aaf1a90531512a2577,
        0x1932446c9088123264c944f5,
        0xd7372393ba527fa43630d1c9,
        0xa283da7ad1d72dc31cc94380,
        0x108474728327ed8dcc50457e,
        0x7fe3a75d3a93f9f3a64f7e1c,
        0x3de15a3e7b8f75efdc854365,
        0x91070bdb161f1752f1e8b0df,
        0x184d7146c441974030aa52a8,
        0xbca9ff613c2faaf5c4e50258,
        0x627e7e59646cc7eef899d98,
        0xce23559b5ef83b7f8029f911,
        0x68c6f25d079f30dcbc8aa7a,
        0xc8421a3679e4b5259e061c10,
        0x689e43588559c28dcb97cc04,
        0x549c303492b9203ec1091b2b,
        0xb8a0ee440dacf949e0e5677,
        0xe914ba60357ff078612fe110,
        0x52838ce21a637b3564829896,
        0x68691acb51b80981714e418d,
        0x12550dcbe6494ac64dad204,
        0x1,
        0x0,
        0x0,
        0x0,
        0x7,
        0x2cff4a3847d8cb95431876fd,
        0x8a1fdb0863617383e3bf8cd6,
        0x1e72bf1c76761957dfcdeecd,
        0x180cf134ae42339fda0bbf61,
        0x87e94dda6059b05659435433,
        0x7279d74d2f8edba9204b12d1,
        0xefbdf42e3c989e7064305106,
        0x93bc4a330bf80ead6af279b,
        0x3cda46c206a444536659c3e3,
        0x4f5d2ffde17c602799076fc,
        0xfb302726c41ecac78622cf4a,
        0x13f7d20eaf03dfa19876a055,
        0x8f8748d2f7598c990ffc1208,
        0xe20b36e21522308987df848c,
        0x1397d2fd4ef156dfc2e30735,
        0x1737beaacf1c14dd2e1cdcba,
        0xea52be922510227eb77806eb,
        0x22ef5fa1b59cdaf4dae398ef,
        0xb04e854c25db97df90bdd451,
        0x13243ee59c6960ed0877cd28,
        0x889e513b7889d5bbbf4e12a3,
        0x967a3ebb6542cc508b898a7a,
        0x547cc6c8a2ae094e8397ad14,
        0x14f36893f32bd9b33548a7e,
        0x4605eddd67a958812305331,
        0x8fd0a840e1d7ee93f66cce22,
        0x9dac94d2923546cc8afd60b5,
        0x14ea25df89be19ba7e7777f6,
        0xa,
        0x643745b6d4029363e60f5c1a,
        0xc19d7f0b703d499a2031db34,
        0x7fcb19c67f5a2e0c2d85d105,
        0x1830aed753a44790ae714670,
        0x22111b2ce2248c99325be7e,
        0x8e7ae90cfbe812489b6b4727,
        0x378103c7e6e20028c1ae884,
        0xe0fadf5999fe9029b09c68e,
        0xeb929d75bc52e7ce993ef86f,
        0xc1f2f1170a2af55316110d99,
        0x7a3928e62b167abced138b3e,
        0x13328f5c6486a931e156537f,
        0xb30bcef2c8bfd0b00d180b11,
        0xd56e9608b9d2095036dced30,
        0x36da4673697bd3be9246cf25,
        0x133d5f57fa10eace353127ac,
        0xd792ad47041ce6c8dce25fdf,
        0xab4e8bb3e2579d93273801de,
        0x6e5d419e53cd17b439e38aaf,
        0xaaa8c2f13935eabae524fef,
        0x72e290de5694bbd52b0f57b1,
        0x20bebb25ee6c6ca14fe3a5c2,
        0xef5fca30f887f1d3c39ca455,
        0x2e1a2cf8454035778f9f303,
        0xbca9ff613c2faaf5c4e5025c,
        0x627e7e59646cc7eef899d98,
        0xce23559b5ef83b7f8029f911,
        0x68c6f25d079f30dcbc8aa7a,
        0xc8421a3679e4b5259e061c10,
        0x689e43588559c28dcb97cc04,
        0x549c303492b9203ec1091b2b,
        0xb8a0ee440dacf949e0e5677,
        0xe914ba60357ff078612fe110,
        0x52838ce21a637b3564829896,
        0x68691acb51b80981714e418d,
        0x12550dcbe6494ac64dad204,
        0x1,
        0x0,
        0x0,
        0x0,
        0xbcf0ccf89a3290330e3558c0,
        0x8a72db2574312c6ef1ff7da,
        0xe5b3b884be6dae809a8b762c,
        0xbbda48a9ec27b0aeaa38d9b,
        0x0,
        0x3,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xaefd0d854043fd325dd3c34f,
        0x9b63c98d9a7845c52e1e2b0f,
        0x9db0be660d847ccc58358f3f,
        0x17cb6c41f0c4e1a7394ab62a,
        0xcf86158ab69213388e721bb7,
        0x5f7812269d790797cad9aa15,
        0xb1c3622a0177001d9ed8e25f,
        0x115cf429f459884785c6ba46,
        0x1e81341e2f3f988ff115dda3,
        0xad22946489db6ee4954fa5e1,
        0x83bed94412e19d92b73cc763,
        0x2074c7bceff87d0d41edba1,
        0x3,
        0x5a92118719c78df48f4ff31e78de5857,
        0x51f964df9c6316b950f244556f25e2a2,
        0x8d723104f77383c13458a748e9bb17bc,
        0x42bbb74ddd84f39e71545a137a1d5006,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0xbf0551e03983ca8ea7e9d498c778ea6,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x21b85c07d97d8ad7ed64cf5c,
                limb1: 0xc68ab576217c87f6afe7e8f6,
                limb2: 0x8aecb918175dcc693f68b02c,
                limb3: 0x16bdc982d01b9f8d1782060e,
            },
            y: u384 {
                limb0: 0x11cf0b8dceb54a416ec13f47,
                limb1: 0x81a05b3acc5b76a765127289,
                limb2: 0xcdbd38ba08efd726fae10661,
                limb3: 0x9747640d51b315635b0059a,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_4P() {
    let mut data = array![
        0x1,
        0xbc4181692563ab0eb1a31318,
        0x61ebbf0e84462f1e79d96252,
        0x3ed57b59ebb05f49e5578e45,
        0x85cba71b10f68d24eba882c,
        0xef7532546377fc0e87f0f47f,
        0xb3e379fdb7fffe0a18148be1,
        0x825aa84d33ad9b1f9abf50be,
        0x97a13125c28ee4a39d4f322,
        0x1b9517bf39f57f45bd768cb3,
        0x56ae645efa941498ade3d968,
        0x1702c9bbae1a182cbb312172,
        0x330fea96f28b19489357321,
        0x703735b4c7649cf319813732,
        0xfaef500d5a6be26ae510d4dc,
        0xc23221d9004dcc2188e1518a,
        0xd7db70cb60f5ba45d194915,
        0xb5e126acc0464686d79b1067,
        0xba7e52b04fbefd897bda1667,
        0xa34ca72e7aa959d64fa58abe,
        0x51da27c65a605812639db08,
        0xf74e08691a70739af1a84eea,
        0xb8233f6a0726b25c2ea31e74,
        0x42301f593d415c7eeb614c78,
        0x152bbc9d714256fd4c92ba1e,
        0x7,
        0xab03150ff0254cc4fde62692,
        0xf54ed0e1e0d55856a44e3815,
        0x48fed0ba1e843745cab26c61,
        0xeed16834eb2fd8c385a6ff6,
        0xcda84be5ac5e33be9223f022,
        0x969ad3445536419a7d29c06a,
        0x68941fda821e43a07ebab3fb,
        0xd33bbaee9c32e71079162d0,
        0xf3b4396da1532658eb375fba,
        0x5c2fb36aa4fd8dba15af7a86,
        0x49e51dba4ae30fb2306f227,
        0x99333e0a9058c9d252ea3ad,
        0x666a964f65e4f3a005a57dc1,
        0xc5f6d6b05b2527f751137734,
        0x434bdd6d610253f5d23f5827,
        0x1e9152eb0e32ac842c6c431,
        0x1c0a018b2139dd7c4f88d720,
        0x3c50e59e33405a7ed5d27a1e,
        0x9432455412019ecd26138506,
        0x195a3c5e8afef56721fa154c,
        0x5354c3ba67fee725e3b8b362,
        0xebddc562ad94fdcf82f63023,
        0x41398a1728bdc948474ea972,
        0x27b38a95838b2d6ffd8b2b1,
        0xaf985a92ddbd0c240090cb9d,
        0xbfa69facae222ccb2dc3927b,
        0xa34b6eb0d6d764acd38ff1d2,
        0x1020cba2eda24233f787aa39,
        0x8,
        0x2a8393e18eaacb3eec4d2ce2,
        0x52585e47a7749e6b9b3b6760,
        0x4bb7f9ea2dc363e180e9f1a3,
        0x47e5a2ed8de6d6f2b01e00f,
        0xf81aea78fec2371cb20cc61d,
        0xc4681f6dbd9f5757d932eb1f,
        0xb1de44f1962a18d368575e0e,
        0xb583f8b592d9c8f8a909f56,
        0x749eaa5708ce12112b6ce230,
        0x41e4c6f6f0334fb240382e69,
        0x53e1cab875e5eb81aa2aa92d,
        0x154718cf0dd68b14b587fe54,
        0x5f7747d41789800989219c36,
        0x61dd099f6d15065cee90c5bd,
        0xc8fcd33f8ff005fb2d346131,
        0x85075b2c465543f2aaf9fe6,
        0xaa8fea155ae84fc9619d7998,
        0xd3c3eafa88641a2af66013b4,
        0x77e268729739947af604ce21,
        0x14af57be4be336c9b7caf030,
        0xdcb52f0ead104cf02799c81a,
        0xd9671d72f6b3efb7d5b4dfa4,
        0x9b5bb408feae0b8c5182e313,
        0x1a8cea8e705c1b693a3681e,
        0x929fc03986f9e6a6170c6257,
        0x1e9748f7bd0f0c94fe18c143,
        0xaaff364ec72a2e1fb0e66ecf,
        0x19a3a61cec3cf3a4d3275b8e,
        0x1,
        0x0,
        0x0,
        0x0,
        0x8,
        0x16d019ac4e698eb0e0025c44,
        0x1dd57adeb8b759996dcaf9ba,
        0xf850c555ee12a1449262e912,
        0x900d64ef0b54c189aede6ef,
        0x203f7e28bcb0104cb7b5cb7,
        0x22835f7f6db5f6ed4e91a348,
        0xc3f22abe6514cf8068df33db,
        0x177fbc3d83ad6b8b78f752d9,
        0x409861d5620d350137bc1d07,
        0x1f16a5d1a9b96e8f804b2387,
        0x4358735b5fd23e8d6eb9bad1,
        0x955ba487344bd8a16bdb23b,
        0x9fc8fc8e4396c0ab9452f57,
        0xf6efecd6b14205ad381f5df6,
        0xf7ae85f4e81b671db146c1d,
        0x166c363e2501b56e4365c1a2,
        0xf25656b57acab61b80b1a7e0,
        0x5c599c897d0347ab9b1290c2,
        0x4b38d1a54722769d4c7a7dc1,
        0xc968c3c7a33a86f3231d570,
        0x67d765d8c54addd219741ee,
        0x36bf47ae70831a35b57fa736,
        0x7e7aee4392c427b54e340d70,
        0x3bb4a1a1ff03d749164cf0a,
        0x8ec85d7c1e2c80d69275fbec,
        0xaa56dc788cfe3300d48dd4e2,
        0xdc7a394f7ddab72a481cdd32,
        0x5f1f9490b9e908b7ab46cbf,
        0xef82cd239efc00aa23bdbf47,
        0x65d4e5ae62c6dbaf0295436c,
        0x6c7aa98fe5b3cc2d136d8c7c,
        0x69e051157324b333ff88a7f,
        0xb,
        0xaa0e4f863aab2cfbb134b388,
        0x4961791e9dd279ae6ced9d80,
        0x2edfe7a8b70d8f8603a7c68d,
        0x11f968bb6379b5bcac07803d,
        0x2f17a9e44109dc72c8336dc9,
        0xaa6fab15ffcc673b461fac81,
        0x842d66eef43117c8add8657b,
        0x135fec432b368ba3df26d5a4,
        0xbe7ea95cf53b4844adb488bf,
        0xd200a3f8dcba5c5ca4dcb9a9,
        0x85a4245baa31cb77ce1b6c76,
        0x7192d7d8ada7883f4cd022e,
        0xf70cb33232d1cb6510d3f30f,
        0x729bb2246517c1bb36d27e56,
        0x2c5f9a11090c3049423663a9,
        0xbbf1f0fb0f3d7d18aa4b7f4,
        0x8e5e92cf3c6676423883ac7c,
        0xdde55374fb1cdd9756af39f6,
        0xc784e035c5aa883065db5e57,
        0x101268c5dc3ac3e7886968f5,
        0x361f6692031045d1c9d457ed,
        0x40506a21d452186d785facfe,
        0x7e04ee050c26ce2dfcb122bd,
        0x1e94188706dab54b8f9f718,
        0xe4a648bb4b751aa1e5547ae6,
        0x3f76e2fa868d60206c43cad0,
        0x67caf91d1abb906622b9d170,
        0x6dac67d8f5988694ade6f48,
        0xaa8fea155ae84fc9619d799c,
        0xd3c3eafa88641a2af66013b4,
        0x77e268729739947af604ce21,
        0x14af57be4be336c9b7caf030,
        0xdcb52f0ead104cf02799c81a,
        0xd9671d72f6b3efb7d5b4dfa4,
        0x9b5bb408feae0b8c5182e313,
        0x1a8cea8e705c1b693a3681e,
        0x929fc03986f9e6a6170c6257,
        0x1e9748f7bd0f0c94fe18c143,
        0xaaff364ec72a2e1fb0e66ecf,
        0x19a3a61cec3cf3a4d3275b8e,
        0x1,
        0x0,
        0x0,
        0x0,
        0xb5094d6e473dc4fe361ffa1a,
        0xe61430ae362981216b670601,
        0x92bf2107944869747f9d2e23,
        0x7c0e49e8755c3a68d6930cf,
        0x0,
        0x4,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xaefd0d854043fd325dd3c34f,
        0x9b63c98d9a7845c52e1e2b0f,
        0x9db0be660d847ccc58358f3f,
        0x17cb6c41f0c4e1a7394ab62a,
        0xcf86158ab69213388e721bb7,
        0x5f7812269d790797cad9aa15,
        0xb1c3622a0177001d9ed8e25f,
        0x115cf429f459884785c6ba46,
        0x1e81341e2f3f988ff115dda3,
        0xad22946489db6ee4954fa5e1,
        0x83bed94412e19d92b73cc763,
        0x2074c7bceff87d0d41edba1,
        0xe2955c55da59eba4b7b57d3d,
        0x1e6629b0431bce67cf28c22,
        0x1c35b7efd5b67f87221b8bfc,
        0x3e53df9e3488a9e42acd87e,
        0x2e089afa726154d40dd12102,
        0x5391613ecf49db2bcf1cad86,
        0x84a2abb2de6b3a6e09026a50,
        0x19557a3a3c1d62a205d5dc87,
        0x4,
        0x8d723104f77383c13458a748e9bb17bc,
        0x42bbb74ddd84f39e71545a137a1d5006,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0xbf0551e03983ca8ea7e9d498c778ea6,
        0xb5d32b1666194cb1d71037d1b83e90ec,
        0x5008b5f2ab0c1681c8f8e3d0d3290a4c,
        0xd3fbf47a7e5b1e7f9ca5499d004ae545,
        0x5d79c4bd3e70f16a55485822de1b372a,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x7406fee5d57362d0bd20a5fe,
                limb1: 0x9c148946ef3f3c63933238ab,
                limb2: 0x29449d34c8a2d4f2985f3c36,
                limb3: 0xa598551ba8198a566f2d4be,
            },
            y: u384 {
                limb0: 0x79e483b729f05957e7c73f33,
                limb1: 0x3a0046ded0b81194df4ad0d5,
                limb2: 0x6bb49380867caf051586303a,
                limb3: 0xc750343cc7a561d93f3d0c0,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_10P() {
    let mut data = array![
        0x1,
        0x5f2ada774336a45ecf62362a,
        0x4b74f8047a30d7cd5bcc5f5d,
        0x9eea282dd082f595fdc26aba,
        0x54ab0b0091b895c5fa3248d,
        0xdb7536d889ac84120105f3b7,
        0x88a47633117d65876637fcc1,
        0x14cbeabcb8e7cb4ec229b6e1,
        0x6426446e29ee6d3f560c5eb,
        0x20a0291048775df94712faab,
        0xe744bc0f7775e3c299667d5c,
        0x793b9e683327dcf3437d8434,
        0xd24456162ce849532c9779c,
        0xad3167d767fac4f13bf846a,
        0x866a754ea57851841a3a1510,
        0x45f8856a8cec506e1744cdad,
        0x199aeb5e8172db7e05368157,
        0x35f1dd5d644dd4bbd00a403f,
        0x5d9e8cfbc0fff19f55b26037,
        0xac62483e573013eb3970c157,
        0x15a12f2577e2f0349db9384f,
        0xda40934fb776208d36ba7bbd,
        0xfbc55ff56d171d395214be75,
        0xb287cf3a691389b2a8ae376,
        0x656d5309ed918c88abc6651,
        0xd,
        0xaf141aaa8ea503fa55f1b71,
        0xa42969acdac6b769a057726,
        0x6d8086914a6bb0dc83f83619,
        0x11e24c30fbe9565d07e552c5,
        0x80279fdb9184720d1629fe70,
        0xea056698905d008edf56c0e6,
        0xb8932daa644a860ce56812b3,
        0x9a2b5019bfe4bfd514a06c1,
        0x6d4611acdc2c6a15664b9a9e,
        0xcdd4b1ef919f779dfcb38404,
        0x395bf20018ed25a6efa4e8a4,
        0xcd3538fe3818cb90f9b8eef,
        0xe243eb6ea7c2e0197201de14,
        0xb39459de2dc0e4835a12a3e0,
        0x86fbd5a8615dcc756d8d9f26,
        0x4c42b314257df3c1653e2a0,
        0x20aa89bbc231479cf76f3289,
        0xc671c3eb56dd9409261192b,
        0xd055900a15cecc67f8d8e653,
        0x131e5ec1b21cfe1d9b522653,
        0x17fffff025beb3440dafdcb4,
        0x7d2dfd84fb1f9f0be08e9ea9,
        0x7e3a3bd0543db14779c14ee4,
        0x2e3bda4a6ef3d16c2977851,
        0x595748885d2433ab499991f6,
        0xe796ef4c1ebcd5904372cd5b,
        0x6cdeb29e3a6d28fd69c8bcec,
        0x4c43a5237f15611825a99b0,
        0x1cb0930d47d7c6db29447374,
        0x58fd61ea237415ca9dfbd1ca,
        0x7976e51273f1dfd9c49d258c,
        0x415e9ed7a1c6ce737522b54,
        0xaacbf48320638c53ee93c970,
        0xb463197d1ae4de6951c7b216,
        0xd042691a7551a1852dccf209,
        0x74f8c5a27f2ca776a47529f,
        0x528f4ae13b87d0869992af00,
        0xcd196c4659a49cae42668924,
        0xeabcb524d402eb4959ee5e32,
        0xce10367caf432d6b1d00715,
        0xb0224811e6b8527cdd686dad,
        0xdbe673c60abfee2d1ea9ae65,
        0x61134709b4c4fffac860c90d,
        0xff7a3d95a1463bfa79ccad8,
        0x3a58f8a150b8cd439f22dd73,
        0x93e36b9fb320f483b07260ab,
        0xac599ebbad05b75064bb8699,
        0xe52be26070be8a6338f2df,
        0x40ec36450113d1e90af4a0b1,
        0x9daf662286292b306375510d,
        0xa3ccc232ea81b585d708d92b,
        0xd228d049a0219821a980fdb,
        0xe,
        0xe33f02cc613e82436f874005,
        0x6d3c05470d97870e2d7a754c,
        0x8d6a7b8a9433119f70e3a970,
        0x68b76379e722a1e7832bc49,
        0x7c017fd95499a276e7c85a0f,
        0x2942834b887098f11f25ecd9,
        0xbac4e9100ff3ddf85d03264a,
        0x1842567df29a950407409c4b,
        0x3e7f33519445ab1870d26b56,
        0x540c45a4068767e9b2b3d98b,
        0x99948c66d65e236826a293ac,
        0x9d86ce389bb9904ca9a662a,
        0x284bd96a7b32422c02fce244,
        0xf1998a677ac39a165fec5b51,
        0x160f7e820265ce31bca72066,
        0x82be612a8d80743f58823b9,
        0xe238f3062baa8f4ce2ca54b3,
        0x89e46effae1136ce045f7925,
        0x3f454d5f0c2a7d5c15082fde,
        0x13f25115f4a447f84512171f,
        0xaf89f81e1b64cb3605c61696,
        0x3934bc2d2c2b78e032fdf50d,
        0xd3793c1e1e176341c6287586,
        0xd8f50ab1fef1a7955391707,
        0x9142fb3d720200ccc3c261f8,
        0xd5992295be49550dc2504ae2,
        0x406e1999de418232b3eb3fc2,
        0x161d3f457ec54b8f95ae3211,
        0x93c6160b987dbc9337c9ef1e,
        0x2dfd0e64900e5758c783a3e7,
        0x33494a43d3de9d7729d3e4d,
        0x7dc9c4f02f17a92d538e8b3,
        0x2359620c230b4e13b1cd92a,
        0x833a909808a02a6aed214dc5,
        0x862a3efc158eb9aa207ec99a,
        0x3bd990f632f792c739fc93f,
        0xffd42d0002d232c6fa1a87ea,
        0xae154d77c77e0ae9ad1b0d68,
        0xd395674bb34a47114d113e9f,
        0x6a5351b25db39768900f489,
        0xe64787aa735aa0d6e6460c3f,
        0xd0b92424aef45555a2f3046,
        0xf88e89c18d26378ccae25cb2,
        0x125f3cdb5509a94c241c59cb,
        0xf0dfd09a54c372103db88c1f,
        0x2ab4a9c42aa5d69807ec7460,
        0x82ae0c594be04a0a72e3aada,
        0x14fb801bd70eeed835d06c7c,
        0xa50cab8c50882c5ce3bf60f1,
        0xfb7e0607bd666e0230984e32,
        0x38df7446b5016e8cd1ce5d88,
        0x4a6096196ae19a0616c165c,
        0x1,
        0x0,
        0x0,
        0x0,
        0xe,
        0x8af5d4be72abee96796e52c4,
        0x57316ab9a799bc810a2036a4,
        0x2ffcfb7fc1cee29ebdb332b6,
        0x6fcbf323e09df14ad2692f3,
        0x600ba8b187ea17cf774c1c16,
        0xcbe6bbfef57b5d3c1ecc5ab4,
        0x615487989403dcee794cdb90,
        0x745224ab0d92b5aaf29865b,
        0xdc249e163407f3f82923144d,
        0x84794c113d2f11db0fc226e5,
        0x4a14e7f96d9a0e7ee2097129,
        0x17ea01e9100bcf9bdd0ee572,
        0x3f0b65ae74544125cbe7b984,
        0x95330669c2ad13a42d613a01,
        0x6d2f2227fa4feef6881bc0f8,
        0x2524b4d2f40d396a4dff0d6,
        0x789337b5454b186188990b5d,
        0xe121a96b7807efcb0c3227a9,
        0x9060426f88b781f89b832a07,
        0x1881059ea46db096798f5464,
        0xc7db256eeb9e73636c23d85d,
        0xfac817b59640062c750fd6ec,
        0xe083f44bedb1981b3bd4f74b,
        0x6ccae36b47f5ae984043e9a,
        0x22d235b78e6ce87218e28b8d,
        0xffb20215f35229bfe62a0774,
        0xd023d541ceb0eebd08ea0f6,
        0x5b0afa96078d739bdbc211b,
        0x5fadb42b202cb8ce9a13a48a,
        0x44dcfc14160203044393648,
        0x91a14a7d1311fd1f949b320f,
        0x108b849086e9dd5f9c00175e,
        0x3c0a3617d37df147380df240,
        0xc6211c31724a709bd97c8d1b,
        0xf3699cee54383ded61b45c64,
        0x5098d323f28d6fde9c55bc,
        0x38617220c0976f3eacc8b07d,
        0xea7c5650b31a7a1da0ae6cd,
        0x556fb755020cf149e441fa2e,
        0x92a656e2f77db0bc68a0278,
        0x5db829bc07afdaa49c7d6092,
        0x8c9cf33e6ac704309c5022f2,
        0xa8cb64b5a7b6362cc391f4f3,
        0x19a19b68145897cbd530535a,
        0xe65e00c446b522851cc88444,
        0x1570d8bcc16b0b4d342c494,
        0xcec26a1ecb4fe50a39084075,
        0x15d4fdcdcf2d7715a1d04e9d,
        0x96aeb3405b00852b2356d697,
        0x1489d2ead06f4222bd0176c0,
        0x87f08bb70976b7a518823d7e,
        0x12d1a73634cdd63c578ce4b,
        0x87325b6901033363516f67d1,
        0x16431ca0bc7585be25fa121e,
        0x2c04ccfb2feb0e0cb2b21ae4,
        0x103044376120678f9e2e7f75,
        0x11,
        0xdba80b31cafb090dbe1d5569,
        0x4dbf427b3fad2614973dd534,
        0xf25e4152ec54faf8d0099302,
        0x2cc6f44048c1df95af496f,
        0xdc09ff66246989db9f22683b,
        0x6f77954b3daf81582093b369,
        0x21309dba12699552997d60ea,
        0x130624391deaa0413baf7a0c,
        0x48a8cd469717ac61c34a02ad,
        0xe90043ef236ca982ac23662e,
        0x230684c3f501421ba7053bf1,
        0xd60a1a3ed6e7d78df4df0f4,
        0xd31a687694088af37b7b1e6a,
        0xcc715c4401f4f9438e7fe292,
        0xa25cc8bb3952fee16ffb184c,
        0xd39fc98085260940337a377,
        0x3f954bf31b47dfaa72f3022f,
        0xb410f4c665f19b98b5f3d176,
        0xaaab6b2eaec0a554e30f9ac6,
        0x7532cdf2c1a7bef1a59ef,
        0x99ff13ca8ddad7f087eb7058,
        0x6a7d9116c9d35f224153adc4,
        0x60e2233085cd1965583a4446,
        0xc138bbb967835b5894772dd,
        0x595bc661153d455f12076a23,
        0x126b9cdb8fd60be10d2986df,
        0x4de4de634e05f46db1c4e734,
        0x129dad69f76d81b36aedf4db,
        0x7ffd4b34d3a28199c1f26680,
        0xdaa7d5f0f7999e0d03c208c5,
        0x8cbf3189caad934ebf81653,
        0x1963b067c6ea4ba94eda1235,
        0x70c50a16a289ebaf239d093,
        0xdeee2bec57fb2c67c8d72c23,
        0xa8d68b370fdafe65549e8930,
        0x284a2fe732d1890d89c944f,
        0xdf3faf3dc34bcbe8ac2cd6f5,
        0x26bd85d3e5908a9058108087,
        0x4b7809f146f352f2f4ab2782,
        0x16b101c7dcb24acf6e965c82,
        0x18e834b637eb3feed0e32019,
        0x2c98df8ad7b88a41d43c6507,
        0x1b8bb5244470e57bc39778d7,
        0x35659fdaa986bf4845758c0,
        0xb1b8d88ae7417d22320009a5,
        0xf87abfc5cf24a25eb0cf1f4c,
        0xc6ff69db17a9ff45117e3cc4,
        0x9a863c012eb80be698e840e,
        0x9406db3144f2e43a89180bae,
        0x9c0d6596bd17c2f26f7c4633,
        0xb713386687500144944ab4c3,
        0x193d5aa180939ff80eb14dfa,
        0xe64787aa735aa0d6e6460c43,
        0xd0b92424aef45555a2f3046,
        0xf88e89c18d26378ccae25cb2,
        0x125f3cdb5509a94c241c59cb,
        0xf0dfd09a54c372103db88c1f,
        0x2ab4a9c42aa5d69807ec7460,
        0x82ae0c594be04a0a72e3aada,
        0x14fb801bd70eeed835d06c7c,
        0xa50cab8c50882c5ce3bf60f1,
        0xfb7e0607bd666e0230984e32,
        0x38df7446b5016e8cd1ce5d88,
        0x4a6096196ae19a0616c165c,
        0x1,
        0x0,
        0x0,
        0x0,
        0x82450bf12b9872f45bab865,
        0xc7c4f1f13f11a9c3b268f7bd,
        0xa905b5502216d61eb8705858,
        0x51f730b66472e894e3677ef,
        0x4,
        0x90e2c44f578a576e538ac883,
        0xcaf911164da54161a23fa328,
        0xf42fd1808d1d80e42c32d2f7,
        0x86db2ed796cacca7cb0da71,
        0x2a9fcf2ecf5b7809c754e5cb,
        0x1b30854b77d681aedd4bd240,
        0xdb2ca2da63fcdc565942450e,
        0x3e6ea54e535602259276a6c,
        0xf7840f8705b03b1c78a0d453,
        0x13ba5f9e8722487fc3122f3e,
        0xc252139ce51af3d6a671405b,
        0x490e2a3372becec63deb1ad,
        0x68d79acba236695061eb5722,
        0xd428559369f79945a20b1411,
        0x83bd320623c5b1b4840e6a99,
        0x94732e010ed199835af0f95,
        0xa,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xaefd0d854043fd325dd3c34f,
        0x9b63c98d9a7845c52e1e2b0f,
        0x9db0be660d847ccc58358f3f,
        0x17cb6c41f0c4e1a7394ab62a,
        0xcf86158ab69213388e721bb7,
        0x5f7812269d790797cad9aa15,
        0xb1c3622a0177001d9ed8e25f,
        0x115cf429f459884785c6ba46,
        0x1e81341e2f3f988ff115dda3,
        0xad22946489db6ee4954fa5e1,
        0x83bed94412e19d92b73cc763,
        0x2074c7bceff87d0d41edba1,
        0xe2955c55da59eba4b7b57d3d,
        0x1e6629b0431bce67cf28c22,
        0x1c35b7efd5b67f87221b8bfc,
        0x3e53df9e3488a9e42acd87e,
        0x2e089afa726154d40dd12102,
        0x5391613ecf49db2bcf1cad86,
        0x84a2abb2de6b3a6e09026a50,
        0x19557a3a3c1d62a205d5dc87,
        0x490bf40774926e8b279947c,
        0xeabab6aef9e9d2a4f64f4e7d,
        0x3e309fe1b1c8247abab20d7e,
        0x79c527862917f69ac58fcc4,
        0xacb18f2da2b425c2ff50dafd,
        0x7623850d87e279a8a30f31ff,
        0x777564c7291d95fa80203ade,
        0x1764ce0e7fb626109b63789b,
        0x42f2f3f4f6b9d2c2b73a361f,
        0xcd78c070c184c38b1e5716aa,
        0x72cbc24cd90da89e0e3cefe4,
        0x19485e1c46d0dce75f8b192b,
        0xb56b3539074b3c47b3f504d9,
        0x2c229530bddedd8851b03dcc,
        0xc93eef8474c4e18d6378e7f0,
        0x173d36f17a3c9ae77a2acc25,
        0x5fbf29cf20556a11621a6639,
        0xdfda5b7dbf0b226822094787,
        0x4a3b059e521b4b0445df96d5,
        0x333988c2c09f5af061cdfb,
        0x13d3570be6d27d1d588b22fc,
        0x20c763e58d4df3e4990cdae9,
        0x2c3301367f400c31f4bded26,
        0x16a6c25d133fba74b4c55972,
        0xcb24d12438557639f52df5fd,
        0x4a6a46feebe8a88a8062bd0e,
        0x65f04211af4b168b1e25787d,
        0x17935d6f4fa575744ca46f75,
        0x644f324be8a5c152625a5b8a,
        0x501e52e8c5707d7a3a77ee18,
        0x9636c463c14c5b85c2e6d3b1,
        0x1939b6f297f7b5b7fd0ac458,
        0xde1d8e2670532ec5bba60ade,
        0x1154f5064f7dd38656f7f82b,
        0xc9bec68372b7d07dcf66270c,
        0x315ced00b3153219bbd430,
        0xc48b3bc110e208d827b13f4d,
        0x87d82592699bca3dbf847c2b,
        0xff04f0f2c8be12365aa73443,
        0x1739c8c450ac994a5326c809,
        0x8904b74d5d114b5416df0ed6,
        0x479ee13e49cde067742c2655,
        0x45b9359bfa338dd432ca9ff1,
        0x12bf6460e7a42942be6c16a0,
        0x3a8b37aacb2f620bc41c6109,
        0x91f68edf90b5947273b0aadf,
        0x265d48695a73800b7404124c,
        0x141e3d99b3ab683bdb0ce70f,
        0xa,
        0xe005b86051ef1922fe43c49e149818d1,
        0x3ea0f301eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x2a97919d8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x460ba2d39a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x2894fdbe6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x43870ae2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x56e06d3d16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0xa4593acd7ab792809e469e6ec62b2c8,
        0xd450fe4aec4f217bb306d1a8e5eeac76,
        0x6b3f2afe642bfa42aef9c00b8a64c1b9,
        0x85940927468ff53d864a7a50b48d73f1,
        0x1b8bb742d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x233a1ba09466e4726b5f5241f323ca74,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x85cd6b5af7b7cca272f94a3,
                limb1: 0x55be389217b4b81baee9530f,
                limb2: 0x1b5a70fff8b31b3cfc4b68de,
                limb3: 0x101c3dcc7f2a1be1afe50e39,
            },
            y: u384 {
                limb0: 0xdc944be6d0d78b23304e3193,
                limb1: 0xe1cdd664f4036ec4bd90db8,
                limb2: 0xf9e55c43073f3a6163464638,
                limb3: 0x14396fc17f6c6bc8f76ea501,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_11P() {
    let mut data = array![
        0x1,
        0x3238715a58c809c87cbdc8d5,
        0xcf90f5805e760109c331a347,
        0xb850c384f109e9da29eaeeb3,
        0x947ac47fb49cc69726020a9,
        0x1e9724379cbf59a07d8f5cac,
        0x692f5413ebe7b9128d27d5b7,
        0x393d58bf6a6eaa1c79626aa5,
        0x1123ddf47dbb2774eca649cb,
        0x17c7b00efcf5263b79f1d49e,
        0x4773517f9acf48a086a0e4d1,
        0xe290ae46b6b0b8925977295f,
        0x4c709235f74337046850b46,
        0x58d201f07d7d65998a5e410,
        0xff5dfcbfa4c2b37c8b08cbab,
        0xcc0dfbafbd3a173d45f02c52,
        0x19708a86709c38557d60bfa9,
        0x2c3c4340e73af82c97afe9ef,
        0xc1dd6f8c49d5bf2889ac1af1,
        0xc8dfda392ea6eaf31e73ef4a,
        0x17a677ccf66ba72abf09c493,
        0x34baceef92ee225539e36db3,
        0xcaf27ba04e436d295d441ed1,
        0x14c2bb4d6c8f949e8654b50,
        0x4d5e89bd8c0d7c2aeb81b91,
        0xe,
        0x1a514a8e53e158562b5b931c,
        0x2579639e96f3e1120b7021dd,
        0x805aea6824c512bfe2ea508e,
        0xc3a37bbff7570b0df09c94f,
        0x912bd73950367dc53df74160,
        0xd1999edc45aa69d542ded3b7,
        0x458390480981f521b6fefa38,
        0x11f5b10743bcb1416820a36c,
        0xd3cd52084165a6535b808d54,
        0x888fac0ec7c3d3f3ae7afbc8,
        0xa9e01291406195c44411aa48,
        0x158d9fcba2d42b61bfa1f921,
        0x765dfa08b43f0d9f1275be75,
        0x406e10b079f3ca38d5a8e48e,
        0xbf3aa29b6d0749fb4486d2f6,
        0x145979aa25637aebbce40a87,
        0x58271df3c9521248d8a01c54,
        0x3814a3b96f330410d0fa16bf,
        0x53c9a7fcfc2dc7bf4cb860a8,
        0x120f0ad3f5efa67cda80f239,
        0xce11cd419328ff1cd6d99a7d,
        0xcce9bea6cb1500f90a1cccd,
        0x67e03e0d04f602d9b6d12618,
        0x278a5346df878d99c2b5d39,
        0x493d01910191b36f1e4f27ca,
        0xd9012b67498e46261ab892f0,
        0x2b3dd6336310e4c343969fee,
        0x1118d50ba3ea328588e32c6c,
        0x7aaaf6f4618914a687f68d4f,
        0x89c15cce33df936703013082,
        0x5c4e20377986b0e562900bf6,
        0x917040b737a3c4287d8a1de,
        0x2367295f23806c5b93e0cc6f,
        0x86d3cc7dcec519e42a8e682b,
        0xb54635f1e64e4490b8ab4f30,
        0x170650b1d80e9b65de280f13,
        0x151ea70976eba0822f2c8825,
        0x9fc423cf9c57aa9c8de61a80,
        0xcfbcf3b7e949770086d21a66,
        0x166de6742dc1b67bf705735a,
        0xf6d5163e1b32ca0fb74506fd,
        0xa9b9a1e0bf035dc05636a0f6,
        0xe0011208ff06b1146c30f1ce,
        0x3133654620d90caf49648,
        0xc96315e2f52271f03285c37d,
        0xc239615e28f51eafe60a4521,
        0x3c7bdc8e33aedae72f4656b1,
        0x983da78f3f9be2c44c39e99,
        0xd37ab9893e21b7debec58f11,
        0x1127d5d02bd175bcabf6078a,
        0xa61ec9fffb831a8923f6bdec,
        0x168f331573e99cd9d69a6fe5,
        0xf3abb319a11c2969005c516f,
        0x8a289350dcdbbdd545654649,
        0xa03f1446996e2708000e800,
        0xc59eba4db4f004a5337f350,
        0xf,
        0x1aa2f631caede9562b7ae0be,
        0x5eaf8ce556aff79b790f7545,
        0xa6d4463ab1ba362a6bbf945c,
        0x40d4572feb28b81a98320e1,
        0xf90b07fcfb79be7140785a03,
        0x8eb5f93cd7714671173462ea,
        0x7428c28d08e66bd9eb50c719,
        0x46148fbdcf74600c8d00df1,
        0xd6698999544f2bdb14d8e0fc,
        0xf2a67e675a117b32a0875f06,
        0x46f62cd1f3fdd3e812a14e75,
        0xe16d3f13db33e94b0753d85,
        0xfe0a2bfa581ab2da5753fcfe,
        0x8b4b108047ca0afee4f19cd7,
        0x6c62464f005853fd7f785e0c,
        0xd8dba73dbb4d994dc6b4283,
        0xfaa44cb9371adbdc652790a8,
        0x12ffbadc97d2ce5ced80f062,
        0xfa37069f8966f2d38dae986d,
        0x144cab12c1fabd85bcb6066,
        0xc25b602447716165e41e6cef,
        0x66cf2ce265b0c56dae936d59,
        0x62df5c1ef6d0ce72bce154f4,
        0x16b27b4359bd2b2441413759,
        0x5f48f577e14038c2195b4902,
        0x9831d698ca65cb7117f70f44,
        0xf5cb741f04bb728a338a57fd,
        0x155febe1123048cf3cc4fcfb,
        0x90bb751c4e97069f1c189239,
        0xdad8bb4021a0ebfe8d0d32b5,
        0x39b3a66a01f92a3ec8719033,
        0x119bccd79d9799a1ee3abf66,
        0xe23c81fb2f72de4dc9ce2da1,
        0x125e7ab90d43756c74d6fbde,
        0xa47fe51e3919370dcea0ee80,
        0x11e94021ee15501b15e7c5c1,
        0xcdb2be6b194efe5821c05e05,
        0xeb70c2c06932508c0c083f8a,
        0x7d0e6e9d8a635494f1ae453,
        0x11ee68d47d2378dcf92a70d0,
        0x78b717c3070565c02fee05ec,
        0x2b803ce8a91c0544076f38f7,
        0x3df15267ac3f53c74c8d4bb2,
        0x507bd449ed614390e9c4e93,
        0x4a60611ea81f88e0839862ac,
        0xbcb8df5b666d19a66158d55,
        0x81e80cb0713bd89fb9dc6c32,
        0x1767e74ee52aff6422714381,
        0x7902d31b1e5183064abc039c,
        0xe4972736e0bfc6b74a16e25e,
        0x5868b9916d8486f86856ed9a,
        0x9b4cbdab91464c2765ebafd,
        0x287377a415363c57d86a3eb4,
        0xdb8c6c06a232954dbed2777d,
        0xcc3db073471d460ef2fe375b,
        0xfcba8da762032e6f447ad51,
        0x1,
        0x0,
        0x0,
        0x0,
        0xf,
        0x726c1eed5a7c57ccf260c36e,
        0x76e7e09716dc5ea036b29456,
        0x4348ff5c6889a10749367b41,
        0x64f56051b4e07d24a720cf3,
        0x474e7c4a844f3024d2e53518,
        0x770f7e655b96bcdea203defe,
        0xa8055126d1a25b8cc0561992,
        0x1669c9f0eb99c5f2d2b5f5dd,
        0x60b82dcb1b31af0a465cd48a,
        0xd4b8c5de9e088e0dfa09c784,
        0x4410f3d771cdb3e1c0c236ed,
        0xbdb0d6e37f3332372177f6b,
        0x3b95da0eeaf1cd93b773461a,
        0xe0d0a6082a572e9e5359fab9,
        0x7036c3926c1761ebb5efa633,
        0x12c226e74aec1e8d803f54b0,
        0xa950895eae1b19921a659d37,
        0xb2a3e2152e7e3857b50d8bbf,
        0x208c89468715d2bca572d0f6,
        0x132b7accc3b12f03ff63d2c1,
        0x25585ae5b60df3f5b5b8330f,
        0xaf78200d6e429931817f6dac,
        0xe29f7fa0e45d5ea6ecebc2e1,
        0x12c47d4627518270e9115199,
        0x1ca6c13fb24169170b194677,
        0xc609db2af85a739c7cafc7b4,
        0xb7d31eaafad16f11c9d9efee,
        0x5ca5e981980abe52b8d8146,
        0x26ab5703f3df3bcc34c2d583,
        0x3f22eacc34d8560a0789437c,
        0xd6a8fa89f230bee8fc9b6e0f,
        0x182e0fc3f45b5bba14240ab9,
        0xdd4ca7fa72803702d965072d,
        0xca11c229feaadd72dc6be8a6,
        0xed4eec297ebedd8eaec620cc,
        0x128e94f71bc14ac77cf44030,
        0xe36f17b7414ea55304eb99b3,
        0xa0b421431508677608d1c90b,
        0x9c7cb965e4710c14f55d2b47,
        0x9f249fc73a15e9d73b4f173,
        0x96c6bae0450100b2b49fd76e,
        0xced84413ca7ae4e4b723909d,
        0x8e66d8aa868dfb9b80ff0bf8,
        0x1142f89f8ff72273f3254f52,
        0x8d9d218d82024f5163b84fa4,
        0x39c91c0f039f3143a1d06304,
        0x36bcb9e6a3bd53e56dc0c07e,
        0x6b957eda24df66338eaf5be,
        0xabd9a27a4a62e13b95e67b9a,
        0x889b313b9700c6d19d53a9d2,
        0xa645d33f2ad2e39e20991fed,
        0x3bd3f04617271f6d645513,
        0x6aa62f3a0ced30168e4b25f0,
        0xb9c77b9773aa2958f3d19cd8,
        0x7494bff02e26e3cc5243af82,
        0x19bb559175aa3d884e995700,
        0x37446193153e4454788c8f79,
        0xd502253db9fbfbbb46cc2690,
        0x8192bb27d25a97d38ddd220f,
        0x17e3273995feab3b1a945b5e,
        0x12,
        0x6a8bd8c72bb7a558adeb82f8,
        0x7abe33955abfde6de43dd514,
        0x9b5118eac6e8d8a9aefe5171,
        0x103515cbfaca2e06a60c8386,
        0xe42c1ff3ede6f9c501e1680c,
        0x3ad7e4f35dc519c45cd18bab,
        0xd0a30a342399af67ad431c66,
        0x118523ef73dd1803234037c5,
        0xf6fe2665dd3eaf6c53642e9a,
        0xfc38545b7ae4008244c57c1d,
        0x954159990708b896637b1458,
        0x4592bf083cd2d1e2b9da6a8,
        0xb023a61bb75ab4bf88cb7f60,
        0xbd7a29a48876374ecf7de8a7,
        0xd1c605c7ea2cef168296e70f,
        0x6420b6dfa8624a084f8db82,
        0xe39c3ae1d7e52de2d5169ca3,
        0xdab4e4af36bc7fe4cd382476,
        0x5d04dd0b2e823728220b28cd,
        0x97473c08d75f56237fd8f8d,
        0x1a870a2b8a18b172a553ea0c,
        0xf11fe76d1610b858e0251473,
        0xc544e9f03d63df9f38125749,
        0xdc7955bea850bc890b7c11,
        0x673201daaf1e95e2bcc22105,
        0xb67ff3008d4e5656e8c9d9ed,
        0x79ad1044e5e03b97731285c4,
        0x150a343977f64902ee2c3f50,
        0xdaea212afd78f658d58a8436,
        0xb001029b30f4920ee45dbb3b,
        0x5a6e4698c85d04c4c86ab3bd,
        0x13b1da3b2f7e452b7e7f0e93,
        0x37516811d73fda9d0b582372,
        0x7ab69fe3b6abb8b325eb5cd9,
        0x2afbea11adcfc81b1cd5d6b6,
        0x1054460c6592b7c1b78d573d,
        0x8217ef25187f3222a05dc115,
        0x106269b78b1c2b34ec140d73,
        0x4b2c094039ee65209566b10f,
        0xf1659745a3e7874401bc919,
        0xc243d428b0ad9d9fdbd0ff3e,
        0x21a8dc41cf600aea8c1e1694,
        0xee2d43314e7f2dd70721ac3d,
        0xbb9afffdf7003ebdd9051fc,
        0x466e0676e7f501cfd8310da5,
        0xa4c9680c0c1ae345927d3139,
        0x9ef164826c2b6b78e7fe544a,
        0x78495b49cc1b342733e34ee,
        0x4f160ad81e970a714cb1171f,
        0xaf6bba59fecf7f20f70bc907,
        0xe2dc7380c5c9ba21096c7540,
        0x4bf746aee753eb23c6e0d58,
        0xb7dcf653e7e0571f9197ab66,
        0xcb5047c144846e32c56116ee,
        0xe850ba85ffc5d4f9317c03a2,
        0x10343cda045712a04983b46d,
        0x4a60611ea81f88e0839862b0,
        0xbcb8df5b666d19a66158d55,
        0x81e80cb0713bd89fb9dc6c32,
        0x1767e74ee52aff6422714381,
        0x7902d31b1e5183064abc039c,
        0xe4972736e0bfc6b74a16e25e,
        0x5868b9916d8486f86856ed9a,
        0x9b4cbdab91464c2765ebafd,
        0x287377a415363c57d86a3eb4,
        0xdb8c6c06a232954dbed2777d,
        0xcc3db073471d460ef2fe375b,
        0xfcba8da762032e6f447ad51,
        0x1,
        0x0,
        0x0,
        0x0,
        0x5529f711bbb68e464466db04,
        0x79a2a360c8ce0947570b51f0,
        0xa8334ffc1651b5fe9eaa22fe,
        0x2e00c4397504d5034e61c8b,
        0x4,
        0xe4dac114c877e2d825283d63,
        0x2ca09b266e7f00d8305eef03,
        0x6fc7c55e1b275ca68c43fbb7,
        0x8e44c110c231ad2d07ca064,
        0x1607e3086419d2434e065548,
        0x4f53e20ca94fb43a584330b7,
        0x983a3428c45e5dc4f4f9a2d8,
        0x55fe4b62d555b37d8e53b69,
        0xf2dc084da465bbbed4e85b93,
        0xde895ed94c4dd237ff7d768a,
        0xed387ef9ef11735208b9dbf3,
        0x4321c76dd1661331cc79ea9,
        0x882dd2d6e4df93720c2f9c9f,
        0xbffd97c1429fe831f483d368,
        0xbfdd52640ac0f405659eeb67,
        0x4de688ebbcc6accc23ad8d2,
        0xb,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xaefd0d854043fd325dd3c34f,
        0x9b63c98d9a7845c52e1e2b0f,
        0x9db0be660d847ccc58358f3f,
        0x17cb6c41f0c4e1a7394ab62a,
        0xcf86158ab69213388e721bb7,
        0x5f7812269d790797cad9aa15,
        0xb1c3622a0177001d9ed8e25f,
        0x115cf429f459884785c6ba46,
        0x1e81341e2f3f988ff115dda3,
        0xad22946489db6ee4954fa5e1,
        0x83bed94412e19d92b73cc763,
        0x2074c7bceff87d0d41edba1,
        0xe2955c55da59eba4b7b57d3d,
        0x1e6629b0431bce67cf28c22,
        0x1c35b7efd5b67f87221b8bfc,
        0x3e53df9e3488a9e42acd87e,
        0x2e089afa726154d40dd12102,
        0x5391613ecf49db2bcf1cad86,
        0x84a2abb2de6b3a6e09026a50,
        0x19557a3a3c1d62a205d5dc87,
        0x490bf40774926e8b279947c,
        0xeabab6aef9e9d2a4f64f4e7d,
        0x3e309fe1b1c8247abab20d7e,
        0x79c527862917f69ac58fcc4,
        0xacb18f2da2b425c2ff50dafd,
        0x7623850d87e279a8a30f31ff,
        0x777564c7291d95fa80203ade,
        0x1764ce0e7fb626109b63789b,
        0x42f2f3f4f6b9d2c2b73a361f,
        0xcd78c070c184c38b1e5716aa,
        0x72cbc24cd90da89e0e3cefe4,
        0x19485e1c46d0dce75f8b192b,
        0xb56b3539074b3c47b3f504d9,
        0x2c229530bddedd8851b03dcc,
        0xc93eef8474c4e18d6378e7f0,
        0x173d36f17a3c9ae77a2acc25,
        0x5fbf29cf20556a11621a6639,
        0xdfda5b7dbf0b226822094787,
        0x4a3b059e521b4b0445df96d5,
        0x333988c2c09f5af061cdfb,
        0x13d3570be6d27d1d588b22fc,
        0x20c763e58d4df3e4990cdae9,
        0x2c3301367f400c31f4bded26,
        0x16a6c25d133fba74b4c55972,
        0xcb24d12438557639f52df5fd,
        0x4a6a46feebe8a88a8062bd0e,
        0x65f04211af4b168b1e25787d,
        0x17935d6f4fa575744ca46f75,
        0x644f324be8a5c152625a5b8a,
        0x501e52e8c5707d7a3a77ee18,
        0x9636c463c14c5b85c2e6d3b1,
        0x1939b6f297f7b5b7fd0ac458,
        0xde1d8e2670532ec5bba60ade,
        0x1154f5064f7dd38656f7f82b,
        0xc9bec68372b7d07dcf66270c,
        0x315ced00b3153219bbd430,
        0xc48b3bc110e208d827b13f4d,
        0x87d82592699bca3dbf847c2b,
        0xff04f0f2c8be12365aa73443,
        0x1739c8c450ac994a5326c809,
        0x8904b74d5d114b5416df0ed6,
        0x479ee13e49cde067742c2655,
        0x45b9359bfa338dd432ca9ff1,
        0x12bf6460e7a42942be6c16a0,
        0x3a8b37aacb2f620bc41c6109,
        0x91f68edf90b5947273b0aadf,
        0x265d48695a73800b7404124c,
        0x141e3d99b3ab683bdb0ce70f,
        0x6d6db022a8549ee86374b69a,
        0x3e98f7258170733507d8709b,
        0x10b4337a56d4cd17ab2fe1d5,
        0x11366a6fecb124757076f4b6,
        0x77b25b600d3baa1a2f54f826,
        0x924c3c1a699e9b27b3612246,
        0x6a253cae0097b1955d4f0cfd,
        0xd2bd6591140d2faabafefac,
        0xb,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x2a97919d8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x460ba2d39a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x2894fdbe6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x43870ae2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x56e06d3d16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0xa4593acd7ab792809e469e6ec62b2c8,
        0xd450fe4aec4f217bb306d1a8e5eeac76,
        0x6b3f2afe642bfa42aef9c00b8a64c1b9,
        0x85940927468ff53d864a7a50b48d73f1,
        0x1b8bb742d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x233a1ba09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x4b2543867c879b741d878f9f9cdf5a86,
        0x30bcab0ed857010255d44936a1515607,
        0x22b15f3fbb42e0b20426465e3e37952d,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x20ed31b5bd1a6a99cbc5f536,
                limb1: 0x455cd2878abeba8b867a4290,
                limb2: 0x9dfb4341a83a69b41feb23e4,
                limb3: 0x16dfcd6d60e4be40819587ca,
            },
            y: u384 {
                limb0: 0xe898728a87fdf94569d6fc7b,
                limb1: 0xebd6dcf86bcbaf6626552df1,
                limb2: 0x3892cf6167890a8cfbb63c03,
                limb3: 0xcc772bf8b9e03accf1bd62,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_12P() {
    let mut data = array![
        0x1,
        0x3b172f01c7203496418195fc,
        0xb0eb6de46479d3675a87ac4d,
        0x8d099c0d58e275576762c0f9,
        0x1203afad6a71bd42b92a00fd,
        0xec9b55cbd98932a5924f8a47,
        0x4e9a482e61481f0751bb31b0,
        0x717880df28c102c8c8ee6f7,
        0xb62f225d06008ca22b78dfc,
        0x8f5db915afcb45498c9f294a,
        0x99bb2bcd6afa1975db304150,
        0xdcf4ac6e29b6ad8ad7ed7dc3,
        0x6f5b1f528cc266fc8a0e439,
        0x2c6d8baa2a71e9d0bd84f23c,
        0x52ccb729107b148feb11e9d1,
        0x1e9f63efae835ff64e058e0c,
        0xa6719b017ab73af994e781d,
        0xcf497df3683d0f56acdda7d9,
        0x7e271301561221fc0545454e,
        0xdc2bd749e14df7be92082ea0,
        0x153a8db0e73fa2b6c23c5bf2,
        0x96d08be5e7f0372dc6a1aeb6,
        0x5956d7d43acb0b37748af13f,
        0xc4c967049e0b21d24eb9e8c5,
        0x18b917a33267145444faa7e3,
        0xf,
        0xf3595179bc1be6afbf6bc550,
        0x9c500e47d97620bf9362abc6,
        0x58a7b92e1e4f5bcefa2fe598,
        0x692af1083f0f2165c4b3d9d,
        0x4c28764b8b1e43bb4d2d2251,
        0xf04f9a82e62d9b673aeeb5ed,
        0x744baa8b8b044fe48e830422,
        0x13b5883f9a9b457df43b6865,
        0xb67fff727a08849b5f61c3f6,
        0xa36daed68473cbfc8fee203f,
        0xd2e0eb62fb981a8ec80cb39d,
        0x377ed2e52464412fbcadec,
        0x24faa2259d23a72864c402a8,
        0x9206f8da5c46c91711f82780,
        0xf6f94011e908df3dbefdaedd,
        0xdef3309b02764afa45d4275,
        0x59e39de1b57d21953c8ddb97,
        0xdf31d43e4db8ae674a9aa06a,
        0xb5b3743c8178dbad53e9468c,
        0xabab71203801554079e2d,
        0x4d13e9600f6b30a5b44e320a,
        0xd93148a6001e047712da68f9,
        0x540fdcd0f033463a27a85776,
        0x105453e2694dcece92bfa9fd,
        0xb2ad44a78f4650c7c0023987,
        0xf72eb701649396e514a19f46,
        0x6359d1fe0496db50ca9b4b43,
        0xd4f468482ea9f428221931b,
        0xb427b100e80f1a4fb10e741d,
        0xb05fd823b3dd3d2e18211e38,
        0x5b34d323ead3fee2d54689e9,
        0x956c974054e49c45ccfe098,
        0x8e1e5cf981e6a87106521cf2,
        0xb43ab14d06be30d23ee63b2,
        0x3f54458fab88a4d12d6ce771,
        0xc9e688f7fdb46ebece5ff15,
        0x3f49d28d8205ce6e553127a5,
        0x9b6790b4643ea06e85513009,
        0x11bf0d0aa32f1d1f398bc59b,
        0x5e1a81ee7812483b773b136,
        0x9e2ff21f5b00db1e06501d32,
        0xf12171f4cf1377ee8815c498,
        0xcb993a2f1042c6809d7567ef,
        0xc8c00c8e1b2a2ac6a8af85c,
        0xb9a554e416ae54b57346bcb7,
        0x7c5e8eb462c009d538065fa0,
        0x47d7c21ad6bf95b7dd2d1bcb,
        0x16cdb5844a7d36a5c43b7f20,
        0x7900f7b6d702c5a54f12037b,
        0x5a737cdd4fccf6cd4606fa7,
        0xdbdede3082631773c322074c,
        0x225f7a8836b8530e6273f8,
        0x28e1cef243a6c4842583f8e4,
        0x80feca7b40e23c5257165363,
        0xf7d734b1c672e479f2b07e26,
        0x192e9a8927b36d821bfc4851,
        0xdb247869b1fa579f32f63bbc,
        0x908b6b4a810369dd3988ac,
        0x91fd905e9e22d2c9d4b1a9f0,
        0xb651da7895d092758e6fedb,
        0x10,
        0x2ba7b3ef35be4124c3ab28c9,
        0xa88786ce28f20bc98a46f718,
        0xed8ee927e51cc840ef4b548f,
        0x172b954eec8767b58ce1cdbf,
        0xd67be0d74b8bf0b13dd6996,
        0xb175ee37d5d61e953cae9173,
        0xfa2de1a0af465dc2d6d0296b,
        0xf63f088a654c5cdae6b4222,
        0x8b212c7798629c7612cab313,
        0x4b883138fb513573d4061d3,
        0xcc109f403faaf3e263cbd141,
        0x135578519b648136394e957a,
        0x16474c493f238b8182849062,
        0xc895c37236f24c750481f527,
        0x4aca8bcd675bc8bc35d6a305,
        0x15db62c1f9b986d2b16ae084,
        0x463ea2ad7b4108a2a7148893,
        0x8b76db13e838262c9f6f84a0,
        0xae67e1e5bc1a91f8ccd3442e,
        0xaf791b7441815369892fd28,
        0xc0ff05a0f8e81c863678c805,
        0x9e84b48421822bf716ee8da3,
        0x9ce134c55d014330283c7a7d,
        0x9926fadbca9575f01681e0a,
        0xa9feab9a005c10e1178665fb,
        0xf7c5e9e932530580cb72cea5,
        0xaecd97111f22a7532b7ccc3c,
        0x12b10d9a9d857db50fcc174,
        0x19984d2fb13bafb15a1d568b,
        0xc67ccc78de738b6075d2dbd8,
        0xc4dbe1471dfd998950066b0,
        0x6a11240a606b4bba27ed726,
        0xf47ad3734183ba8b87b45f9d,
        0x142b3aff280f91a5f638dc00,
        0x188428b321081e36052d0816,
        0xeb973e10ba44ddc109e009d,
        0x9501d6e56e420098deba78bd,
        0x2dd2092bc73b546384163696,
        0x5afb662036b73b71071ae2fa,
        0x11c5433a7c147522d50ad8e8,
        0xa4c29aec7aa90bdba8d88cfb,
        0x939dab5fbdf479a33e9232e,
        0x4ebf8f10f656eec87fcfc146,
        0xaf1078d82cac8145057d3f6,
        0xf56ddb0b97127a155f6ab410,
        0xc811347ad3062c4bed8c2012,
        0x651af2f0792b656dd85be4d3,
        0x32503d948b50b8d456d3dbd,
        0x3f092ebd1c70589c3dadb5dc,
        0x675baca0eb2cf0c1658cbc2a,
        0x4d9899c948c2a7316386c435,
        0x907ac81eb8a3ab3b53e12d7,
        0x6f24e966b2c902b7d7ba1d0d,
        0xc290687a5391a3572d40ce88,
        0x7203fa2a79c29291c1c36cfd,
        0x1541ecf55b3a6c464ff1bd1f,
        0x1dea8516009a586cd2e3f115,
        0x1fdc7ae33e4f48dceb587c79,
        0xc1fd5d26e0d315fb90403c79,
        0x34f99829961ff117bc9353e,
        0x1,
        0x0,
        0x0,
        0x0,
        0x10,
        0x8330563ef40e21184bd1a32b,
        0x9370d7539654644d31a9d5ca,
        0xb0248cfc9565b7e080483fec,
        0x19f3e37d696e791348824aaa,
        0xa20657e6e8cf56037d722fdb,
        0x79103efde9bd8947b015bcfb,
        0x19c63e96dcb5911955d9402c,
        0x6f68b19875c59530d9868f7,
        0x23c250b7799d967ed5423dbf,
        0x37f99c3cd5e521219d8a43b7,
        0xb4bb50d341cac96de3877ef8,
        0x865b91a4b8d41aa6b568de4,
        0xee57ff24347e9ddc5cc523c5,
        0x6b546e94b27e33dbfaed7cf3,
        0x1d946ac108209c065a54d7b7,
        0x402a914067cc6bb4880e90a,
        0x9e7c405e26c1bff29b8dc7,
        0x86775bd5d20bb9e98f99b069,
        0x32ec3112609dea298c5e286d,
        0x483d0a9204901fdd3f37aa6,
        0xde7b71cfb95f12157e682fbf,
        0x378c035b3cab02b9403d7e11,
        0x215258a8cb2914e40e45ed6a,
        0xd1a1e592fc1b791cc97df83,
        0xcf33167d6fe50ed0676fccb1,
        0x877583b7122b5e9dcc71965a,
        0xd5f0708302b47b7deca10f22,
        0x13e950a730fb18f343ccab8c,
        0x371c7d6067543c6dad8d547a,
        0x7831e326ef3590418573f553,
        0xb878f54be2e68ad4d318ed78,
        0x14556bbe0a9e300da672d6f7,
        0xc4d4be1c383071683d0f04c8,
        0x9ace303e6c7cf3004bf5a53d,
        0x8b2cdaf0ebc3283a650af15b,
        0x5c713452ebb877c52618f64,
        0x9af203ab5f6ae317c5b467b9,
        0xa9ce0c4eb805a5f9e9ecda9a,
        0x3041ebccd57a51bdeee7ce1f,
        0x1526035093ece32a54b668cd,
        0x2fe2ede933a733043e2503eb,
        0x6a990afc46d94c01d1370170,
        0xd9b8063e291bb2157b745ddd,
        0x9b1d2473741a37a6f7102ab,
        0x6ccf7984ff1f9463d3ac177b,
        0x49e7dba7c628cd397ebfdb6,
        0x289c499064829d6fd06ac9bd,
        0x130eb0dfaffa5f97d11c7e1b,
        0x3ecff0c3e2d84adecb0528d5,
        0x8fc4d1b5c2ff80d1a1f2a26a,
        0xaa0a9d267eb7bdaa0479e85a,
        0x2a32dfb1455b0168ae88bb7,
        0x7ddd0f31faeba2ddf7753b81,
        0x1c39dd044f1f4c6d5ec30060,
        0xb4eea679deb782350e961838,
        0x137cd7e8260d51f26538d26e,
        0xd305d78162eda3b73cf4f61f,
        0x6166c59d816d59cd51f4bfd8,
        0xfbfaf112352ee9dfb9b957bc,
        0x12d2e9624040084844d1299d,
        0xdbd5693a0a37dc7c7018af03,
        0x544960e36e328da4898215d3,
        0x4a8e85c06e24c7e72b146ba8,
        0xb62223566881a3460111320,
        0x13,
        0x9aa2cfbda8fc04930eada323,
        0x6c8ba355bfb54cb9cd17dc64,
        0xec589e19670d3e74e29e1a00,
        0xeab1f7d059deb0752343fdc,
        0xd2f6f8365ee4fc2c4f765102,
        0xf776139d69f68e0cb56245ce,
        0x62202cd3f42ae0017436802f,
        0x98d9e4e26534a022375b91f,
        0xc9dcb1deed8c71d84b2b76f6,
        0x4480670c51726114b7a98750,
        0xa9ab235235bd387fa8251f85,
        0x1953bd71fa9237a44f03067e,
        0xbf74e5154a506f2acdbebfa5,
        0x2e1b4a1329f7650d219ecbb9,
        0xb8a64fff0aebd1df89195a9,
        0x694d8aded6de897261eb0f8,
        0xc3ba48c3edbee195b030368c,
        0x10efb5458954caff7d14a3f6,
        0x2d360f88d6c20e9c231314a7,
        0x740139143b54d737a7fe759,
        0x2c7542fc08050e8eecae7dd1,
        0xb069afe2285bd6eb5ba29865,
        0xb8fe18a6eac169991db395b8,
        0x59d13341b0a117da8b7be38,
        0xcedfab18694cf05e09e7da3,
        0x407c9876098d6c5413a12fbf,
        0xc2b53b3a7f6f1a83f044c13a,
        0x86943e679affa5aa423ea0,
        0xfb4bd76c8630c7680f8a3814,
        0x3e393a566b555d8a580ef401,
        0x9c532d601f22acd62d4fcc32,
        0xb7ac8cfa2b3018ad772b20a,
        0x3042536e8af906b4554af123,
        0x20cffb3ed45e8646b279fdaa,
        0x785a7de3183324fe55e67557,
        0x10761b5d783ac19aada8d112,
        0x9b5e0730456613449270f399,
        0xe0ac695661de6ac69e73a902,
        0x9423d5e33110fe0d60de32a6,
        0x143df9ef272a5f320ef0d5a9,
        0xfb4eb8e1e1e0df1ffd7fdfcc,
        0x843364afd73fb3a526cb6893,
        0x4004d80e6c44935a0ba5909,
        0x18641e8c77b1ee7298c27f49,
        0x18de3fa1e3cea2e1055f8532,
        0xcd3f3a497d774cb18dbd5c4e,
        0x69a4479da13e6868731788a5,
        0x14c715bf4f89576db374fdc,
        0x2e7e91da6c056309d571fad7,
        0xfcdf166d868d2b20dcf12742,
        0xac6739690d3412cae2bce50,
        0x1e1d16db73d92bd13cbd4d9,
        0x4d5a408817d016bb07c2012e,
        0xdde904bc6612f28a8ce85d54,
        0x4cec7134affb5680ac4e3cfe,
        0x11f585a44334c55eaecbd151,
        0x6d17ef63997bdbc8aafa7864,
        0x47832007cc434fbf9aee11f7,
        0x6d10678bfc77bd5c195cd6b8,
        0x106369e3ae3d07d3349212b8,
        0x3f092ebd1c70589c3dadb5e0,
        0x675baca0eb2cf0c1658cbc2a,
        0x4d9899c948c2a7316386c435,
        0x907ac81eb8a3ab3b53e12d7,
        0x6f24e966b2c902b7d7ba1d0d,
        0xc290687a5391a3572d40ce88,
        0x7203fa2a79c29291c1c36cfd,
        0x1541ecf55b3a6c464ff1bd1f,
        0x1dea8516009a586cd2e3f115,
        0x1fdc7ae33e4f48dceb587c79,
        0xc1fd5d26e0d315fb90403c79,
        0x34f99829961ff117bc9353e,
        0x1,
        0x0,
        0x0,
        0x0,
        0x858f352976bb89142abee5b,
        0xdc7a0a8104772ebf3ae0508f,
        0x7f0ea6356c70e9de357724d0,
        0x1527d3e02171578f112f6fe,
        0x1,
        0x7caa1644a3d39b27541228a5,
        0xbcf1db2120a2de54f0fb84f,
        0x694022bb380a1c78f652c49d,
        0xc3b071769343328ac5126d7,
        0xc,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xaefd0d854043fd325dd3c34f,
        0x9b63c98d9a7845c52e1e2b0f,
        0x9db0be660d847ccc58358f3f,
        0x17cb6c41f0c4e1a7394ab62a,
        0xcf86158ab69213388e721bb7,
        0x5f7812269d790797cad9aa15,
        0xb1c3622a0177001d9ed8e25f,
        0x115cf429f459884785c6ba46,
        0x1e81341e2f3f988ff115dda3,
        0xad22946489db6ee4954fa5e1,
        0x83bed94412e19d92b73cc763,
        0x2074c7bceff87d0d41edba1,
        0xe2955c55da59eba4b7b57d3d,
        0x1e6629b0431bce67cf28c22,
        0x1c35b7efd5b67f87221b8bfc,
        0x3e53df9e3488a9e42acd87e,
        0x2e089afa726154d40dd12102,
        0x5391613ecf49db2bcf1cad86,
        0x84a2abb2de6b3a6e09026a50,
        0x19557a3a3c1d62a205d5dc87,
        0x490bf40774926e8b279947c,
        0xeabab6aef9e9d2a4f64f4e7d,
        0x3e309fe1b1c8247abab20d7e,
        0x79c527862917f69ac58fcc4,
        0xacb18f2da2b425c2ff50dafd,
        0x7623850d87e279a8a30f31ff,
        0x777564c7291d95fa80203ade,
        0x1764ce0e7fb626109b63789b,
        0x42f2f3f4f6b9d2c2b73a361f,
        0xcd78c070c184c38b1e5716aa,
        0x72cbc24cd90da89e0e3cefe4,
        0x19485e1c46d0dce75f8b192b,
        0xb56b3539074b3c47b3f504d9,
        0x2c229530bddedd8851b03dcc,
        0xc93eef8474c4e18d6378e7f0,
        0x173d36f17a3c9ae77a2acc25,
        0x5fbf29cf20556a11621a6639,
        0xdfda5b7dbf0b226822094787,
        0x4a3b059e521b4b0445df96d5,
        0x333988c2c09f5af061cdfb,
        0x13d3570be6d27d1d588b22fc,
        0x20c763e58d4df3e4990cdae9,
        0x2c3301367f400c31f4bded26,
        0x16a6c25d133fba74b4c55972,
        0xcb24d12438557639f52df5fd,
        0x4a6a46feebe8a88a8062bd0e,
        0x65f04211af4b168b1e25787d,
        0x17935d6f4fa575744ca46f75,
        0x644f324be8a5c152625a5b8a,
        0x501e52e8c5707d7a3a77ee18,
        0x9636c463c14c5b85c2e6d3b1,
        0x1939b6f297f7b5b7fd0ac458,
        0xde1d8e2670532ec5bba60ade,
        0x1154f5064f7dd38656f7f82b,
        0xc9bec68372b7d07dcf66270c,
        0x315ced00b3153219bbd430,
        0xc48b3bc110e208d827b13f4d,
        0x87d82592699bca3dbf847c2b,
        0xff04f0f2c8be12365aa73443,
        0x1739c8c450ac994a5326c809,
        0x8904b74d5d114b5416df0ed6,
        0x479ee13e49cde067742c2655,
        0x45b9359bfa338dd432ca9ff1,
        0x12bf6460e7a42942be6c16a0,
        0x3a8b37aacb2f620bc41c6109,
        0x91f68edf90b5947273b0aadf,
        0x265d48695a73800b7404124c,
        0x141e3d99b3ab683bdb0ce70f,
        0x6d6db022a8549ee86374b69a,
        0x3e98f7258170733507d8709b,
        0x10b4337a56d4cd17ab2fe1d5,
        0x11366a6fecb124757076f4b6,
        0x77b25b600d3baa1a2f54f826,
        0x924c3c1a699e9b27b3612246,
        0x6a253cae0097b1955d4f0cfd,
        0xd2bd6591140d2faabafefac,
        0xe706f12d726b82e518e76de2,
        0xcbc3fafc8178466a6bfb6b20,
        0x27d77f8bd8c4a2d2333b94e2,
        0x3fd4d3cb36a5470ac66276d,
        0xaa24c8373ee67a1fdcfeddd6,
        0xb14ff80cfb97cbe0062505e6,
        0x1f3cff0169eb74ea25e4b514,
        0x9c9767230b739e24df854f7,
        0xc,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x460ba2d39a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x2894fdbe6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x43870ae2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x56e06d3d16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0xa4593acd7ab792809e469e6ec62b2c8,
        0xd450fe4aec4f217bb306d1a8e5eeac76,
        0x6b3f2afe642bfa42aef9c00b8a64c1b9,
        0x85940927468ff53d864a7a50b48d73f1,
        0x1b8bb742d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x233a1ba09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x4b2543867c879b741d878f9f9cdf5a86,
        0x30bcab0ed857010255d44936a1515607,
        0x22b15f3fbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0x368b770c552116dd2ba4b180cb69ca38,
        0xc87a746319c16a0d0febd845d0dfae43,
        0x1c00c5a3b29a8b06daf66c5f2577bffa,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x8bce5042829fff73a3bcf235,
                limb1: 0x24302605af7afd068c1bac35,
                limb2: 0x37e884c17dfeef6ccab457b5,
                limb3: 0xd33acb51b348e3a6fe9f58b,
            },
            y: u384 {
                limb0: 0x26976f00ce9dc19a844a55bf,
                limb1: 0x305566a6af04e25742e40b78,
                limb2: 0xeb73722c02dbef5226438532,
                limb3: 0x1618caeaf7d7b6c6e1bf656,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_1P() {
    let mut data = array![
        0x1,
        0x9436821257142dd72820672d,
        0xc620eb419f1fe7d73cb5fefe,
        0xc64a9c09ac1f5ea7,
        0x0,
        0xa7511b8bdff092bde43f2151,
        0x22e576fcf3094192fbda2872,
        0xdfa1f4b9bd91fa05,
        0x0,
        0x51fafdb2da1ff7c9a8a14b2f,
        0x6cee75a31e68e31fe52c0800,
        0xe68f39600d63e2a7,
        0x0,
        0xc7545cbaf91748ede45e709,
        0xe1e9f105b92f17716f22ec86,
        0xa2c4c708bc48d9a0,
        0x0,
        0x310c0bbb7ee3baa463a14b32,
        0xe4a2c10127642331129d8f9f,
        0xd48ddb30d3212023,
        0x0,
        0x1584ff8e95a6c0cf0026addf,
        0x8df5471b2fd1d86d30f5b117,
        0x1b5d5d6744ca8ef8,
        0x0,
        0x4,
        0xc8d3f60a6aa9e1613aac0cfe,
        0x9be9f03034777b137f6eb2d5,
        0xf67167c753b6c898,
        0x208c459608af9a668bcb6a8a,
        0xab365964d7fb6802a2994647,
        0xf2961efe399f371b,
        0x4a538d1f3c074060b48dd2d3,
        0xf60fd382c00d2eae1c69afb6,
        0x5a27bd639b130e11,
        0x29a1da522a759045efa85c42,
        0x5ad5fe8fc87eb6d4499a4203,
        0x2782950212c01f40,
        0x5,
        0x2ed1feceba647bf018fa766a,
        0x97d129da5745c98ee117bfde,
        0xf9c801813433fde,
        0xbf5afe6a1d39026cfd25cee3,
        0xc3064fd8371a531b541b623f,
        0xfed893f15dd986fa,
        0xf97d3154ba224cef871511dc,
        0xad399907aebca61b0ca8e7c0,
        0x9403ba0e14c314c9,
        0xd785e71d41b0d9d66d5978b6,
        0x6294dec7420d14d4cd674d26,
        0x88c71c8aee3b8979,
        0x1,
        0x0,
        0x0,
        0x5,
        0x814e97af620a2dddf8eeac52,
        0x7105d425a6731b5dd50d5673,
        0xacfc5053cc602024,
        0xb993a76fda5a18c102f78468,
        0xdfad41dc4a076c48510cdb79,
        0x6c438eda0e5f01fc,
        0xc3a06d30a6698da446a5cc62,
        0x7b1fb4c2b10bab5fe9be926,
        0xc4dbd30bc89a45fa,
        0x55020e22d6b74b3f427eb9d2,
        0x5468727dad15d9f0e44d10e3,
        0x34308dbd9856033c,
        0x9bd48ff5c036742eee2a6b3,
        0x22ca4cd879509153b2b0d7e7,
        0xe543d1a4d899cd1c,
        0x8,
        0x68fda797908ad172aaa22185,
        0xad1002f35aaf6a56a547f312,
        0x4e6141e173ecaa73,
        0xe5a376c17a6b9ded699d4204,
        0xd8a948182d12f6af03b1d0c2,
        0x4266e6bc735aee05,
        0x824130bb668fbbdbc00b8038,
        0xead1772e722aac4da5d09fbe,
        0xaa1a17b51c239773,
        0x4ab0f7a380601301e6b34e07,
        0x59a7c70e841a57f9d3b897e4,
        0xdb7110da8c5fc082,
        0x51cfa0893f4b127dcebc50b,
        0x4f3370d7e78b9b595102817d,
        0xbf4974283d617e77,
        0xf97d3154ba224cef871511d9,
        0xad399907aebca61b0ca8e7c0,
        0x9403ba0e14c314c9,
        0xd785e71d41b0d9d66d5978b6,
        0x6294dec7420d14d4cd674d26,
        0x88c71c8aee3b8979,
        0x1,
        0x0,
        0x0,
        0x3594e3b84e893dc0e07d73cd,
        0xeb58d2977a122ed8536cf9e1,
        0x1b8d1473631403f8,
        0x0,
        0x0,
        0x1,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0x1,
        0xeb1167b367a9c3787c65c1e582e2e662,
        0xf7c1bd874da5e709d4713d60c8a70639,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x5ecaccc77099015edd4567b8,
                limb1: 0xa82e8c31fd89230e9e054b35,
                limb2: 0x9b8f95662d8ac62b,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x197a10d65c49dfb9020a06d1,
                limb1: 0x385d645da0e58782b062bea8,
                limb2: 0xce16e956485f6821,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_2P() {
    let mut data = array![
        0x1,
        0x9f631c63cf70ae44a4f5a2a2,
        0x5aa2f48efe1c88101f80186a,
        0xf5a6e4dffa999a49,
        0x0,
        0xe6b4a7566e8864eedee862d3,
        0x28665d4a6e2274862789da95,
        0x544a0084c86826e1,
        0x0,
        0x70dea0dfe4e7fec6602a1bed,
        0x29c310a365059fa2d72e40ef,
        0x4bedd53a18f4dc60,
        0x0,
        0xfa49513b356c9ca2bb554f7a,
        0xccb42caf4786c1e9a012ac89,
        0xa8f414c492b79cb9,
        0x0,
        0x9837ae626bef2667c055bbe6,
        0x2b39522c2fa59614c47a00fc,
        0x17b31f35a5d8cbb8,
        0x0,
        0xaf2a10cd568f6a3e1fb1bd84,
        0x59ee46ef1268c1e166c297f6,
        0x1052233f548d7377,
        0x0,
        0x5,
        0xf4488028ae5d5bac1e94e9fa,
        0x3d6b41336517d3da2a581576,
        0x398a0652081e65aa,
        0x58532af6f28ce814d27d5a7b,
        0x3d82284c2cbdfb4432070b08,
        0x2b1bb660c633ae3,
        0x3d01334cb3fd78392b5063aa,
        0x4b5e26d34be31a347ac685a2,
        0x2e9fb34cdbb5baac,
        0x1348d46ce8de8015043ac5e6,
        0xd36689c1ad744a827eb033f6,
        0xf50ce1f557241e91,
        0xece0bc7f1fd0e52c53d51c67,
        0x2ccc9f7fa8eb0b61d7e8612a,
        0xa4ada2f935b7f3ac,
        0x6,
        0x1653544a0012c4205b84bef3,
        0xcfaa368dd5c165f3705cc1e2,
        0xeb5f189c32fa84df,
        0xfaa0b9d9b076b733ad3a16f6,
        0x525f1884d44b0109603a65c7,
        0x5b6c39194d957ae7,
        0x67377000e97d37d2540a059a,
        0xa953a44d409a25ead5ec6eab,
        0x3b22da1a674fc253,
        0x9e2afa5a7c71d2fafc6c540,
        0xbfe4923c772fbc13d1ddabc7,
        0xe5836fc2333835aa,
        0x724af277e092a494e7279453,
        0x879442a72107d6eadb2a6717,
        0x10ffb024643f02f8,
        0x1,
        0x0,
        0x0,
        0x6,
        0x3f6972dd517bc9fead81e087,
        0x3d116183487c21147022c875,
        0xf77810081958cc03,
        0x5e255c980a4e1c0a6834fabf,
        0x2615f2cd0641235290903dc9,
        0x1f48780551a7a0bf,
        0x7d68ab3afc38e3daabb7a02e,
        0x2170e31d3b5d98357e923ce4,
        0x8a177353b359896d,
        0x2008db26f0db18e7066f9b91,
        0x2410134a97e6d06152a2242e,
        0x7e80607eaa76fb91,
        0x48d1eb3e45043609c3413007,
        0x14615c891d7051854f613b92,
        0x63e15c5bf21957c0,
        0xe1c11ae4c4bb1fc7e6cce4b1,
        0xd5cea0008f51536e48ece33a,
        0x86d9ad33d2b3c153,
        0x9,
        0x7f72ba88f10cd0a842d452ef,
        0x2ea45f140859786cd93c4f6e,
        0x2343763613182f0d,
        0x57702ab90a1a77e0ac738e04,
        0x3c7c853e11df3a1921692e79,
        0x84522505886af653,
        0x570904dd89611ddf823c683e,
        0x6fb484638a544341e6d1a964,
        0xbea8a95fa7bb5433,
        0x51b8cb57a7e338cf81e01a5e,
        0x6dde863ac22bd10d70685e8a,
        0x7b3dad75287ec473,
        0xb729fd43835b73b1a6090a11,
        0x7fdfb16155c7857fd7a337fa,
        0xe30dee5725b5af99,
        0xdcaa498f83938651c665a8ec,
        0xc68299ad541b27e6a98a4015,
        0x62e9ff85e4cd4d51,
        0x9e2afa5a7c71d2fafc6c53d,
        0xbfe4923c772fbc13d1ddabc7,
        0xe5836fc2333835aa,
        0x724af277e092a494e7279453,
        0x879442a72107d6eadb2a6717,
        0x10ffb024643f02f8,
        0x1,
        0x0,
        0x0,
        0x9a749e4051344c2dd257e549,
        0xc5f07236697616260584cdef,
        0x14a5d65b28e8c69b,
        0x0,
        0x2,
        0x1acde3383c2fd194a562b820,
        0x5feb451c38a164e61038a336,
        0x4a1c251308392719,
        0x0,
        0x4e00d50d8fff14ec53496ab,
        0x4765c05bc18d12830b4798a8,
        0x17844760cf7a2fd4,
        0x0,
        0x2,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x7f8bb562ff60a902ef14bcb0,
        0xeb9420089fa531db62e806a6,
        0xfd028df433dfd5cc,
        0x0,
        0x2,
        0xe443df789558867f5ba91faf7a024204,
        0x23a7711a8133287637ebdcd9e87a1613,
        0x1846d424c17c627923c6612f48268673,
        0xfcbd04c340212ef7cca5a5a19e4d6e3c,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x7c99e6e15710cca6d05a228c,
                limb1: 0xb3b0695cd0bcf4e2fff2aa40,
                limb2: 0xf51b415c36a8d206,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x3ed9af037beeebe8a4e51272,
                limb1: 0x59c17339e41ffb8881d8ff31,
                limb2: 0x8659e768c3fbaf89,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_3P() {
    let mut data = array![
        0x1,
        0xd79cb31dc2b0542f06ede67a,
        0xb98b00c44311bb3ca724bf49,
        0xb5c2684fd6f92f87,
        0x0,
        0x1b240851f32ad546a373eb51,
        0x7b1b154b38b9232af3ec006d,
        0xc1d0bcf577480806,
        0x0,
        0x5c70a87edcdd965bd342be8a,
        0x8802913f2834f6b0965860db,
        0xb83f2de1acec00d9,
        0x0,
        0x3ca6bbf033338d5caab9156f,
        0xd1a8a0c89ed3b7e9f157bf2e,
        0x875869148b23d9fb,
        0x0,
        0x296649cf39fa239e28180a27,
        0xfc96a29c36270223c8955dbd,
        0x9787709708d85e28,
        0x0,
        0x670c5ceafdc89b50311c69b9,
        0xff5ef2ad523b831a22aab9c4,
        0x519afd0ffda5a9e5,
        0x0,
        0x6,
        0xc8549a27610e208ad8475b02,
        0xcd4330742d76a0522dd7ff55,
        0xd7134fd3ca713ee2,
        0x9b12b81126d98e8e978b194,
        0x708d5b24c6eadb0514cb0fae,
        0xb121a469bd9d2631,
        0x64b2b4b7b1a257f89b81d8fa,
        0x80b051fc3de26bdd8b58fce3,
        0x27e5961177764e34,
        0x21541df79537eaa55f336542,
        0xac955d76d611d63648a8ce40,
        0x330a01e3736fd9df,
        0x2968004fd24a88a9880c6b95,
        0xb9581dbe0746ad75e36d339d,
        0xf7e38b87ad24cb9b,
        0xa267d4732f593fae2c632f57,
        0xff753e5aed3cfe134c9b96fb,
        0xde99399fab3b3e31,
        0x7,
        0xb78f9ad1172d03317259f120,
        0x1bfdad143c090bbcc75a6327,
        0x3b1bcd9a21e8b75e,
        0x7e568ed1178f867977178237,
        0xb069f483adda2b3f21f456ed,
        0x784bf1179d90fe07,
        0x389951ed4b85903b81ec4aaf,
        0x8ec12868971f62022e497fb1,
        0xd111760f3786d15d,
        0x512046a06e62ada1ae83e91c,
        0x4dc301292929ce236e32a272,
        0xa2a8fdd16fbb3045,
        0x41a3ff5412db8df560545dad,
        0x7b42089e3862ff8cb2534e80,
        0xda3b7dde9b388233,
        0x76a286bb2b291f0e290f0ce6,
        0xcbba98e4f366e718a08c6569,
        0x3a91c27f01dc7531,
        0x1,
        0x0,
        0x0,
        0x7,
        0x31b3223f8adcb3b90e8b2fe8,
        0x2e1d7b47f491f7f1d57c065a,
        0xb03f44c002fc0f76,
        0xac25d346e290d0cba0508f21,
        0x92da9db7442f3d76e01dcf49,
        0x28975c75a3db32a7,
        0xd4e0f661f91e739ea31abeda,
        0x38e37bd7f3024ff301f2114c,
        0x59ac864deba737dc,
        0x9b1d35791d321b6252722170,
        0x4d36e4a7bb8925b57ffa8e9d,
        0x9624bd31bc4f430e,
        0xcf75e4b6dd0ba06f41e097a,
        0xd7a33b2df29b9636f2458789,
        0x60cf8be6e34a71f,
        0x86d0a1e1f1a2aaa2cfcc09f5,
        0x3634c5d27399ef0cf0d2ac37,
        0xdb1bd1159faee833,
        0x9ceab578b0138f732bb8ced2,
        0x8d4813e8d683f062feca960a,
        0x58b7f4092947cf92,
        0xa,
        0xdc5bcd00360908341351011f,
        0xb1e7ff987f49b8a6b6538a75,
        0xf0e3c07fababec13,
        0x5c60cb4cc22b2f5200ad478d,
        0x7a945a50ba7c278258e800e3,
        0xd4d40540505a5de7,
        0x401733b90711d9359680cece,
        0x8818118266e5ba399ef74a89,
        0x317cda7c0c9bcd98,
        0x244ccad68a275dfc9f480010,
        0x5a2aee4724b99e84f1e4737b,
        0xede6d55dae94a56e,
        0x82621df4f7730c7355852803,
        0x3d1c2c3367d400ddab2c0152,
        0xf88daeb165d69e6b,
        0xf845d73c5ff099784faefd50,
        0xb33cb69d305bc870584646ba,
        0x3e31e97da69e11ba,
        0xb98c636528b58cb55b2922b5,
        0x9e7ef3cfc58d9f95f1aa78e6,
        0x4db9ec2d14606497,
        0x41a3ff5412db8df560545daa,
        0x7b42089e3862ff8cb2534e80,
        0xda3b7dde9b388233,
        0x76a286bb2b291f0e290f0ce6,
        0xcbba98e4f366e718a08c6569,
        0x3a91c27f01dc7531,
        0x1,
        0x0,
        0x0,
        0x43974c871d9e259a210a2dd0,
        0x55e59c6c018fb6de9e6542fc,
        0x4a649388fa1b8eb,
        0x0,
        0x0,
        0x3,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x7f8bb562ff60a902ef14bcb0,
        0xeb9420089fa531db62e806a6,
        0xfd028df433dfd5cc,
        0x0,
        0x46ae31f6fc294ad0814552b6,
        0x2d54cc811efaf988efb3de23,
        0x2a2cc02b8f0c419f,
        0x0,
        0xaec889b9d8ce51c4a2c3586f,
        0xa2b07874c333bfee9f78e13e,
        0xc445de21be8d8709,
        0x0,
        0x3,
        0x1846d424c17c627923c6612f48268673,
        0xfcbd04c340212ef7cca5a5a19e4d6e3c,
        0xb4862b21fb97d43588561712e8e5216a,
        0x259f4329e6f4590b9a164106cf6a659e,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x5487ce1eaf19922ad9b8a714e61a441c,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x60a04d1cd61720fd649a635,
                limb1: 0x4de992ec1fe826266faf9542,
                limb2: 0x7fcc86284cb4d8d5,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xc5cc56bee25131b3aec25cee,
                limb1: 0x60f429ebbf34f181ee9e0f69,
                limb2: 0xeaba7780c9c9f8a8,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_4P() {
    let mut data = array![
        0x1,
        0xcbdc7b99140efe9c44632b29,
        0xc9a231fbe8da03c47c0d66b2,
        0xb02f47597faeca8a,
        0x0,
        0x655639ada5e232fec729292c,
        0x61ce7107f4ba51d2daa5e86,
        0x63a6135830c729c2,
        0x0,
        0xbae3e7b236867962646edcee,
        0xcf0b20e8c9504e235eebe53f,
        0xc3d1341401f23948,
        0x0,
        0xfa6ec300ebfdb6aa1f61aa93,
        0x84b59ad33ac9f13e7491cb95,
        0xcae321fcc58e37aa,
        0x0,
        0xb171fb1783a102343fee5512,
        0x61d3ff9c2f0c5f7f491dea7,
        0x6859f31d6357b831,
        0x0,
        0xa0b58d839397bf8e92fbe136,
        0xa62e140ab79623671c010e2e,
        0x6bfcc193f736d104,
        0x0,
        0x7,
        0xa3139a11da871d4f861b1cd5,
        0x2fa8274a417b1867b6856ca2,
        0x6ece0521a1815012,
        0x1bd9eed616e6ee9f3a60b270,
        0xac986031d0b182567f30ef18,
        0xe8491de58c57348c,
        0x3b67ec9e3646facfc4973c2c,
        0x58ca71f2d085a26a5946bc73,
        0x7c6b5485a8fcbf3f,
        0xe4f78c2d70b6b8061b900bc5,
        0x703d47c834893fd4d1c4bbd0,
        0x985cdbd9510f9ab,
        0xbb39a8442a9fd2a029c06d7b,
        0x2d2c2875cea82a868724744f,
        0x49df5c39018d8f8f,
        0xd93e72aff3b81233a4d2db19,
        0xef5ef82c4949b89b5a1165bf,
        0x97e3b83c2f952748,
        0xceb98dd7eefacbd163095a68,
        0x9e3baf48f14dd0c0cf93e112,
        0x749d7d24b129a92,
        0x8,
        0x8b1233ee0f18c0c0200662d5,
        0x2f91b819e1c92a516d720c1c,
        0x642c7c8a822baa2e,
        0xc8f82a349e6432bebc87bb91,
        0xe304f058a0db1e0f7f9a3cae,
        0x6bc53db5772828cf,
        0x623935646dbaf5cb7e5ab1c6,
        0x53ad97b4cce5692e396c3a00,
        0xd30ef2f34a21ac02,
        0xa5bc4028d3dc01865a3ae6cb,
        0x98ad935a2f8f013ca5a1fa80,
        0xe899ac6c0f86bdb0,
        0x6736428f209a627f54bd968,
        0xa4d448a9823bd89e34b97cef,
        0xb81d7d10e29eb9fc,
        0x1d94533d1c5279935995ec4b,
        0x291186c2091ca480ec39d9a2,
        0x2646e3a36e19b52,
        0x1d9bfc0164de91514c105c8e,
        0x8412869b2b9981864b49b7d7,
        0x8b41b9499c5373e1,
        0x1,
        0x0,
        0x0,
        0x8,
        0xaef108341cda741674f65b2e,
        0x7d6d8e2dc4661096838db41e,
        0xb1cd2790d7cac46c,
        0xbd86b805861221fc077f282c,
        0xfca9f2f01bce864abcdd30bf,
        0x7adb015cbcb2939d,
        0x707b8f8ecde046ebf7841b33,
        0xc8febfd0ffc5b64da9615a83,
        0x4109d07f1bf4e781,
        0x8d5a8e13e0be7d44ec815e7a,
        0xfa567285bd28e24af0dd40d1,
        0x8b6265ac64ae70d1,
        0xfc088ebebf7ecbf7c4936335,
        0xbb6f2fca0ba75128359fa5dc,
        0xccfa675e1507f5c1,
        0xe293058fca2e12c22a95a198,
        0x8bfddcd8488195514ff0b7bc,
        0x44a8d604fe31c4bf,
        0xed9efcd5ad39cb3f115d10c2,
        0xcf188d49eebbdd18a20a63e1,
        0x830305dabcaf90a,
        0x32d7c8150ce7fc7f70a58f35,
        0x760c4f6bd68244fb6f2aa92a,
        0x65ca6db6447916b6,
        0xb,
        0x34f06e637ecf311083fedae0,
        0x7fe1b20bc01ae2e8a6c98c7a,
        0x6ec3fe63d6c541e5,
        0x756f42e585c15da3cde7a135,
        0x30ea67d42e297b5a85bcea01,
        0x1bd2f77145e306d0,
        0xd80d20f0fd70ed2150890d46,
        0xbe2c973b506bdf8aee23b033,
        0x362b43a126792a68,
        0xa8f9bbe6a4766eb337d5fd32,
        0x74d86fcbf2284b02111bbe0a,
        0xe475a60b8589b659,
        0xe354879bd12f72c97cddec02,
        0x2ac7d1442f76c30305ee9a21,
        0x5d52fd79103a1f1b,
        0xd4f10ae86418d876db43da70,
        0xbc4990dcca53fa7a5de822bb,
        0x69ee0a60953409fb,
        0x81ab52e4426440395b89a8fd,
        0xa8da6615eb7cc67e4f17a421,
        0x2e571bfd5f357d23,
        0x79f3211aff3c2e7238ed2408,
        0xcc88722d7607dac7b7f95c1b,
        0x711e870bb7def240,
        0x1d94533d1c5279935995ec48,
        0x291186c2091ca480ec39d9a2,
        0x2646e3a36e19b52,
        0x1d9bfc0164de91514c105c8e,
        0x8412869b2b9981864b49b7d7,
        0x8b41b9499c5373e1,
        0x1,
        0x0,
        0x0,
        0xe033a4ab4acef328d3f601d8,
        0x7da796f77612ea2c4801b60d,
        0x5c0028f5bfeddae0,
        0x0,
        0x0,
        0x4,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x7f8bb562ff60a902ef14bcb0,
        0xeb9420089fa531db62e806a6,
        0xfd028df433dfd5cc,
        0x0,
        0x46ae31f6fc294ad0814552b6,
        0x2d54cc811efaf988efb3de23,
        0x2a2cc02b8f0c419f,
        0x0,
        0xaec889b9d8ce51c4a2c3586f,
        0xa2b07874c333bfee9f78e13e,
        0xc445de21be8d8709,
        0x0,
        0x7e47d1c2d19c21b2f6870259,
        0xe701b40af42001c38bca00db,
        0xd87ea1720d4dd3d6,
        0x0,
        0x5b1d6cc74985ce49a1f737fe,
        0xb9127c572c3f091c031c249c,
        0x1392711e1576aa6f,
        0x0,
        0x4,
        0xb4862b21fb97d43588561712e8e5216a,
        0x259f4329e6f4590b9a164106cf6a659e,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x5487ce1eaf19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0xa3f2c9bf9c6316b950f244556f25e2a2,
        0x8d723104f77383c13458a748e9bb17bc,
        0x85776e9add84f39e71545a137a1d5006,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x34c12d0510448edd8a4f435e,
                limb1: 0x1c1b70597d3d6f0ffda68cdc,
                limb2: 0x8f60be7a69fb2da6,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x67b330ca24613a628c5f1d44,
                limb1: 0xa12378b8d8a57f7ee45cf035,
                limb2: 0x7f7102c7548d7593,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_10P() {
    let mut data = array![
        0x1,
        0xef8ab477f2f9a42842fc6e1c,
        0xcd5be7170ccea2e60444dcd3,
        0x4d0773b6d4d073f3,
        0x0,
        0xe9829a549c3085aab7bdf812,
        0x2d3b0ebe1f13ff7198b9f9a9,
        0xba44576f78530bed,
        0x0,
        0xaacb058b5a25e778c695b261,
        0x65fba931b796a075251f3914,
        0xf2b7aeb5ea09ef90,
        0x0,
        0xa44153df19cdc61d29e4ea4a,
        0x810f55430a4f653374a79cc,
        0xf664e56da08af8d5,
        0x0,
        0x8fbbdc786edc0e8641b55752,
        0x9193a2b44b85edd0e5db79ce,
        0x98c8ad48adab9af4,
        0x0,
        0xa63585bf5a7e86124a861c39,
        0xaf21f302b5ba9fc423d4b36d,
        0xb9bef13ecb06a026,
        0x0,
        0xd,
        0x3958aeca55116ee11b70eb3b,
        0x8a53f1038077025322311e0e,
        0x11f3fc142decd7c1,
        0xd7545fce36b1997fe9228aa7,
        0x3861ab024db78ae4c4fda01d,
        0xa1621c711d2e04d2,
        0x35486ad32fc86b0ec4668e0c,
        0x1e1c5512fbed819e304e6be2,
        0xc412fbbe9f415876,
        0xf5532375ea5796547a8df18c,
        0x3264d191f3ebcf8f3b018f9,
        0x3b4af90dfdcb52ea,
        0xa420b00e933572f9a3c3fae8,
        0xfff5f947a8266f246f6237fa,
        0x75e24e5f269f563a,
        0xfbcdc14ad43890128bc1c54f,
        0xc631ceef82c0068d55395d1a,
        0x4de51386d31cc9e9,
        0xf5bb1dc89fc4f3ee9e169943,
        0xbb00bca0da4ed0b177451fc3,
        0xaf2eb80768332650,
        0xcf80fc82c1c04761c2cd53a9,
        0xb16bc1556f7869c0a063f951,
        0xd1f958265a5b6111,
        0x806f4cc4ea5aa158d135d9ee,
        0xc549be5f36673419bf1e2482,
        0x22ba3324f4f0a1d6,
        0xf92392f956ed23e4dfa92cbf,
        0x1260172d47a0999d875cf2b4,
        0xe58c182d97b0870a,
        0xbf40cb368e4370cb3c295429,
        0x2a62feed0cc20c753f68be61,
        0xa998b476a8bcd59f,
        0x649cfd0a03b2165a0c0009bd,
        0xe9dac1b51e01f5f487e3dd44,
        0x8e77be830f65e5,
        0x4c8afecd63b964044123d6f5,
        0xf76ce281548623659deb5510,
        0x9a474754c3d4b016,
        0xe,
        0x7f4f69691007a6cf81a2336e,
        0x82daf2096733352ea0f5bb3b,
        0x94a284fd39c8d552,
        0xb0dfbe66445ff87900d621a6,
        0xc66df688b414a74e9be4d350,
        0x6e7029d18514300e,
        0x6172974a6411b3d265291794,
        0x3ed8d885068b4172e78417ce,
        0xc0d6a58fa9feaca3,
        0x68c352518455f08b2092a0e4,
        0x7a28f71a539345bdbefce382,
        0x63110d8ed0b2ffe2,
        0x234a598ab1ac71944a58abd9,
        0x9496a232ce53e1250dbef9cb,
        0x6054cb3e0ff72c75,
        0x34eee3f807863e21ddf5e6e5,
        0xaf5df666e91f49a94516750a,
        0x98098b5e9c1fc23a,
        0x535b50985bfbcd35574c2fd6,
        0x9fa2cd3fc0f5d6627b1a2b8d,
        0x4d9b1d3da568f426,
        0xcacf7a9343f8d0fd1ec9ebd1,
        0xb5fc4e515af2ea1e1403bc55,
        0x2c90b6d4544dff5b,
        0x909693402c69ab82202d5f0d,
        0x989ff449721a20415331e654,
        0xd1fa4a156a668c66,
        0x7b25b33e822ba70fe923070a,
        0x110837c42d8c28626507a559,
        0x908a374bc9dece5c,
        0xdb86eb91c6fba31d08abcd3e,
        0x6e743b433b14733a0971b94f,
        0x2f14337b5ef7561f,
        0x9ca4fcc0aa5393e5ba49d0a0,
        0x5ce093f3e3bd906e9958ae11,
        0xb88f1bd369abdf92,
        0x563f5902780a6d841a7a572f,
        0x794e9db9c8500e7dbc35245a,
        0x2605595a62a9f10e,
        0x1,
        0x0,
        0x0,
        0xe,
        0x171b27ddbdee1b1f8e48a625,
        0xb8302f5418fc264d8e843736,
        0xdc75b3a81c141820,
        0xf0a4cda9b0917e0586c3ae2c,
        0xc2cd0dfaacbf9f8ecb70ade,
        0xe6d110f209eb6a4d,
        0x61b91ea2c79e09956a1ec994,
        0x5bcb2649271d659725fa6fec,
        0x26412f5fbf99f042,
        0x604a8155bad538c67b412d41,
        0x73e0f65ddf01906cb6416343,
        0x5e94166fe10a8e4,
        0xa25d96902af65b2812ddeebc,
        0x704fe3c3cdf28f858197c42e,
        0xd8f201c79cf67f6b,
        0x54d7563e9a1578f4ee403e81,
        0x2bbbf27ed227dbe0e66be902,
        0x5f43bf889546251b,
        0xb1279c02b70ab5a713679b17,
        0x923d5049e124825ff3773a8a,
        0x3d3e4358f9869c50,
        0xf4176633a332f3b675e690c3,
        0x9e0deac43d1670ea0d977ad1,
        0x2d3598680ec8bfbc,
        0xeb42ff9dc97b584db5c5f88c,
        0xb0f191e974d293e83196a494,
        0x20fa125e93a994c1,
        0x2f5e452fb7b04d247d8bc5ee,
        0x52b7311e703a8dc314f8a13f,
        0x7df2df595c74fe19,
        0xb44cfa475980c44639e84e62,
        0xdb9ff243273f5b8a5333c861,
        0x3985b500d9016b76,
        0x2c85dd7dfc19b1b4a746bca7,
        0x5ccf1f6819bda8beb9540c41,
        0x53ef5496823b55fb,
        0xff1c77dffc77e19da6bf8d50,
        0xe3414444621bddfcbd4b90c0,
        0x5f266f06ca0c1c46,
        0xa2d1d60edbc7b1f2090e6000,
        0xfed957b5739f167791a7cd29,
        0x25180a3e38b043cb,
        0x11,
        0x5de6ebe4a8744a75459ee6ee,
        0xf9f1175299cc00c06822944f,
        0x802258c97859e102,
        0x89b62efa09a42cbf5915f8d4,
        0xeb15d0982f4d5014758cc17b,
        0x2ebc691d1e5f65de,
        0xba642264b418a35a821b934,
        0x4859d32b0f94dfe5f3f71401,
        0xd9a153a1c4eafd06,
        0x2af942c66ef07e19a9b45b03,
        0xac3df0735ac3d542d5e2b92d,
        0x3067ddd50ccc04ea,
        0x85eb76ccc974c0017e7358c,
        0xcb0a3f190700c02fe7717899,
        0xb1c48aae4f6a9715,
        0x23cf9f5d63766ea9717296b0,
        0xa49ab2148125071a213a7c8,
        0x4e2f1310b291184e,
        0x4a91effbe0649f33769eae54,
        0x5335ed73b79ca1b63a3e3b31,
        0x658f62e38f9feb9c,
        0xd326e12b837d06b179c2c018,
        0xbf1f809dc737a1fce82ea639,
        0xca3cabdf3b8ada06,
        0xe4c827ba60400bd7488cfd28,
        0xe3547fd81b50bcde645d3f1,
        0xaa54566aa0328e4a,
        0x1096aec241a85d04fc23d4d8,
        0x724c5c7a490374ecc63e1817,
        0x60ec73ef6fd5c329,
        0xe2dd3c0244dfae9ee7196927,
        0xac52ea19213b05f43d2a364d,
        0x36840e0719aa61e1,
        0xe290a5f9e80f481f390affb6,
        0xc71b899ce3824b1da8bd6c0f,
        0x69df45916bd5b6fb,
        0xe0e475ea35e22dc5aa82ad59,
        0x90ba7f088b48fbd995739a6f,
        0xa6bd03ece416f6f2,
        0xa51c91809aaa96cee10f27fc,
        0xb6741f6b58bcce7d39ef52f1,
        0x17ca5d44e13416db,
        0x9ca4fcc0aa5393e5ba49d09d,
        0x5ce093f3e3bd906e9958ae11,
        0xb88f1bd369abdf92,
        0x563f5902780a6d841a7a572f,
        0x794e9db9c8500e7dbc35245a,
        0x2605595a62a9f10e,
        0x1,
        0x0,
        0x0,
        0x45df8b38131b68556a52af87,
        0x157092bcf02347fe86483372,
        0x3f862a954fbeae25,
        0x0,
        0x0,
        0xa,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x7f8bb562ff60a902ef14bcb0,
        0xeb9420089fa531db62e806a6,
        0xfd028df433dfd5cc,
        0x0,
        0x46ae31f6fc294ad0814552b6,
        0x2d54cc811efaf988efb3de23,
        0x2a2cc02b8f0c419f,
        0x0,
        0xaec889b9d8ce51c4a2c3586f,
        0xa2b07874c333bfee9f78e13e,
        0xc445de21be8d8709,
        0x0,
        0x7e47d1c2d19c21b2f6870259,
        0xe701b40af42001c38bca00db,
        0xd87ea1720d4dd3d6,
        0x0,
        0x5b1d6cc74985ce49a1f737fe,
        0xb9127c572c3f091c031c249c,
        0x1392711e1576aa6f,
        0x0,
        0xb71f95ea692ed186e06e4c37,
        0x807276cd9cc59718bb11dbe9,
        0x10756a25836d67ca,
        0x0,
        0xd34211b3520c83c5f9be99af,
        0x8f19a28ceef67bbda102ffe7,
        0x7ac2b92030d351cc,
        0x0,
        0x411bb5d0fbe844f025c7178c,
        0xcf603787227b7ac499d6d1c4,
        0x5f6b2479862eb2f8,
        0x0,
        0xce60303cfcb98726ff64a1e5,
        0xa64534c614754b3527588d25,
        0x44f75e245622181,
        0x0,
        0x8a703177da18d4ede707c057,
        0x7d6c11e754ab6fbe73deea43,
        0xdf9787168190a047,
        0x0,
        0x2e6585ab5f125a34fef37875,
        0xb70e9f02ce7744197172a117,
        0x60e305f9fe6f2298,
        0x0,
        0x712f72f3929408ff68af059d,
        0x4f72cea12cd115dc1c8639f5,
        0xc6d5ae1b897ffe77,
        0x0,
        0xfcf91f56bad0659142668837,
        0xa15458b49bcdad6c870e3889,
        0x81a1342e70b1b765,
        0x0,
        0x461d7579f9613d3168fc6220,
        0x7626024a6195fe0eafcea08b,
        0x32e91b268a032443,
        0x0,
        0xcdc7ae298071a741aafd4035,
        0x9a9bdfbdb824dc1278457a10,
        0x17fbec3713dfd145,
        0x0,
        0x9b85054533e9d24310265ee0,
        0x51cbb79b2625c435ba43bbef,
        0x1fd81fcb136c629b,
        0x0,
        0x96378a2e47ab50246a9cf131,
        0x4d0f08867537268cf39eae04,
        0x4eeb60396f3e5f52,
        0x0,
        0xa,
        0xd3fbf47a7e5b1e7f9ca5499d004ae545,
        0xbaf3897a3e70f16a55485822de1b372a,
        0x101fbcccded733e8b421eaeb534097ca,
        0x38c1962e9148624feac1c14f30e9c5cc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x1759edc372ae22448b0163c1cd9d2b7d,
        0xe005b86051ef1922fe43c49e149818d1,
        0x7d41e602eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x552f233a8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x8c1745a79a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x5129fb7c6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x870e15c2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0xadc0da7a16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x148b2758d7ab792809e469e6ec62b2c8,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xfba2105cfbf4fb86b8691c25,
                limb1: 0x737afa206da896812a1683ed,
                limb2: 0x3770a73db013e250,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x5590076303a44e451ab3856b,
                limb1: 0xd5fcd660db51d063c730f5c7,
                limb2: 0x506410f9c703c100,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_11P() {
    let mut data = array![
        0x1,
        0x1251744efc2a9f75dcba4c13,
        0xde933eb966679bf7e7b4d5,
        0x641ab4662d17606,
        0x0,
        0xa02d301d570c7a44dabd4dff,
        0xc3f94ccc1af75bae9971662e,
        0x4efeb0cb63ab180,
        0x0,
        0x13e1e064677a3d6576d0f20a,
        0xa47b8fb2d3027969004a8b8f,
        0xeb0481528360db9e,
        0x0,
        0xe8f742ae97488322747bf37e,
        0x5968b0f5c923a81d98354086,
        0x5f7e3df072b384d9,
        0x0,
        0x202e8b139e8606f1ec8816f7,
        0xfc44e4010849f40747776205,
        0x8bbb4ce58972fe5,
        0x0,
        0x15350daff072aff136b7a81d,
        0xf921dbbc3ecf83fc350a5951,
        0x89570c375eca5863,
        0x0,
        0xe,
        0xb7a10dc0c8043c0f38700f68,
        0x94bfe6242241ea86433fe3d3,
        0x4b8c1523b648e234,
        0x247e818df1bfb695b2738ed6,
        0xef011d4abb61305b4a1956c8,
        0x42b106e9b05ed5d3,
        0x134c9aa3fd0ed9f59aa4e5ad,
        0xc740a07034933c8d91f56c34,
        0xf90de647e9bbcc0,
        0xdc31e85724c0b294c98dbcc8,
        0xf5c17b5e23b6f8e527738d35,
        0x8de9d584817f254,
        0x58a8e128c7557f70a87b555a,
        0xdcc92445d2756b3d0e027456,
        0xbce8f35d6f39af12,
        0x551a7827c554db99376bf3e6,
        0xb32416df78ee13b3be325cc9,
        0x2b146d4037bbf303,
        0xc5c7d05f26880a165b1f8346,
        0xf72b1af8fbffdf7a72f5d63,
        0x920ffcf8fb3deeaa,
        0x1a9db0e9b208b2d0ab776a3b,
        0xbaea2805b8a478397c6ecefa,
        0x6f71de0ec2729f0c,
        0x6e1a7bbf2c5302c2f921f319,
        0xcad55428f3f521a4a8414000,
        0xed97cb4bd837ff2a,
        0x479e1d77c6be7ba7ddb5745a,
        0x863c8357f4160f277f266a01,
        0x8968eb60036cf563,
        0xa60d1a0a262f4eebdd32fdd,
        0x95b4cc6926d90e6d0291d1b8,
        0x269555ce45f6e423,
        0xf38a10171b13e63b978e030b,
        0xd3a1f6c1c6cc265cd0783a41,
        0x27d938d4cae3796f,
        0x8f9fac86c44391de3aec2f0e,
        0x285a2c0f168a58a67d94747,
        0x92eb793d31ba2dc1,
        0x31673d3e6b6ff33c5308af4f,
        0x8f962113c06e0386ce4b9efa,
        0xf68c6e9e067b2383,
        0xf,
        0x222367eae5ed65efcf58525e,
        0x20378a094968790d6b3c99c0,
        0x36a3766d6e6b7b53,
        0xd9a2af6b3b6f94a740a774a2,
        0x9229e8c4fba28657999c4c9f,
        0x355c2df5626f5cd3,
        0xbb8feb1d660c61a6895f56cf,
        0x4b984b0253a1ef2eb38204a6,
        0x921987c50045a315,
        0xc24201262f9289fddd794af3,
        0xe1bf68d658b3e33ae2f21dd9,
        0xdcd279bff6087c72,
        0x1b7b2a01e6346ef82ce03ff9,
        0xc467d53bce98be9c4eb70ce8,
        0x69c506ab891c138f,
        0x1391f54412c5996834cd40c,
        0xc4fab096ffe6588a44718481,
        0x2eb66cf7678fed14,
        0x44a5898104ecdfc3e4f70681,
        0x34a085710536ccfd0f9407eb,
        0x681e9d40f604efdb,
        0x159a46399644626193195e47,
        0x78c48504584db2cbdd6eb612,
        0x74ab84a2dedf942c,
        0x9826c5766cf578a916b7ca87,
        0x1b7c3150afbaccc5973f4eae,
        0xf991f088691c000b,
        0x120c18a3a1261fcd69395688,
        0x8b8c3e248564445b1b865f93,
        0xdf540aa364f3429e,
        0x47836c12183570d0ccde9e3c,
        0x5eabe2adbf95f7406949eed,
        0x228f5caba81d2169,
        0x84f87d435ff4e6006e78e725,
        0xa16d562e3c13385be11071f8,
        0x1020d4919efa16c0,
        0x8492ff068d5dee02ec318ea8,
        0x515b6bd14f1cd78164fe2a3a,
        0x34f2a85bd4e33aa6,
        0xeb55aee32f91d42d0e896095,
        0xdb9fc4665d3193f160263721,
        0x848125c02ec7296c,
        0x1,
        0x0,
        0x0,
        0xf,
        0xcca1ae9b1340e23949a8abb4,
        0x5d51fa440d0f104fccafde77,
        0xc7d697beda958867,
        0xc09d47f36e2cd6e0bba764db,
        0x634e7c289fbbd41846f11399,
        0x439366d2d16d7ec6,
        0x43f8188b64dfdc331842d692,
        0x63076e3702785f9604e154bd,
        0x40329f7c48532615,
        0x7e96f95777ee6e39e0189d72,
        0xe47e1fe305ce5aaa254fa117,
        0xe6765247126e1499,
        0x2033184b46b661da827b53c3,
        0xd0c1dd73c8555ceb285dc0a6,
        0xe996e16e40955c12,
        0x1253db34597855aa6dcf36b7,
        0x2cf95e4ecf7937d2e7139caa,
        0x9dabd59a71f09818,
        0xaaacbb62bf70747a01ef4922,
        0x15c3c957e605c299129bab85,
        0x6ea4b6d67d6a3eea,
        0x87d8f64b5bcfccde1b0f24d,
        0xb1e8919d239b0b3c4d8def3a,
        0xadb4f2a114e3038,
        0x81e829927aba8996705b7b5e,
        0x9caa127a68cabe58153b8b45,
        0xd03cfd232423b463,
        0xec14fc755d5dc711a1f2052c,
        0x33b4f1563687a432816df746,
        0x152f4ab963b1e7a6,
        0x3580b5910d24b76f63f35092,
        0x7269ca79e61a84e5f6db42dc,
        0x2b2870e03ce6aa0d,
        0xaa88590a3b2ad2ab96038715,
        0x58a350a0929f4e804df5c361,
        0x86ff0f1a772cbb84,
        0x29800ad5664219357bb147fa,
        0xdc991bf969c7a7e62a3c9e8c,
        0x56288ce0faa29ab1,
        0xb7802328efd59bd4fe4c33bc,
        0x1e8283135fe943d71716c377,
        0x9846a3345f483bc6,
        0x24e36a9240a2b9e989ae28e9,
        0xeefe964436241252df506267,
        0x2ef3e628d3cac595,
        0x12,
        0xa282c915c47fbf6584abbc44,
        0x876621c784493898c0f534aa,
        0x949832ddacfb7ba4,
        0x258895b9c2f8f8cb863abc8d,
        0x746ec70db05806dd6d88c709,
        0x9248d87d2bd3f65d,
        0xd8876bdd62a1fade6e07158,
        0x1ad9c3772c9c49a74208fed5,
        0xa3035ee2ad91c0f3,
        0x6e56486a8e197c7737131c11,
        0xad38345a3743c7fd1c6065f4,
        0xf99c66ea1050b76b,
        0xe5cc55e6ed9857247780e2ce,
        0x8e19b2b1179f708e89f43b00,
        0x13dd3e99e46d1340,
        0x1af9103e8a04ce2a135e4ead,
        0x7f67024da5c1da2d1529a1de,
        0xa567e41cb1d72271,
        0xc05f4a6cd73e1ad20419ee80,
        0xe98648a7575f4eb9b8d7479c,
        0xbf6f0ed7ba02945c,
        0x4977114c6f5609dc4374559b,
        0xcab116e1b8d7ae9fd7f7fc9e,
        0x3b9c02600031bcd7,
        0xdae0ab1c781261bad91021ae,
        0x2e524ede7634c7b2a3484a86,
        0x58527d4e1cb1eb12,
        0xeb21e3810ff12b45798c22f6,
        0x48223afda5f100d3ba369c,
        0xda84fa088db569b4,
        0x6b1c54246f95c0b627ef3c6b,
        0x4c6a136fb78c61bcc34bc258,
        0x38c95c9dd6e0df06,
        0x710f6ee6200819f4d2a2c5d2,
        0x3c48cc605aa0bb879cf79e63,
        0x71eb6ca03a121d63,
        0xc5a0a205e757cf2c927dedd9,
        0x78232347b81a73c0f27b09da,
        0xde326c427c3159f6,
        0x2bce85af5224ad492ce1c58a,
        0xb91cf0b45f00f531c40a290f,
        0xd74a0d6870c66332,
        0x8f4b21900d0da5b76aaf25af,
        0xc279c6509b17034425bad345,
        0xdd639927bcdf2e63,
        0x8492ff068d5dee02ec318ea5,
        0x515b6bd14f1cd78164fe2a3a,
        0x34f2a85bd4e33aa6,
        0xeb55aee32f91d42d0e896095,
        0xdb9fc4665d3193f160263721,
        0x848125c02ec7296c,
        0x1,
        0x0,
        0x0,
        0x6948b0771e00a4c79f714dcc,
        0xad85e3cab3d165fcd55bb21d,
        0xec266ec93a38062,
        0x0,
        0x1,
        0xeb75a864ea7be178e079ddb1,
        0x5a90b29b0f08ebe454698d73,
        0x2eea78fdb605b109,
        0x0,
        0xb,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x7f8bb562ff60a902ef14bcb0,
        0xeb9420089fa531db62e806a6,
        0xfd028df433dfd5cc,
        0x0,
        0x46ae31f6fc294ad0814552b6,
        0x2d54cc811efaf988efb3de23,
        0x2a2cc02b8f0c419f,
        0x0,
        0xaec889b9d8ce51c4a2c3586f,
        0xa2b07874c333bfee9f78e13e,
        0xc445de21be8d8709,
        0x0,
        0x7e47d1c2d19c21b2f6870259,
        0xe701b40af42001c38bca00db,
        0xd87ea1720d4dd3d6,
        0x0,
        0x5b1d6cc74985ce49a1f737fe,
        0xb9127c572c3f091c031c249c,
        0x1392711e1576aa6f,
        0x0,
        0xb71f95ea692ed186e06e4c37,
        0x807276cd9cc59718bb11dbe9,
        0x10756a25836d67ca,
        0x0,
        0xd34211b3520c83c5f9be99af,
        0x8f19a28ceef67bbda102ffe7,
        0x7ac2b92030d351cc,
        0x0,
        0x411bb5d0fbe844f025c7178c,
        0xcf603787227b7ac499d6d1c4,
        0x5f6b2479862eb2f8,
        0x0,
        0xce60303cfcb98726ff64a1e5,
        0xa64534c614754b3527588d25,
        0x44f75e245622181,
        0x0,
        0x8a703177da18d4ede707c057,
        0x7d6c11e754ab6fbe73deea43,
        0xdf9787168190a047,
        0x0,
        0x2e6585ab5f125a34fef37875,
        0xb70e9f02ce7744197172a117,
        0x60e305f9fe6f2298,
        0x0,
        0x712f72f3929408ff68af059d,
        0x4f72cea12cd115dc1c8639f5,
        0xc6d5ae1b897ffe77,
        0x0,
        0xfcf91f56bad0659142668837,
        0xa15458b49bcdad6c870e3889,
        0x81a1342e70b1b765,
        0x0,
        0x461d7579f9613d3168fc6220,
        0x7626024a6195fe0eafcea08b,
        0x32e91b268a032443,
        0x0,
        0xcdc7ae298071a741aafd4035,
        0x9a9bdfbdb824dc1278457a10,
        0x17fbec3713dfd145,
        0x0,
        0x9b85054533e9d24310265ee0,
        0x51cbb79b2625c435ba43bbef,
        0x1fd81fcb136c629b,
        0x0,
        0x96378a2e47ab50246a9cf131,
        0x4d0f08867537268cf39eae04,
        0x4eeb60396f3e5f52,
        0x0,
        0x4e9960d402494fb117251955,
        0xc0fb055de656d6ac2ba4da86,
        0x800a21e8619f448f,
        0x0,
        0x21ba9af739425b664464e3d5,
        0xd09194888c2ffcf16e93e0c9,
        0x5d4d3cd0684b6cd1,
        0x0,
        0xb,
        0x101fbcccded733e8b421eaeb534097ca,
        0x38c1962e9148624feac1c14f30e9c5cc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x1759edc372ae22448b0163c1cd9d2b7d,
        0xe005b86051ef1922fe43c49e149818d1,
        0x7d41e602eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x552f233a8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x8c1745a79a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x5129fb7c6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x870e15c2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0xadc0da7a16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x148b2758d7ab792809e469e6ec62b2c8,
        0xd450fe4aec4f217bb306d1a8e5eeac76,
        0xd67e55fd642bfa42aef9c00b8a64c1b9,
        0x85940927468ff53d864a7a50b48d73f1,
        0x37176e84d977e9933c49d76fcfc6e625,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xe702738c3be4c98312c6fd8,
                limb1: 0xdf289702da4292e2baf6d123,
                limb2: 0xd2e3d9fa85ae9ec9,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xb24620fd1d6468e74e756e09,
                limb1: 0xa92f0cfbb6159a6b7d73d3c8,
                limb2: 0xfdfb28f19d569756,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_12P() {
    let mut data = array![
        0x1,
        0xa7e1704c35efb22dd0b00b34,
        0x6cb8ba96f00d0016fa45feab,
        0x499e444a08f54833,
        0x0,
        0x19fa46f24fb88f8dd6ca7cde,
        0x88277cb8733a2d03e635c89e,
        0x6f531a87878263d,
        0x0,
        0x983d480112581e9760a3024c,
        0x4971f53c60d76335cc30a01e,
        0x49cadf6a584c1762,
        0x0,
        0x68d37a54e0643d0e2e03848b,
        0x7fc067db940ff00c2a617bc9,
        0xc448052d21ced4e4,
        0x0,
        0x822ee2e3a886a61493d026d6,
        0x94c5a5395fe62847916fdd9d,
        0x16ef35c61eed612b,
        0x0,
        0x9e2de97b5eea3a37f7329752,
        0x7665b6331149e5885ce76a40,
        0x77bc8706044b0fa5,
        0x0,
        0xf,
        0xe44826186d36879422ba4a50,
        0x47b2259c6f1fa2028af45c4e,
        0x3bc645e05e0ab9db,
        0xd3042e6636b589c24bc4c7a0,
        0xb3cd2155e6ac7edeac27494d,
        0x84d96fa1bf83a9fd,
        0xf06d99481bb427fed748a219,
        0x7bb4382b3ad4f09d0e1a8fa9,
        0xde46a491ccf93c6a,
        0x11125722f7f5db50849024e,
        0x1b61e77820586bed5d57d3a4,
        0xccd39ebaa2b24b59,
        0x52511b7617e4e12f521e40ae,
        0xcbf442820387f91e7582d3ca,
        0x8f82ebbad05ee287,
        0x27f3bf7743335087fbbced10,
        0x76653c9f169ed5b1cafd8ae0,
        0x5ffb0028e572cc7,
        0x848cb560d5e89c14ff0038cc,
        0x155d2985ed348afc33495b84,
        0xe1658f3b1c48fa33,
        0xf5a05110974b95017a6fa4fe,
        0x856b0699991e2b4a0ae05cdd,
        0xa31c669a95e9afe4,
        0xcb8ffa006a45dd69b6eebfe4,
        0xe07d86e1a7bfdb4954f604d0,
        0x264d6928e190bf74,
        0x149be266ccf5f54b0e273bbd,
        0xabfa9b597cfe165de79ef6b3,
        0x17e16563726a940a,
        0x777527503f142b883ba3a12b,
        0xba7279a8fd77d86ecf2f5c47,
        0x23ba0d45ddc181e1,
        0xc3da198d104cc84b1fd7e044,
        0x8f19a63a175859c0a8a8e73f,
        0x2e26ed9da33d9f4c,
        0xf19210811ca27e8f06f1193e,
        0xf1b7f42744009cc20ec73cdf,
        0xc6cc39a0c1d12597,
        0x71642625b9ce68445bbf9562,
        0x4921981f3e8fdab82661a132,
        0xdaf2fadc00becb88,
        0xccca16eeb1c3eed1dc033190,
        0x8802adea80803f71341094d6,
        0x55757fe1779e24fa,
        0x10,
        0x1e7c4f17285c5a742a9ce217,
        0xae58858cca28180d09e65b18,
        0x77d4296475ad64a1,
        0xd359041a4632faf314a7b897,
        0x4c76d94923a811d5a6b30779,
        0x17b176d36eef3d01,
        0x7b13ff4007730b1456ea363,
        0x46c04d1941fccb99bd05860d,
        0xd1ef4097a146f17b,
        0x271e86fd6fd9755fa23df9f3,
        0xb14ea6b933c141224ebc8640,
        0x627814433d0e7388,
        0xdb07af7c5672e5c1201acb5,
        0x332c990237c0b597104afe4a,
        0xf83d10de1fc2d88d,
        0xb2d740b1cc1bd54dbed37df2,
        0xaf2c56f998f4b5b06a5a8b09,
        0x7bd2b4bd5647da9b,
        0xe285649c108d14afa8abc484,
        0xf68681e55e6db4ef1c19fad8,
        0x5176e1495815c3ac,
        0xf1ef35bdf79936cb71bee967,
        0x9d362b95ecf1c0022803270d,
        0xc22b51be074aa977,
        0xb0281b31fbdc6083595d889a,
        0xc48c52f4a32558b1557031fe,
        0x49d46879da52ab14,
        0x2e811b5b08e594423103881f,
        0xf6586d803dfdc2e698a5b212,
        0x88b5ec69e93300e9,
        0xd9af2eab3ce8de05b27bef0,
        0x3f7087e09a2d7d986df6be55,
        0xe8c3e2e67be94d58,
        0xc60602a424498a256a8c43f0,
        0x2b3432cb3145e8d457efc8e,
        0x97b6d99311df0cbf,
        0xc22033fa19a609e1cdbd6202,
        0xf970e0103f6893b387e3535e,
        0x5f3dc8a9c47625d,
        0x400546750ccd41bcd5c2c782,
        0x6323ca523125365ec10b2574,
        0x56f938eac2368e54,
        0x237d905dde1a32c4fec98e14,
        0x3b38584238aa2b9fec210e79,
        0xd82b6da15d05f567,
        0x1,
        0x0,
        0x0,
        0x10,
        0x18632252e33d7626914ef8f9,
        0xeb88a23f8bd648dae059ab8b,
        0x424d59e65fb9e28e,
        0xa4428fcf1960d86df89d45d7,
        0x2508440702cb8bf8693eaed0,
        0x6098c03e40faae5,
        0x217e158e53b762b41a9f7f6e,
        0xacae5c7ff364542469d3cd62,
        0x1eceaf732cd7c3bf,
        0xd76b6609ad26d78b576bc282,
        0x65347bd063a8ddd7fbab5780,
        0x3c558380f384a832,
        0xafd1373f167b44f380ccbace,
        0x82630aaa2c05daaca7a0cb8d,
        0x501d4c6da855ba0a,
        0x7a62ea4857295ce9a92df184,
        0x3f57eeb56e13776ab2ae279c,
        0x4446ebe104eca7c1,
        0x38987222eabaeba9cbd905aa,
        0x93b3a72209192d5ed683ed4b,
        0xc634e6a338c7b594,
        0xdb2a97fe7a7f85ff468dea6e,
        0xc2ae817241a146ec4265bec7,
        0xec0024395fadb6f1,
        0xfeec147ec1c28319357bad7d,
        0xaa440c8ab7b30aa6ee919b1c,
        0xb0d91905d33804f5,
        0x558fe7e6e3f21e7bfb42cfa2,
        0x982e2f32190f368303e499c1,
        0x7ab6948cb952f099,
        0x932bd3ce9efd0ed35917b874,
        0x1c70e946357221a0b7bf01ca,
        0xcc7cc3f29a5bd895,
        0xebe0ad979f67debe7def1565,
        0xc20ee2817bb0f4128d6067b5,
        0xf0ae8bcf65003c68,
        0x628a964915aa3d06ef5b65ca,
        0x287899f46df6eaa50f6e1516,
        0x9b2fc5f0ee617e32,
        0x402ba3026c34b05255aa430c,
        0x9a261d03ea42f2a8bcf9894c,
        0xc171887f797c6b2a,
        0xfe9897ff06fb79a34b9ffa60,
        0x81837d413f8f891946b0a6b3,
        0xc047477ab053eb3e,
        0x6487882ba816dfb0bd56b1e5,
        0x4a08f0862b00648aff1ae8ce,
        0xd84109d64730931b,
        0x13,
        0x3268b41ac23753a103f01db8,
        0x81c38c73532b2def0cc1c2b1,
        0xedcb0818ecb1b1d8,
        0x276c4675c7a3ab0d9129e26f,
        0xca54c5b77e4b864ad12e5dda,
        0xd28e00f461e555ab,
        0x47370408d8100579bce9acc5,
        0x77c87318fc02c652c6ffa0bb,
        0x5f36d8b50847e143,
        0x46f7b9446f3df23974a4b704,
        0x6fd4a930118ae5e108930f95,
        0x94b2478696d06e8,
        0xecc22a561f1ab0432cdd1f3d,
        0x37ae49516aec4137a1f295bf,
        0x19e8e03b695bf84f,
        0x1b644f2f9ad2ddba27b4b7f8,
        0x4291ca9e00e1f59d533a053c,
        0x5f9081479991c429,
        0xa7ecf5ddb9f9d104e4a02e10,
        0x61f32d190ca200d562cc90f7,
        0xb8b102e4b3c3fd1e,
        0x3a46bf3271880d39fdebf951,
        0x5965a03f9f52a2294c70154c,
        0x45f2f7ba09582f5e,
        0xb76aabec2364a0f5f71ed630,
        0xd6bc2c768e5cfa8f34918,
        0x12647d0bea5b5870,
        0x4474c2f503a4b158d7f5eb42,
        0x5f102f49bb193449f5bb8aa,
        0xa562162cec6d4aba,
        0x21f91badfe5dec5ddd5ae330,
        0x7970e3158920966bbcb16495,
        0x4e5d68169c209cb3,
        0xd6b8c6e2bee594e8f68b9943,
        0x296d605815a15f42fd9462c6,
        0x89040fb3fbe6ae24,
        0x58daa71ee17e75f9fc3d3f45,
        0xb2e90f7322725b46e16ac6bb,
        0x1ed43a555a66aee6,
        0xe14b00faf616747c5507f1ac,
        0x3ea29755984334ca7999793a,
        0xb956090fba31f7af,
        0xef6544837e0b2e8ff9ac2707,
        0x4e2a0c1d9cc05802a93aca0c,
        0x14a53cc527c98e06,
        0x23fb33d6bb25add0f933180e,
        0xfbb3949f0c029790289d2ea7,
        0xd837c97c2f701612,
        0x400546750ccd41bcd5c2c77f,
        0x6323ca523125365ec10b2574,
        0x56f938eac2368e54,
        0x237d905dde1a32c4fec98e14,
        0x3b38584238aa2b9fec210e79,
        0xd82b6da15d05f567,
        0x1,
        0x0,
        0x0,
        0xdb5c16f947d3e61f84cc9077,
        0xb7dfaa683f5c01083b91bd19,
        0x4fd65be111434c99,
        0x0,
        0x0,
        0xc,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x7f8bb562ff60a902ef14bcb0,
        0xeb9420089fa531db62e806a6,
        0xfd028df433dfd5cc,
        0x0,
        0x46ae31f6fc294ad0814552b6,
        0x2d54cc811efaf988efb3de23,
        0x2a2cc02b8f0c419f,
        0x0,
        0xaec889b9d8ce51c4a2c3586f,
        0xa2b07874c333bfee9f78e13e,
        0xc445de21be8d8709,
        0x0,
        0x7e47d1c2d19c21b2f6870259,
        0xe701b40af42001c38bca00db,
        0xd87ea1720d4dd3d6,
        0x0,
        0x5b1d6cc74985ce49a1f737fe,
        0xb9127c572c3f091c031c249c,
        0x1392711e1576aa6f,
        0x0,
        0xb71f95ea692ed186e06e4c37,
        0x807276cd9cc59718bb11dbe9,
        0x10756a25836d67ca,
        0x0,
        0xd34211b3520c83c5f9be99af,
        0x8f19a28ceef67bbda102ffe7,
        0x7ac2b92030d351cc,
        0x0,
        0x411bb5d0fbe844f025c7178c,
        0xcf603787227b7ac499d6d1c4,
        0x5f6b2479862eb2f8,
        0x0,
        0xce60303cfcb98726ff64a1e5,
        0xa64534c614754b3527588d25,
        0x44f75e245622181,
        0x0,
        0x8a703177da18d4ede707c057,
        0x7d6c11e754ab6fbe73deea43,
        0xdf9787168190a047,
        0x0,
        0x2e6585ab5f125a34fef37875,
        0xb70e9f02ce7744197172a117,
        0x60e305f9fe6f2298,
        0x0,
        0x712f72f3929408ff68af059d,
        0x4f72cea12cd115dc1c8639f5,
        0xc6d5ae1b897ffe77,
        0x0,
        0xfcf91f56bad0659142668837,
        0xa15458b49bcdad6c870e3889,
        0x81a1342e70b1b765,
        0x0,
        0x461d7579f9613d3168fc6220,
        0x7626024a6195fe0eafcea08b,
        0x32e91b268a032443,
        0x0,
        0xcdc7ae298071a741aafd4035,
        0x9a9bdfbdb824dc1278457a10,
        0x17fbec3713dfd145,
        0x0,
        0x9b85054533e9d24310265ee0,
        0x51cbb79b2625c435ba43bbef,
        0x1fd81fcb136c629b,
        0x0,
        0x96378a2e47ab50246a9cf131,
        0x4d0f08867537268cf39eae04,
        0x4eeb60396f3e5f52,
        0x0,
        0x4e9960d402494fb117251955,
        0xc0fb055de656d6ac2ba4da86,
        0x800a21e8619f448f,
        0x0,
        0x21ba9af739425b664464e3d5,
        0xd09194888c2ffcf16e93e0c9,
        0x5d4d3cd0684b6cd1,
        0x0,
        0x4bec631b62d40e5b8aaff33e,
        0xf7161e0a086fb1c95bc84eab,
        0xfbff400a905bf4cf,
        0x0,
        0x482ffa9e045ec6f1e1e09d6e,
        0x9a75ce6f11a020bef0b9b3f3,
        0x253b9af963b9e192,
        0x0,
        0xc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x1759edc372ae22448b0163c1cd9d2b7d,
        0xe005b86051ef1922fe43c49e149818d1,
        0x7d41e602eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x552f233a8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x8c1745a79a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x5129fb7c6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x870e15c2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0xadc0da7a16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x148b2758d7ab792809e469e6ec62b2c8,
        0xd450fe4aec4f217bb306d1a8e5eeac76,
        0xd67e55fd642bfa42aef9c00b8a64c1b9,
        0x85940927468ff53d864a7a50b48d73f1,
        0x37176e84d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x467437419466e4726b5f5241f323ca74,
        0xa425799aa905d7507e1ea9c573581a81,
        0xfb82860deabca8d0b341facdff0ac0f1,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xce6a9b69daea1558dcbe14f1,
                limb1: 0x3d82daa514f325d29522e5e7,
                limb2: 0xc9833209611997e9,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x84af480eeea70b1a6120dc57,
                limb1: 0xc6df620bb03464672b4e6d28,
                limb2: 0x53ae491c8e1b5177,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_1P() {
    let mut data = array![
        0x1,
        0x2168cdd68c04b38b0d0ed9c9,
        0xcd052d9299a13087b5800a4a,
        0xa573b87cf8304f8f,
        0x0,
        0x5454918fa80a564339004e92,
        0x5655a19d0ec5d16fdf81f011,
        0x29b63cc0a6044502,
        0x0,
        0xd5359262839ab420badf7cd9,
        0x5a87f64c35e57e5df4e4fc77,
        0x289923177889088d,
        0x0,
        0x8d67744978428f50a1ac82a1,
        0xade19daa5e55192df1fe1999,
        0x79185c440324025,
        0x0,
        0x8fcbf3f99fce5df95ce84d2b,
        0xb9b461dafa9f3a09816ff4db,
        0x110c2b06832eaa00,
        0x0,
        0x2b4ac042652d0760141dd90,
        0xb384b06a9e5cb660236efa3f,
        0x5e0b156fdadea8f3,
        0x0,
        0x4,
        0x4fbcfd145897f54c6c2f5698,
        0x377a2f3dc26b2d09c14f192f,
        0x4d4205ceca1a1032,
        0x2205a76a060bf3c0c515e173,
        0xfedb6af29b5a0e827ae7acda,
        0xfc552bde5634a19,
        0xbe2816c5c9e3569fc81b65bb,
        0xd5ecfc685c83f602eed2548,
        0x2f73ce27fca01f02,
        0xc0571e40b77c08989d0471dc,
        0x395338bc1a7f2d5cd4bb0e20,
        0x3842dce89f8dc218,
        0x5,
        0xeebd9ce3530f5bafd9470442,
        0xb2f2a7ddd86714a4f1efaaa5,
        0xc0a8062f99118ea7,
        0x66c955296c7a06f7d060cdec,
        0xfeb108f487dc00929c52d014,
        0x12477c25de8842a7,
        0xe7b9f73d02acb01609c2b191,
        0xc0664adb94aeb00112581796,
        0xf3b32bd20fdb0a8,
        0x4057c0f7d4c9dfea3f750a21,
        0xb9e9c9e081ec3493da2f6606,
        0x467fecd8a26f2fd7,
        0x1,
        0x0,
        0x0,
        0x5,
        0x408cace1381d87af4774f869,
        0x51b726fd8bf830dfa50b9e20,
        0x544a87f34822882a,
        0xc4e3c1ea73e980271ee04a74,
        0xd6b61e3b753f8abfa00ae490,
        0xe191e4cc514e1626,
        0xc9a9a50b2d38bc1f1846245a,
        0x2dc6f5eb5be31cdaed4ee900,
        0x1c60d416ac751378,
        0x16075cad28c807e5fb370a29,
        0xc1252889f49a32179dc12b7e,
        0xb62eb74986232c68,
        0xe10443d08779c0cbcdedaa75,
        0x32c0b9bf4fd56f78b39bb75c,
        0xb177d4e2fe49a062,
        0x8,
        0x872f4a37456b81d3f0f130e3,
        0xe4a29710ead190829d8daa89,
        0x44982b4d2f7ae695,
        0xcf815421f75630c6b2a5a174,
        0xf6d73eafb70404024643b08e,
        0x7ff4650915b9d297,
        0x5615c2ab12b8d09a4452daf7,
        0x42cc0c0110c6d0078068a520,
        0x6a9e632be6efd49d,
        0xb123e3aa24947b19957a52cb,
        0xc8572d0165dc84afe93b74d1,
        0xae27801c0a1bdd8d,
        0x66c955296c7a06f7d060cdf3,
        0xfeb108f487dc00929c52d014,
        0x12477c25de8842a7,
        0xe7b9f73d02acb01609c2b191,
        0xc0664adb94aeb00112581796,
        0xf3b32bd20fdb0a8,
        0x4057c0f7d4c9dfea3f750a21,
        0xb9e9c9e081ec3493da2f6606,
        0x467fecd8a26f2fd7,
        0x1,
        0x0,
        0x0,
        0xe2aad42951ce503d9075506d,
        0x1b39fa27c83fa3479c725672,
        0x25c2b26ae9b4df55,
        0x0,
        0x0,
        0x1,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0x1,
        0xeb1167b367a9c3787c65c1e582e2e662,
        0xf7c1bd874da5e709d4713d60c8a70639,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xc20f5aa13afc3a2097ce088b,
                limb1: 0x50220928f8ca04bf313c1d7,
                limb2: 0x70743ffac9bb07f9,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xfa42792834ae5445fcaca832,
                limb1: 0x6796f84b7340adf44ed49d33,
                limb2: 0x62fd8a76eedcb778,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_2P() {
    let mut data = array![
        0x1,
        0x593dad981eecdd1e64154a93,
        0x15e93605b52029cfc36d4a3c,
        0x6752eff42a090d7a,
        0x0,
        0x8a334258e86c3e198e5be102,
        0xa818d7193e41547664a42d16,
        0x6a1950344af5391a,
        0x0,
        0xc1705689b8b946103efb871,
        0xe6144915870a8c2e8f420c9c,
        0x8260943f6ebaa864,
        0x0,
        0x3e6fa653f652e9b0a83da27d,
        0x1082c053d8c4ef5e9d3997de,
        0x429004bba8391403,
        0x0,
        0xbf84ddf1ac17a33685c6a551,
        0x93a8a3e6f9ba5d56241249f9,
        0xcc92887cb910b675,
        0x0,
        0x37da4db3236ebe8025df6a29,
        0x2497b4be77c8de2ca943ecf8,
        0x5eea5df3798ab809,
        0x0,
        0x5,
        0xedc5112d83d1874183ae674f,
        0x25b521fc9c9a2d43c8da84bc,
        0x2e50a774e235a08f,
        0x7834059d7b4eda6a4b49b18e,
        0x76c371a3e1c4b87138b8aca2,
        0xa0e1264969045628,
        0x18add9de2900d24415e7470d,
        0xe854bfabcf09e671344c6cfb,
        0xfccf1fbd64f53788,
        0x109c4595de1c2a98c0efd466,
        0xd0a9134320b1d48dc423120f,
        0xce42b76f989e9ae5,
        0xc285ae698ff5cef0c0bb42fc,
        0x284df1503af8e84b8c676c1b,
        0xf67c835d4347814c,
        0x6,
        0xdf22376617b989dee49fb9c4,
        0xa0ec7673d409b33c5603df20,
        0x14f767124aed68a9,
        0x23d64e614ded0be5303d9a85,
        0xa66c3bd99958564c3a5317d4,
        0xa55cb17f4e9aae16,
        0x5120d14c08bf42e47971b404,
        0xf667d7fe09fa1153f454dc38,
        0x60b2c4ce5639b88a,
        0xfbadc09fb78b776ecb2b5fb5,
        0x66f9ca8306e1107ce8ae0a23,
        0x28668c83090d0740,
        0xa3eabf2e2a3ed693e108c0bd,
        0x7da2768cbeb2f65d97076942,
        0xac754fc0db2fb9fe,
        0x1,
        0x0,
        0x0,
        0x6,
        0x4c4828a5db203b461f146384,
        0xf5ec6e5f9fb99f8606519cd,
        0x604667af941f401c,
        0x43320a35c36d199da33d9aaf,
        0x8fed084853261c3261496943,
        0xe2529ef5dd80172,
        0x1de57740826a5ea139874fc0,
        0xa136fb9b1df2a62e709c73d7,
        0xbc39c59d05783d63,
        0xfab84d558b293d8f86a23f3d,
        0xb2f89851983a51258cf56aff,
        0x5cab255c83217a00,
        0x7317036f7dda87870de171f8,
        0x8210a035995f2bd6e97313be,
        0x5fa6d7e3178ce53b,
        0x608dc6ecf1305f5c64ccba6a,
        0x3756735db72430de236e8089,
        0xcb18912ebd06306e,
        0x9,
        0x19ef83caa612c518405e145c,
        0x66773d2acc43e6a65a1b19e6,
        0x92c3d1800c7ddca3,
        0xfadc24a9217b534851af48e7,
        0x8cf5a2f3316a5c159845a6cc,
        0x8588da7b263ac29e,
        0x37e5b9143d3ad441521bf3be,
        0xbcd6e7f245d6794bae52058a,
        0xa4e361a45b940bcc,
        0xc0e27bc41c89cde772cf5b88,
        0x71c10009043126a6b2c6261c,
        0x2fc53ea78a489b6c,
        0x9f4188a475a4e9f5577af2c5,
        0x15dd79b2d03d12db5b86f8a6,
        0x5c91dfc54ce8c40c,
        0x5120d14c08bf42e47971b40b,
        0xf667d7fe09fa1153f454dc38,
        0x60b2c4ce5639b88a,
        0xfbadc09fb78b776ecb2b5fb5,
        0x66f9ca8306e1107ce8ae0a23,
        0x28668c83090d0740,
        0xa3eabf2e2a3ed693e108c0bd,
        0x7da2768cbeb2f65d97076942,
        0xac754fc0db2fb9fe,
        0x1,
        0x0,
        0x0,
        0x5ba313b74c33c64ece26886b,
        0xd041f56e6ad213f6e761928c,
        0x7c06d56a8a416dc5,
        0x0,
        0x2,
        0x3c5e7e5890c57c346b4dddbe,
        0xadf562b9f79489b029615240,
        0x8166ec59471cbc3,
        0x0,
        0x363bd6649cc456cb62c23e87,
        0xf48602e236a63d911fa71b99,
        0x5909893f00150f86,
        0x0,
        0x2,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x589fa250d638e35400c12ddf,
        0xb3aac19fcb5095808402aa7f,
        0xed6de6590d0195d1,
        0x0,
        0x2,
        0xe443df789558867f5ba91faf7a024204,
        0x23a7711a8133287637ebdcd9e87a1613,
        0x1846d424c17c627923c6612f48268673,
        0xfcbd04c340212ef7cca5a5a19e4d6e3c,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x97ad9ae598203a75c13a895,
                limb1: 0xed9fb4bee5b2f54ca5cffb42,
                limb2: 0x284782b62d08871c,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xfb082c65dab4069694f90f18,
                limb1: 0xb12d25f5fb5e746c12686571,
                limb2: 0x7d0eb16046d10c7e,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_3P() {
    let mut data = array![
        0x1,
        0xc70c3dce1f1516bc6fe9cc57,
        0x961b8d8e4079445e2fdb44f2,
        0xbd3e32617e9cd43e,
        0x0,
        0xc6ee68b642c640141beedb1f,
        0xdfa5e5cec2363eb7d34ca369,
        0x344c56f93228c496,
        0x0,
        0xe3eadee4a545684ef8c91ea3,
        0xae6e03c897fc6f35808bd04c,
        0x3e0be2e76d46e55a,
        0x0,
        0x8a94996bbac047c61ee89db8,
        0x3f7151793fbe5bac01281400,
        0xc90d1f1205475796,
        0x0,
        0x416af352b429f9ce1aa23fb7,
        0xd7565dd48ab5717e46a80c1e,
        0x1bb781366e2b85fe,
        0x0,
        0x4eda1e9e90b6fd9d83bfc57b,
        0x2e836370c3c132c8e8468a2c,
        0x4d7409d1e32bc0db,
        0x0,
        0x6,
        0x628533293a7e1e24246cfb14,
        0xcb314afd1201a3eb42dffe1c,
        0x7c4d7e79811cb918,
        0xc9a1e188bbec43bec5049516,
        0x70d6e80219361ba96b3a78c0,
        0x249806fcc822d25,
        0x5ca70a3d9e8704708db92175,
        0x24933341567a360a12e5332e,
        0x5583b2c70d9011a6,
        0x923a4621229793252b9bbb9d,
        0x88f88517b70872a14df2c1a0,
        0x968eb935d06a2eec,
        0xbeb965e403d326b2589283d3,
        0xe1c2915042c79cf57bf7da30,
        0x66f86e21f741f95a,
        0x6c96a6bf2671eaf4ec06a7a4,
        0x6865984fcd3a80d6cb795fca,
        0x65780e1c129b8622,
        0x7,
        0x8576f4d0e7d529f89dfb5e2d,
        0x40681d65c93fd7f173bcdec,
        0xabae093c4a952f6e,
        0x519a07cc8990cecdea0b62da,
        0xcfc0850f7c5c3774e23be09b,
        0x3a5f559686b8431f,
        0x5cd0b6e9b47f988a6baca69f,
        0x521d1f94621fbc7c9ace54e5,
        0xf7044ea9fac08e91,
        0x6614efff2d70c197671c9a1b,
        0x95918dce096d58b21d19728f,
        0x1152757662daa749,
        0x5ffaa24ae59bc220a334bde9,
        0xf090bdce04739bc09b21aa41,
        0x612e9054a6f15520,
        0xb2fc51672c2a8ae9a4d355ed,
        0xbd8656040eb179c314415d28,
        0x563309e41fbf0f02,
        0x1,
        0x0,
        0x0,
        0x7,
        0x90f8be1a0ab4653841c1e43a,
        0xa6d294128a97c8c379db5a71,
        0x4576510634ef89ff,
        0x3f2b39ac5d5ae6f07e017dbc,
        0xcbbd22c11c9f14b8fcdb7bbd,
        0x16380528de346da8,
        0xd40c339036f3df4c159557bf,
        0x56040bebc0105072ef2e55f2,
        0x739cf4602e5a60a6,
        0x66792ea68d53441f7a4b8b8d,
        0xe11278d7f6fd53c0361ae0b,
        0x877b485c1d9009e7,
        0x25f1c7ef2d30a73ca9d61aaf,
        0xd4d62e2f08110107e56c767d,
        0xd0dda95787bffcad,
        0xb6f5bb325993cd36d15d1d7f,
        0x15ee78fb51a054dc900b8824,
        0x216e3be07c163dd8,
        0xbf74f8047b822048ba5e5f4f,
        0xf19d7c07ba212a05a31dd1e8,
        0x45e516a674a42a1c,
        0xa,
        0xa640b1b656d425d051dfa27f,
        0x1c2d8cdc880bee79a2a2a177,
        0xb1c240a60a144c02,
        0x3b363697c2f5a7a2664fb7c7,
        0xae43a36c668584322fa3243f,
        0x989b571daf09d5de,
        0x89b50063ef7d2bcef1b8a53f,
        0x3ecbdd0eaede27683ba45245,
        0xc11e26a5db43e5f9,
        0x500984cb25ea751d6fc398bb,
        0x1b0162789e916a5de2edefd8,
        0x24ef3f78fe8fc271,
        0xf17477d8d0d31db4607c9bdb,
        0x63b5b5b19b8579b920278864,
        0xe2a547e717519706,
        0x41b6f0bbe9a964f0ed740b8d,
        0x80c979b0c8fa10d22897e102,
        0x526993e6d8f9f7a4,
        0x6614efff2d70c197671c9a22,
        0x95918dce096d58b21d19728f,
        0x1152757662daa749,
        0x5ffaa24ae59bc220a334bde9,
        0xf090bdce04739bc09b21aa41,
        0x612e9054a6f15520,
        0xb2fc51672c2a8ae9a4d355ed,
        0xbd8656040eb179c314415d28,
        0x563309e41fbf0f02,
        0x1,
        0x0,
        0x0,
        0xea81e925f7490a728939697e,
        0xbe61baef960d5989a1f964f6,
        0x384dbc6f3bd5b99a,
        0x0,
        0x0,
        0x3,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x589fa250d638e35400c12ddf,
        0xb3aac19fcb5095808402aa7f,
        0xed6de6590d0195d1,
        0x0,
        0x2965eeb3ec1fe786a6abe874,
        0x33e2545f82bb6add02788b8e,
        0xf586bc0db335d7b8,
        0x0,
        0x155b35991489db2fdf4de620,
        0xf24ce461346a182d67eeccf0,
        0xb4122bb4b37cc7d5,
        0x0,
        0x3,
        0x1846d424c17c627923c6612f48268673,
        0xfcbd04c340212ef7cca5a5a19e4d6e3c,
        0xb4862b21fb97d43588561712e8e5216a,
        0x259f4329e6f4590b9a164106cf6a659e,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x5487ce1eaf19922ad9b8a714e61a441c,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x793f03cb81255db0817da454,
                limb1: 0x5ed27cf7207443f37bfeee3c,
                limb2: 0x42943c6416752a12,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xf2d25838b8b95a3caaef5ce4,
                limb1: 0xce58bfff9d25e997305603f3,
                limb2: 0x5d776495b03d0b6c,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_4P() {
    let mut data = array![
        0x1,
        0x43727141d8d74b6cfa956f03,
        0xd9c9f11e6d95f9244b7bfc7e,
        0x66e1a866f3d127b0,
        0x0,
        0xcdedfc606a1da4dcb83cbb4,
        0xe4445a1bde3b10dc332dffd0,
        0xf0f6c7f6bf4ac76,
        0x0,
        0xc90fdf7e26e6dc27b7ea24e,
        0x9dae6114b5ad635e065cdcd9,
        0x630ffa57a644d7b5,
        0x0,
        0xdaf2701e59c0ff7ea6b011e1,
        0xf01d8b9db4860649bf7b043f,
        0x18e959d0a4f8689d,
        0x0,
        0x6e0587c0898c42148e2ae987,
        0x8b65c20c560dcfd22f7c3e64,
        0x63627e7e519a12e7,
        0x0,
        0x2ce8217d2ef6cdee1a7aa64,
        0xe9f6f9936885aada422a4d95,
        0xf3ad9d14a2a6361d,
        0x0,
        0x7,
        0x6c43ffb69daee5a8f68db2ed,
        0xbd68c29190be3c169aa77bef,
        0x2ddefa344b284497,
        0xe9a164ce300dcb243d21d95c,
        0x30f282442a761c13b1f39a11,
        0xb5cdd13cfb313bb8,
        0xd71b57f55aa8f88a28e82d33,
        0x55a6ac05e2fe5d8b29c21ddc,
        0x538a9f9778119391,
        0x75a52a0cc49cfd263b996940,
        0x59450e6a7d833291cd7b335a,
        0x596237e38dafcafc,
        0x80ccdfe380272fa7ab105555,
        0x203bb32043756f98ac644dca,
        0x54aac807d2d7ce7a,
        0x95e0e0fc348c05926be6adfd,
        0x7914d2595ecabc11849169e2,
        0x905832c2b2a2ff25,
        0x86996409286c227a8efc69ce,
        0x9dc9608c544366fce0b39215,
        0x3037112ae5688206,
        0x8,
        0x571fcbb4d417800227473f8d,
        0xa495d55acb408813e39b7ec7,
        0x1cd06e4d6b5bd,
        0x5d97c58bfd059d6bc6e27596,
        0xe5fae16ae61b08f81992cd4d,
        0xb60bc36aedb86bc5,
        0x17946eff21c95b735320e31b,
        0xa03474c9a0293e6ed956c192,
        0xa9cc09225470e3d0,
        0x1345c844dfb82edd97de793f,
        0xeb538352369b6f85c88515a6,
        0x873ee8217338c961,
        0xf21dfe2791d926a7f2255a8d,
        0xdf5a335f1a412b5d558a4fa,
        0x7ca01d06d255c509,
        0xb639863a5d8e6a9e8036fb52,
        0xc5c1b1d4593a09694922e08,
        0xf5d3e1744e9008e8,
        0xced41331dc81f5871852bb86,
        0x16e0c66477dca88da6df25fe,
        0x7256585510ea748b,
        0x1,
        0x0,
        0x0,
        0x8,
        0xa92590d116c37bfe84c6d33a,
        0xd486409b88cea734dc0d0ad,
        0xa62caea9fe8dcc84,
        0xa712e6968709d2b9ec1a5f70,
        0x7bf2a847df2008aeeb3407b7,
        0xd74797f63f7ce13a,
        0x83a0937dacca346865954b2b,
        0x2c762853cfad84744fad1b53,
        0xb9073727ff5c40cd,
        0x8e5f0c99fe2cda4abedfc3fc,
        0x256b9dd6e37ad81cb791cb1f,
        0x6dcf5dae12cf7db8,
        0xf1ebc577266c025b32604a5f,
        0x84a238b513cdd027b7307536,
        0x1fca714e9265b1e9,
        0xf4952cfa23820a1a69b31549,
        0xea625cc3ac01f5039b116122,
        0x86b53c05e685b736,
        0x1cdd98dab8b7711c08934bf4,
        0xf54e86206ff4227f1cc45e25,
        0xb42f1c5c6ea77898,
        0x9813f6eb474d4d8cefb35f3a,
        0x2f8f97cde56f790478ca9669,
        0xbbe6cc83840f6806,
        0xb,
        0x61de91f1cca4800f12f2bcdb,
        0x8018d57b8ec3b88b39407773,
        0xc9b3041def82f,
        0x8f2666d3eb274df67031465e,
        0x49dc29ec4abd3ec8b3039d1d,
        0xfa5257ec800af269,
        0xa50f08f9ec81802b45e64501,
        0x616f31836120b507f15f4afe,
        0xa4943ff04f163ab4,
        0xde084596f220c8144e5c9bb9,
        0x13de6c9a498094bc5f3f1651,
        0xb2ba25f10b64376b,
        0xfc69b8a0f9f5ac0765e7feb5,
        0x47b257e481978bf0eeff5029,
        0x1e6c8e9aae10cf05,
        0x13271a97b0ae45cfd4a1dd10,
        0xf6b932968732a28ce95603cf,
        0x629733507a612228,
        0xbb124ea1e745e5924221a55c,
        0x8b78f0117da40b65589f1f9d,
        0xa79b5274e9a1f92f,
        0xf21dfe2791d926a7f2255a94,
        0xdf5a335f1a412b5d558a4fa,
        0x7ca01d06d255c509,
        0xb639863a5d8e6a9e8036fb52,
        0xc5c1b1d4593a09694922e08,
        0xf5d3e1744e9008e8,
        0xced41331dc81f5871852bb86,
        0x16e0c66477dca88da6df25fe,
        0x7256585510ea748b,
        0x1,
        0x0,
        0x0,
        0xa530a7c83cf959ba6fe011b7,
        0xdda640f49493a364ebf8ac65,
        0x4d30a593e0847660,
        0x0,
        0x0,
        0x4,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x589fa250d638e35400c12ddf,
        0xb3aac19fcb5095808402aa7f,
        0xed6de6590d0195d1,
        0x0,
        0x2965eeb3ec1fe786a6abe874,
        0x33e2545f82bb6add02788b8e,
        0xf586bc0db335d7b8,
        0x0,
        0x155b35991489db2fdf4de620,
        0xf24ce461346a182d67eeccf0,
        0xb4122bb4b37cc7d5,
        0x0,
        0x12815740835b12f70b96c66f,
        0xbfa76a8b80aec9f2e31c40cc,
        0xcd8a26d17d33c7c1,
        0x0,
        0x9a8f496f09402b8fd6beb89b,
        0x28e48918dad2123d7f202bef,
        0xcdd11b6ffb3f8614,
        0x0,
        0x4,
        0xb4862b21fb97d43588561712e8e5216a,
        0x259f4329e6f4590b9a164106cf6a659e,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x5487ce1eaf19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0xa3f2c9bf9c6316b950f244556f25e2a2,
        0x8d723104f77383c13458a748e9bb17bc,
        0x85776e9add84f39e71545a137a1d5006,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xafc19dabd2b0bef1f47a78e4,
                limb1: 0x64c8cfa2f6ce21bd45380a70,
                limb2: 0xd6ec71e82872d984,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x1afed7037f7e7362dceb03ec,
                limb1: 0x149013c6ed7333d6e4ded96a,
                limb2: 0xaf1489c5a6180b55,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_10P() {
    let mut data = array![
        0x1,
        0x6b11177f55da52e9d50e4c6c,
        0x97fa38219e19df1d11e5c867,
        0x388c3eecac351497,
        0x0,
        0x53f213db603a8ed2ddf70233,
        0xe761c848b763e86b90d497b,
        0x25a3eaca6f0f7b7f,
        0x0,
        0x14277f170ffb1e9f4b7f636a,
        0x8ede2fde73788eadbf299962,
        0xd5343fb8691e375d,
        0x0,
        0x5ac7edbef5baa6939224cb1e,
        0x49ffdb9494ad13c408993afb,
        0xbab680f46775042f,
        0x0,
        0x7d6818f128278920c0d949c4,
        0x4772cedef1b9232a0674cf5f,
        0xb2dac1ef2a9a5101,
        0x0,
        0xbc2b0b1b755992c7d0f3dc44,
        0x5a0eede28d5d8cc1a5b0223c,
        0x16a6832a79cfeefb,
        0x0,
        0xd,
        0xf20afbcc6ce2d3f0b0ac27bb,
        0xbfa7c61a722fcaf414b3a113,
        0x3b969b9c0e07de4a,
        0xbfae603c2781eb71c12027ed,
        0xef9e838e2cbaeec5db22e4bf,
        0x21d4446b19eb746c,
        0x1e783b4528142adc67cecee1,
        0x3003a6b6a425e9813acb46fd,
        0x5ebcb2bd6cc0c462,
        0xba0205fd22a683de587cc81e,
        0x9da07f4627ba3bd63e54bc2d,
        0x159f4b9c9b139781,
        0x2bca6fdc7b752c306bd9b813,
        0xb2ee72611655b45a52da51f,
        0xea9d33cefd197e00,
        0xdd5efd7b36dd9ea6e48f97d6,
        0xd686f1687708317b0fde8f36,
        0x14841f42ab8e665a,
        0xc43c56aa87d80e385df47b81,
        0x4d8a83e2131353b17b38222a,
        0x5606120e1b7e213c,
        0xf3481073daaa7e9571216965,
        0x36c9e16d8423ec7954571e74,
        0x6f0d3a1d0d5d03b5,
        0xab8f770f43a0c8eef917ab76,
        0x9487d406a206da6a30469ca2,
        0x67d1145fbb451569,
        0x26aaf89ab145efd7bdb4eb66,
        0xd257adcf3a660d7ba34e0904,
        0x4ca78c703f6b71da,
        0xbde75723e483c664890f6e45,
        0x21625f38c19856f285e341a8,
        0xac6dfb908c1ed1eb,
        0x4374b926e0a75ffbe927ebb1,
        0x5bb687dbc3afc4cf704dca44,
        0x8e7d6c956f6af927,
        0x8ed19158bb92b213866f7154,
        0xd76dd7b12e80bcdd4ed4ed53,
        0x975f292fd74e0a98,
        0xe,
        0x5f5dac6fe502f96b7bf10a69,
        0x90f053228b75b4a31f3cbdc0,
        0x646796d58f56bded,
        0x3533ddb76268247902a9165a,
        0x5b00e5a705fcaf9d197845c8,
        0x1aa20e3ee65c43fd,
        0x640622a5c8f01fa3296976cf,
        0xc4482e98f75d53a6fdf96246,
        0xed96e0eeaf29adaf,
        0x76d9d3707b5ab691a73ce0fc,
        0x691185086d36ebe1e85241d4,
        0xdde9b51e398e3c1f,
        0x2a2b8efa682034318fb64af9,
        0x40379c1d64ddaf88ea368eef,
        0x3bd2f51d48deedff,
        0x906808da0dd47a62c24175cf,
        0x4fdabb901debab68116d3424,
        0x3e9b339e8857063d,
        0x6db0eb9fcb35f4d19020d7d,
        0x13a473a09b54572671bc177e,
        0xf8a9044222d5d04b,
        0x2a360c7512ac123bf5ebda7d,
        0xbbedb8c8054cf5e830fa936b,
        0x97dbd25c710ab0b2,
        0x19f8657457a7985d5e6d978a,
        0x12bfcbc8911ec89adfaa430a,
        0x436bf157a86774f2,
        0xc92281425ad6e0f9f964da97,
        0xf34fd0da62e63611522d0094,
        0xae44a22611af6d14,
        0xe418129b52987c7b08c17185,
        0xcbc3739736733ec0676d4e4,
        0x902a502324679fe0,
        0xa4f8819b876a982b5f058ff4,
        0xf0f39c78cbdd8f0ba97f2cbe,
        0xf2cfac91f2c59bca,
        0xddf439121eaee2f5cc225752,
        0x8bf14234264cdfc84de1d608,
        0x72fbd87184bddaf2,
        0x1,
        0x0,
        0x0,
        0xe,
        0xda8cb1c6e31ae26a55ca4fbb,
        0xe53b1310560c62c53d194dfe,
        0x6ac4407357540941,
        0xc2446591203f211c26353d59,
        0xa65dbd9c4451f6c04227cc86,
        0xc766a83bcd1217b,
        0x919ed1940c9495c02a38dbcc,
        0x1d5cf02f1fa9f44098d8ba0d,
        0xc05d75d93e11e7bb,
        0x5b56635669b0b78bc3277a14,
        0x84cf1b7cc7ba1eabb4955503,
        0xe5bf10939c6daa58,
        0x6de4f92bf874417a72375215,
        0x701bb80716172c6c61400a0d,
        0xcbeb8028552508e9,
        0xac34761a73dee6df5f34d763,
        0xca88686373e70a2642d7da41,
        0xce991a81a0e7362f,
        0x63a03c16dff8de9268210b71,
        0x212d33a0ab24a162ab43ff13,
        0x664dfd83ade5aae,
        0x8bab22d6c10d8848ce5a80a3,
        0x4184e18382b2ea6a6dd830ab,
        0x3729aa36c9163573,
        0xe4d77bc77fd50966b33d9c1e,
        0x237024ad23a38b761940ccf1,
        0xc946f0a79c858153,
        0x81014b7b931045c07c01bf97,
        0xd194edf08ec8fcd9f8559979,
        0x7c6d9787e9d4472d,
        0xc67293c90cf6b581abf41e4,
        0x47cb6b434d25373a17078bff,
        0x475fe0e63744970b,
        0x9742adee5f9c7ca118c0f752,
        0xa54dec1881d6f8770d6ae259,
        0xe52068a760fbc3b2,
        0x9af59f613f34fe04ad5818ab,
        0x8ce0d378f8649e5b5404384e,
        0x126033e6435cea24,
        0x7ec8b01b8c07dc1fe15d2914,
        0xfe5cf2a93151ca5e98012cfa,
        0x3403c5f4ea8c5b43,
        0x11,
        0x9b8fb70f4314d1f263975081,
        0xf69245f1d037f075daa93042,
        0xbed51fd6eb5f317e,
        0x746b1003b0d8ff4f129f9c76,
        0x7d06479129e8cd4bb249e879,
        0xba6e63b84c85dbed,
        0xbc2af2887e90dd7c21e2568f,
        0x5df9462ec38d4990f1d1afec,
        0x7f202686ca23bfce,
        0x9f527483447df76d0e9b4833,
        0x706af65d87f627d0797c8a8f,
        0x75cb8aa9223a62c9,
        0x5c64c6903b4991d4f0a526fa,
        0x1c862a74c80c7c5b80f62e52,
        0xbd66c20be474c5f8,
        0x56de609c29bf78587933b71a,
        0xf3434f89c8cf037f77f5cf46,
        0xa3d54a44698ad95c,
        0xa6d73a86644251b4564b5a1e,
        0xf290ae6cac854def0476e646,
        0xaa88d2ed2d66ee2c,
        0x51a5e62dead4b3d9492953a8,
        0x63b7a99589f868e2411096dd,
        0x62d5b5a46029c2e2,
        0x4632cf087369a4f25740a237,
        0xd3194e0c15c327a42f15096b,
        0x168ecd04232b38db,
        0x86cc978a78938627eac41ab3,
        0xbad329994f9fd19fb0f71b8f,
        0xbc89734c9ea1cbdd,
        0x66de8eb454d7799d33360464,
        0x15133b5a2d1f615c5e3a65ad,
        0x890403526fe00fd3,
        0x9cc3f0b50b91c192f7949e1c,
        0xa9691316242db1ec82247c40,
        0xe719a9554bceb77e,
        0xdad010c1319f15b58e554948,
        0xc6e8a0476f00548b7359dad2,
        0xd3278d40b2e069b6,
        0xe418129b52987c7b08c1718c,
        0xcbc3739736733ec0676d4e4,
        0x902a502324679fe0,
        0xa4f8819b876a982b5f058ff4,
        0xf0f39c78cbdd8f0ba97f2cbe,
        0xf2cfac91f2c59bca,
        0xddf439121eaee2f5cc225752,
        0x8bf14234264cdfc84de1d608,
        0x72fbd87184bddaf2,
        0x1,
        0x0,
        0x0,
        0x5a15da6982939b5e2660134,
        0xd10757b8b27115e1ed30c324,
        0x222c315d9ee151bf,
        0x0,
        0x0,
        0xa,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x589fa250d638e35400c12ddf,
        0xb3aac19fcb5095808402aa7f,
        0xed6de6590d0195d1,
        0x0,
        0x2965eeb3ec1fe786a6abe874,
        0x33e2545f82bb6add02788b8e,
        0xf586bc0db335d7b8,
        0x0,
        0x155b35991489db2fdf4de620,
        0xf24ce461346a182d67eeccf0,
        0xb4122bb4b37cc7d5,
        0x0,
        0x12815740835b12f70b96c66f,
        0xbfa76a8b80aec9f2e31c40cc,
        0xcd8a26d17d33c7c1,
        0x0,
        0x9a8f496f09402b8fd6beb89b,
        0x28e48918dad2123d7f202bef,
        0xcdd11b6ffb3f8614,
        0x0,
        0xb5076be8537cff2a42c6db68,
        0x1066d40cbd01a3752e4e069c,
        0x123ec2fd302cb0f9,
        0x0,
        0xc85f5e5efdf415f8081bf53f,
        0xadc5010e9d9ac6c64000d33d,
        0xf81314011d8852e4,
        0x0,
        0xd5915098d3d2001310b0b935,
        0x88bb4507ebf1be82cfba2397,
        0x8a463f1c00ce885f,
        0x0,
        0x414858f8a83f9d4498890137,
        0xa09c4658c47ace74c42cdb60,
        0x8aaf300ff3ab7d98,
        0x0,
        0x1772eb803ddc8a82e23b1c05,
        0xc26baeb89b03fd69eb64b337,
        0x4ea7131b2d873a45,
        0x0,
        0xc9d16330db15efd90235eed9,
        0x1b586ef360673d36baa16189,
        0xee652d2b848ad111,
        0x0,
        0x68f9e7942638253f3b596f1f,
        0xb37e6153d9accd97a344f384,
        0xda48eae9ff614551,
        0x0,
        0xc58be8ed857035b34f51c620,
        0x3b14ed53116cb7c1db000006,
        0x7dfa292fe99b77dd,
        0x0,
        0xf7f7bd2513c1b31de932bbd2,
        0x627e2fa74b7ac891f7d555c7,
        0x7f8a094f818e7192,
        0x0,
        0x9b47b9326b668e62071faf18,
        0xe21058cb6937afa89be6931a,
        0x21a4bfb4cce2ac8c,
        0x0,
        0xaf4ad4d7d582b10b14c97e6c,
        0xadf808c85e766e997e470fd0,
        0x2714571e587ce46d,
        0x0,
        0x86a7815dad7e8a53b19fee2,
        0x1922fc1efcc51e68146ffa1b,
        0x9e19b7c1f886488e,
        0x0,
        0xa,
        0xd3fbf47a7e5b1e7f9ca5499d004ae545,
        0xbaf3897a3e70f16a55485822de1b372a,
        0x101fbcccded733e8b421eaeb534097ca,
        0x38c1962e9148624feac1c14f30e9c5cc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x1759edc372ae22448b0163c1cd9d2b7d,
        0xe005b86051ef1922fe43c49e149818d1,
        0x7d41e602eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x552f233a8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x8c1745a79a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x5129fb7c6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x870e15c2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0xadc0da7a16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x148b2758d7ab792809e469e6ec62b2c8,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x1c835913f9cca4833f4dee66,
                limb1: 0x192924721b46c95f86539366,
                limb2: 0xb6324fc7eea725e5,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x1655ccd2f516c24c8b23cd23,
                limb1: 0x5a78708d282fbf676e9eafa4,
                limb2: 0x8f71e12b03a69c94,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_11P() {
    let mut data = array![
        0x1,
        0xfbd9a7fa7deaee0b2078ce21,
        0xe08d8c63fcec45ca7f37c6fb,
        0x1314e61f31caaf0c,
        0x0,
        0xc36e0bc596bc77eda1a2a2c8,
        0x505caeb68885683c059695bb,
        0x1e0401059a4b00ba,
        0x0,
        0x152a00a9538e64a9cf15af4c,
        0xd9ef1322a521497457811e06,
        0xc3bbb0e16de2ad21,
        0x0,
        0xab95af81da1440ea2a6ca787,
        0xf454eb1e386b1bcc76f0cc25,
        0x87605deaf46b1109,
        0x0,
        0x5ff8d6ac90fde4e8e5612771,
        0x36aa82e428a767282d7305be,
        0x5037d67a7c712d9e,
        0x0,
        0xd13fcaf162851bc2426fd8,
        0x9fecdc613770a0b07609ded7,
        0x22c9b04ba9335020,
        0x0,
        0xe,
        0xca73cc0ff63f2633355d775f,
        0x1117deaf96427200f70796c6,
        0x5a6369898badfb76,
        0x910f1ea4eae0c7bbdd1d6c07,
        0x4fe06882d2dace7aa234d418,
        0xde751e4f56db627,
        0xc5f9afc31337c78586364d0a,
        0xd2e1fb50451c8d7cab9729c8,
        0xb2b790ed0df5aa60,
        0xfd902ff1cc83a902e02a8e35,
        0xc25a4cd8ef3ca96a4f8a6c25,
        0x210de2904eb6d5a5,
        0x34fdc2038a141398b2acfbde,
        0x66a998e6132b6de168b7af66,
        0xa8784903e90eb823,
        0xbd7d654639e777297e455078,
        0x4e54a8923219a4b3fe383da8,
        0xe5c8a535616b0782,
        0xcf924b3a927342a0c7874ab7,
        0xa8c95760678ce6cd578df76d,
        0x2d4a7237b0e4d928,
        0x895ca6c0e463b0285e7e1795,
        0x1fe998fd2b89fa99c992c706,
        0xb55eb708daa209e8,
        0xda6e6e71729519753486ffda,
        0x803aab2d3a38cd87919bbe92,
        0x981cc2b730e1d4ae,
        0x68d7dcb496e9a6242c4bab9a,
        0xff2e92e18106602e9e2db00c,
        0x2fdbe884f119cb61,
        0xcdf77f12ec0080beb3825446,
        0x1763ba78b33801abce82ae5b,
        0x2d8c8918911f6d7d,
        0x1542f686ae1a1eccf4172e30,
        0xa83aae49080250a3e3433f10,
        0x533d2ff3e4a0f804,
        0xa5466b073404e6065e92f906,
        0x4dc098ece9145a4381cec085,
        0xeb375a538e17494f,
        0x332df66de754a1158fedde8d,
        0x54b682c13d0cf87c502b9074,
        0x3bf8e0b7ea00f41,
        0xf,
        0x416c88c56752b5caff0976a,
        0x4a55632172b798842a582180,
        0xd4aad214aef72d55,
        0x72c64666068341ab5b30bb12,
        0xc41375047b7c972610d3fa28,
        0x5fcb2cdfd758fb3,
        0x7f618cb9472e6c5cd0dbacc2,
        0xe411d70ea178872811d41dd8,
        0x81ebdf8e7442ccd0,
        0x691c3a465c2542f6395c0516,
        0xc5061d4b4d6c983589ad4fce,
        0xa64a925eb2bc5935,
        0xc5d49e5cfc67a3955110a13b,
        0xe204e35615061f26ca6d0b46,
        0xd43a478ad07fca0f,
        0x81694f18b34e91b5a48277a6,
        0xce0424daaedead231ffcf4f,
        0x26ff273de9ac8dca,
        0x1b53d966191709eda0cb37f1,
        0x714eec3d1d14bfa60ad77bd9,
        0x25bfa4c1e42715e6,
        0xc6c233a11cbe7d1214c54387,
        0x96075a431a4e13a5a3355bc,
        0xedae75dff9a24e7a,
        0x9f6843e70da30a314d335a94,
        0xd86f8f785104b37b941654f3,
        0x7202299ce1562a63,
        0x7381d56ba3367d42a784ec9d,
        0x4e5861f2fc2c11a30ceb7fb,
        0x24a3d480d448dd90,
        0xcec2b48799061e3931ab71db,
        0x3fa8d132a00b4ca924b9e4bc,
        0x9c682f7d99a5e924,
        0x8edb57a34cc5287af1067bc8,
        0x3257ca8ac046a7f0b45868ca,
        0x55a9d0d117f3eed1,
        0xfb59ab7b2e348e211cad6294,
        0x482a9f651a1a4de78df25f46,
        0x5f5d48be3f584187,
        0x51dbf485411b8bd6b64fd287,
        0x1416f72e83aa874fd1bd1333,
        0xd757dd867f2ec3d9,
        0x1,
        0x0,
        0x0,
        0xf,
        0x1236bd4b3361bb5dd7b06ccf,
        0xaed87514c2f195dc68495c99,
        0x31c521e804cedcae,
        0x7e31106990bcd26e7b8a3b91,
        0xc4dce10c8ae68be52c9308f,
        0xec29a95ebceb316f,
        0xcbd8bd18034e689cc808824d,
        0xd83646e15e58faccdcb6d474,
        0x63b21acbfc9abdb0,
        0x8f7dad7cc5942be6bbecf945,
        0x13306142a70dbd9d3508ce1b,
        0xf0d2bba978c58bad,
        0x68aed3a9393aea8cee99bf8,
        0xdc44fd6a9f85ffec8632df6,
        0xf078dbc71dfc7860,
        0xb8909f02f77348bbf1ae3f70,
        0x7a1c257d6d9071e0a6af2644,
        0x58b53d06fa9298ca,
        0xfb53b1b98058646dde5e626f,
        0xd713ea37d7a1359e966007c7,
        0x8f313c3c78100634,
        0xf447850cf815774f6fd467c,
        0x127054845bdc2d9a59d61c8c,
        0xbe15073f709ac01f,
        0xe2eb33762360c99d7aa4ee8b,
        0x63724f73d67b61e980e5e915,
        0x73f6872c12c01871,
        0xbde254bcf0695e0b591505c,
        0xfefe33479c35b71c788dab17,
        0x7e4bb9d728bb2862,
        0x21378502543a83cff2a79b92,
        0x954fe6fc1904428b53f5f900,
        0x4e71a20cacae3d2b,
        0x42245d7bc5c037cf27497a2,
        0xb654ef3e0847a2c3de91f128,
        0x4329bb9bd9e33c1d,
        0x4b669e2bef222450ca31a877,
        0x5148156be31f09900faeb741,
        0x32caf7380a86e19b,
        0x5420f21e5e0e11d1ac8a2aa8,
        0x235342e8a941cca8dcbdf08,
        0x8efba804ef0560c1,
        0xb6020eadece79a556b63d9f3,
        0x3ccea62d09d4ebcdc83c167a,
        0x420f4814535f0088,
        0x12,
        0x1c9f7bd65d342f8dcf9436fb,
        0x855b5ea23052b9d2868ea80,
        0xd0abbe90c8c23d55,
        0x236becca2d96cbaf7e551d7e,
        0x5c88331f6068220a75cbd71b,
        0x29e8e3a1ee36edea,
        0x7baad910f244f68cb601c4c1,
        0x3c7ce1666a4bb2187cccd0eb,
        0x8d731ce52dd399b6,
        0xe3dc6078db7a001d4174ce19,
        0xad80303090afc1faee155024,
        0x60b4d2ab921d9dcd,
        0xdb969af0ed58bac592a536c4,
        0xf235ac5f0ea7713599cf4917,
        0xd394a799b0f41622,
        0x942b6662e546855506cf61d,
        0x3e33a72e4df9f2e76fd2c905,
        0x92e5f23fd7faad57,
        0x28672c110bc688769eea907e,
        0xde2e92f718fdd5bfd591b2be,
        0xae8813abefcdf282,
        0x352407c4c59d0f1ae27594a3,
        0x23a81ad3708847bf41d46370,
        0x53ff80aaa3efef66,
        0xdd432a6a12c3d911c0e9fd25,
        0xf7ed2e97e20ed3333e9c21f8,
        0x450e4a881307b684,
        0x43e0af578f9476c1356db40d,
        0x939597176b68075d607e83b9,
        0x263a7447b22524d6,
        0x6e1523564be950a770757399,
        0xc6fe2e0691f3f9da5b4896e6,
        0x3487c24f2d2bae77,
        0x8767a95e2707258fe460c4ae,
        0x38d6194392f34b108281327d,
        0xc9a6df548901b21c,
        0x52f585c9e6a6602c7042a64b,
        0xfe0fe1e2e67ae26f126f52ec,
        0xc030d1b48fb2a842,
        0xbc6642c60c6f11e2dda4a72,
        0xcc49937839b4ffd7e0e56b24,
        0x7fcf3e2b13ed4413,
        0x8edb57a34cc5287af1067bcf,
        0x3257ca8ac046a7f0b45868ca,
        0x55a9d0d117f3eed1,
        0xfb59ab7b2e348e211cad6294,
        0x482a9f651a1a4de78df25f46,
        0x5f5d48be3f584187,
        0x51dbf485411b8bd6b64fd287,
        0x1416f72e83aa874fd1bd1333,
        0xd757dd867f2ec3d9,
        0x1,
        0x0,
        0x0,
        0x534a52a4b4c70178a294086d,
        0xe71a7402fb3ca29f32f78a3f,
        0x2b98afeda353c48,
        0x0,
        0x0,
        0xb,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x589fa250d638e35400c12ddf,
        0xb3aac19fcb5095808402aa7f,
        0xed6de6590d0195d1,
        0x0,
        0x2965eeb3ec1fe786a6abe874,
        0x33e2545f82bb6add02788b8e,
        0xf586bc0db335d7b8,
        0x0,
        0x155b35991489db2fdf4de620,
        0xf24ce461346a182d67eeccf0,
        0xb4122bb4b37cc7d5,
        0x0,
        0x12815740835b12f70b96c66f,
        0xbfa76a8b80aec9f2e31c40cc,
        0xcd8a26d17d33c7c1,
        0x0,
        0x9a8f496f09402b8fd6beb89b,
        0x28e48918dad2123d7f202bef,
        0xcdd11b6ffb3f8614,
        0x0,
        0xb5076be8537cff2a42c6db68,
        0x1066d40cbd01a3752e4e069c,
        0x123ec2fd302cb0f9,
        0x0,
        0xc85f5e5efdf415f8081bf53f,
        0xadc5010e9d9ac6c64000d33d,
        0xf81314011d8852e4,
        0x0,
        0xd5915098d3d2001310b0b935,
        0x88bb4507ebf1be82cfba2397,
        0x8a463f1c00ce885f,
        0x0,
        0x414858f8a83f9d4498890137,
        0xa09c4658c47ace74c42cdb60,
        0x8aaf300ff3ab7d98,
        0x0,
        0x1772eb803ddc8a82e23b1c05,
        0xc26baeb89b03fd69eb64b337,
        0x4ea7131b2d873a45,
        0x0,
        0xc9d16330db15efd90235eed9,
        0x1b586ef360673d36baa16189,
        0xee652d2b848ad111,
        0x0,
        0x68f9e7942638253f3b596f1f,
        0xb37e6153d9accd97a344f384,
        0xda48eae9ff614551,
        0x0,
        0xc58be8ed857035b34f51c620,
        0x3b14ed53116cb7c1db000006,
        0x7dfa292fe99b77dd,
        0x0,
        0xf7f7bd2513c1b31de932bbd2,
        0x627e2fa74b7ac891f7d555c7,
        0x7f8a094f818e7192,
        0x0,
        0x9b47b9326b668e62071faf18,
        0xe21058cb6937afa89be6931a,
        0x21a4bfb4cce2ac8c,
        0x0,
        0xaf4ad4d7d582b10b14c97e6c,
        0xadf808c85e766e997e470fd0,
        0x2714571e587ce46d,
        0x0,
        0x86a7815dad7e8a53b19fee2,
        0x1922fc1efcc51e68146ffa1b,
        0x9e19b7c1f886488e,
        0x0,
        0x17bc74c409191a2b2249d987,
        0xf4fe5f79db38f3064f7d093e,
        0x3536ce04295e2a42,
        0x0,
        0xb1d36a10f008c1c24de1ad7d,
        0xa4f2190c71ee5e0ff07c48f8,
        0x21c1a2d4cfff3233,
        0x0,
        0xb,
        0x101fbcccded733e8b421eaeb534097ca,
        0x38c1962e9148624feac1c14f30e9c5cc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x1759edc372ae22448b0163c1cd9d2b7d,
        0xe005b86051ef1922fe43c49e149818d1,
        0x7d41e602eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x552f233a8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x8c1745a79a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x5129fb7c6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x870e15c2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0xadc0da7a16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x148b2758d7ab792809e469e6ec62b2c8,
        0xd450fe4aec4f217bb306d1a8e5eeac76,
        0xd67e55fd642bfa42aef9c00b8a64c1b9,
        0x85940927468ff53d864a7a50b48d73f1,
        0x37176e84d977e9933c49d76fcfc6e625,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x64fc5a7a1dbb0ded5877d244,
                limb1: 0x690efd6ba8db4b9093e04859,
                limb2: 0x4a95e2ad2036bb89,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x787161946cccf45a982322c8,
                limb1: 0xfb559d2c2a26b632cf7c2894,
                limb2: 0x4ed9af33445b7a3f,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_12P() {
    let mut data = array![
        0x1,
        0xce8feba84a8c925747503d0f,
        0x2300b2761f22d72b3db249f9,
        0x94bf514268358183,
        0x0,
        0xbdb1c259622c6b4a1147d7d,
        0xcc08144f7c092a3a5d96e27c,
        0xfec0b894c5f315bf,
        0x0,
        0xa94c9420ab84172ff6ee46c2,
        0x8980233f0756f2b67fb653ab,
        0x506f497e9ae04b84,
        0x0,
        0x80b2f1e1d15a5845ce9ba816,
        0x27f1f33d6bb5bb54ec77214a,
        0x1434934d95abb0ba,
        0x0,
        0xd02d6ab8d7f33aec8f8b450e,
        0x545ab122af0ba4739b037222,
        0xf166956f640b387,
        0x0,
        0x114e962b8c2fe54a263cbc2b,
        0xd7b917b13e1783866e32425,
        0x8a932186cb6e718b,
        0x0,
        0xf,
        0xf17c06bc49d0f5260d0845de,
        0xb72fc799cffc81d240e941b6,
        0xbbb5bdfaae995ff5,
        0x7865bf01992ad4beb169a55a,
        0xa36bd726e45c916cbedb1592,
        0x4fc3c56a82e5d344,
        0xc8f17904a23ec115cf93acf9,
        0x4ff3d8ba725469c92ef38506,
        0x512f7f5f2fff3f2e,
        0x7a95a6830cc1945406cf3792,
        0x63520a288459678ef28a9e08,
        0x2fc1606bd76f47bf,
        0x575609438945f959e78f1449,
        0x20c7b29acc38e3043f6661b,
        0xc63bf66a924297c6,
        0x6b3f4637d19f9e0d33a4cabe,
        0xb28a14026f96ff783c48d505,
        0xba103cd47e0c737e,
        0xa8f3bfecfe263e3a8dc9e655,
        0xb7370bb2526eb2e5a24d129b,
        0x6a374e612c5d2838,
        0x11317d5d4e73df27ab45ef9f,
        0xc961be8fe7bc377b16112248,
        0x6a5a61a28721818b,
        0x13afa484093d8e57babe44e0,
        0x22a9805d86bed8d8ffde4bdf,
        0xb8fd389b5305daa0,
        0xc5160b1eea767069184387e0,
        0x471e2f7f71a54b7d36b91314,
        0xd62e75b7863dbb70,
        0x629b88c44ca29289b3fa0e68,
        0xdd9473cb0b34f9b7db290120,
        0x11c284634732968c,
        0xa50b077fa8d546b11c4d1a3c,
        0x8da1299214aca9ff5e809237,
        0x83a32e42b056745d,
        0xfa6c277a26313194bfe0dabd,
        0xdd700d48a352901368cd5533,
        0x77239ff5998ecc55,
        0x2d9cb9b87b25c39aa79d95bb,
        0xaa1e23b63bd00126941a07aa,
        0x58c55ce4512bfdac,
        0x53c5511d9c95d4375b079055,
        0x7bb1aa0a44e2aab307060afc,
        0x99f1a3fb1acb8335,
        0x10,
        0xc7de0571b77ed50b1f6a21d0,
        0xce38da036e5652e46a78da5a,
        0xe55bf7fca7c0cbb7,
        0xd82ba317b154fb68f5396cf8,
        0x8ddfda43187e54a9b5c43c2d,
        0x2af290a80c4ccf39,
        0x78a45c272a748374859c270a,
        0xe4fc3d033912579500c97b61,
        0xa31f36ab4fd5e373,
        0xb90e3dee15c73914c6f5c97b,
        0xf687532f801c0a3afcd35c4f,
        0xca8a44825828de38,
        0xa0cdf9c5390f5e28f1d9ad4b,
        0x8483fb07b51566eaaf058034,
        0x953556f621f51b2f,
        0x4e30dfb5be1ee7c369597177,
        0xf5b60f082bacf0e083579ec5,
        0x7952ee0d1bf5a411,
        0x8949e4c8816717866bdb30d5,
        0xcddc36ffe243ce8864b9002b,
        0xf08adb2aaa4e9157,
        0x607e235cf08124d032d89ba1,
        0x76072c3bf78dd6c52d1004d5,
        0x613514fe242bb393,
        0x3fe895beaa1082a373cdc523,
        0x3fe10f00c7f02fcf8f0bffab,
        0x16c5f122308d4cb0,
        0xf9453111f9339596da1bd65,
        0x6cfbf63e3e9d98ca31d08e9b,
        0x31e14afe80afb410,
        0x2aff55b93e6681e68d34f75,
        0xb6c1f5f504a526372cf077a5,
        0x291573bfb975917f,
        0xad30083a4c01261795a68e84,
        0xa21530c0450f95d32a747e0b,
        0xca41d2bf8de71dba,
        0x1c118104e9d084d5b07a13b1,
        0x6911ac583ef74808012ec3c1,
        0x2b2ed22e8e90355b,
        0x4d0a20114c5df590d7dba5cd,
        0x7574b4ac54a2475ee7475abc,
        0x20fdd1b9e1fc5a5d,
        0x8b854d5cd41fc5df7c89a266,
        0xbbc6cd1f2e568dc948c92d9e,
        0x3d4d70771b85dff8,
        0x1,
        0x0,
        0x0,
        0x10,
        0x22c745fb6db7542f33ed5615,
        0x8cf589c6f0f1bb60030e02f4,
        0xebb946d3d1298953,
        0xbb1938eb84fe70b1fe65c26c,
        0x34d64d17b07e60ad98a9ba91,
        0x973bcc7b5aa8d49e,
        0x2a7fdbb1a9de5932c608bdd2,
        0xd6d32ea01ba841194eda08af,
        0xa7ef39ef147771e5,
        0xaefce21e904e237c5567133e,
        0xd8f2d257d80a2649754723a6,
        0xd2655dc4370eb5a4,
        0x903ea7b309d7c221fe8d366b,
        0xb548a712cc38d9b0b191ab6,
        0xa08d26b1c807bb39,
        0xcd6f1bc5c9e0b78595b450ef,
        0xff51e7daeafac3fdd3e4c331,
        0xdced210ef9f0eaed,
        0xc603f3f379303ace7e072b3f,
        0xe63af26db844df8d209e92c6,
        0x8b9a4f9a0aaa5c0b,
        0x94614da5bd6766ee65134d42,
        0xd170f72adf041c7af62035fd,
        0x7a1b8c5105b4c743,
        0xd91569785efb099417f7cb53,
        0x2a9cf01fc15ee58eb36aede8,
        0xfe21e2f2c0c04ea9,
        0xfac2345423a1f85da9cf7910,
        0xe8223da333bbc4e81e945adb,
        0xbf397bd78a6e723f,
        0x160a93c90964ac123072e52b,
        0x831e12d248083c86e0e3098e,
        0xb278320b6e6a33bc,
        0xb348711d468c7fb8d948d9a9,
        0x4e5cb418c4b4bee3944d4de6,
        0x3d2661c4169964ae,
        0x9a5857995a78af075ec1e127,
        0xaeeac2a265946a878f58e468,
        0xc12492a3255f8971,
        0xac943f9045f08e1e86b73e2f,
        0xa6df4a9c4a408aaf6462b448,
        0x7fa0a3e9a4a121e6,
        0xd678932a3489354c7726795a,
        0xb69779578ee23fa34b31000a,
        0x6968de66c84d212a,
        0x85b9f02fcd2cfb6e71fcaf82,
        0x3a3da5af251330ad711543ef,
        0xbb5170e7a26f5815,
        0x13,
        0x7712261c0477d353dbe70396,
        0xa38df618045c443ee94df87b,
        0x4583c7e896459206,
        0xe93175a5d952dfdfb491fe99,
        0xe11ef7d5ab7450a3f85da540,
        0x2ca1f4985619aa92,
        0x4c7e8512292f9833a745208a,
        0x42e5ab168f80651305825faa,
        0x75da7eaf2ed9382b,
        0xd741b6f44ff164a29022bb13,
        0x8bec204fef1a9a8154406088,
        0x6f23d78d10dedf46,
        0x3dcd777c40c08e8b922d3949,
        0x2d7bb7790c1425147eeabd9e,
        0x3f67f162fa008d86,
        0x9bfa7a1f5d4cd9cf670e4cbe,
        0x9cf6a63c6accedb8982ed2c6,
        0xf463b907138d5ff1,
        0x7a137f699f98ddc8b9f43a05,
        0x978cd42eaff6aff5bde25d80,
        0x5e5642ad004ed79f,
        0x4440f14fcc975fdd55c5fa25,
        0xbeb630ab79f6464eea75a20a,
        0x3da8e9e91f270437,
        0xd8cf7ec64927a3c93f9d93d,
        0xb4dd780da33e3f8d6cab9c74,
        0x18bc85fc6fd2bce3,
        0xf6582a405e6da8fa6b47663a,
        0xc8bff2b39892fc0fc16ce668,
        0x4db3e8202f1c7dca,
        0x734dd8ddfbcdfda6109fcba5,
        0x7554e5ef1811e24767a34a58,
        0x80cb3f3c3662ae11,
        0xfc38cf56be188d4d8b5bbdd4,
        0xae756442ab5d4895b83b71fc,
        0x9e92b45f11df1cca,
        0xd40eda338446db3240f84b0d,
        0x4c77aca7f76091023a17e8e2,
        0x60290a4466a12990,
        0x1df6d5d4aa781f154fd4dbe1,
        0xecf2e6ab551519cf7fe3f2cb,
        0x10062fd4e75c0a0d,
        0x7dd525c418df8f35fd6a06f0,
        0xc484cc9a896d765427f4bd61,
        0x775fe6014e903d87,
        0x1c118104e9d084d5b07a13b8,
        0x6911ac583ef74808012ec3c1,
        0x2b2ed22e8e90355b,
        0x4d0a20114c5df590d7dba5cd,
        0x7574b4ac54a2475ee7475abc,
        0x20fdd1b9e1fc5a5d,
        0x8b854d5cd41fc5df7c89a266,
        0xbbc6cd1f2e568dc948c92d9e,
        0x3d4d70771b85dff8,
        0x1,
        0x0,
        0x0,
        0xe2dc9e28f463f883e47dd8c6,
        0x2f6980756fde395d7d616bcf,
        0x4a5d7e4add45f640,
        0x0,
        0x0,
        0xc,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x589fa250d638e35400c12ddf,
        0xb3aac19fcb5095808402aa7f,
        0xed6de6590d0195d1,
        0x0,
        0x2965eeb3ec1fe786a6abe874,
        0x33e2545f82bb6add02788b8e,
        0xf586bc0db335d7b8,
        0x0,
        0x155b35991489db2fdf4de620,
        0xf24ce461346a182d67eeccf0,
        0xb4122bb4b37cc7d5,
        0x0,
        0x12815740835b12f70b96c66f,
        0xbfa76a8b80aec9f2e31c40cc,
        0xcd8a26d17d33c7c1,
        0x0,
        0x9a8f496f09402b8fd6beb89b,
        0x28e48918dad2123d7f202bef,
        0xcdd11b6ffb3f8614,
        0x0,
        0xb5076be8537cff2a42c6db68,
        0x1066d40cbd01a3752e4e069c,
        0x123ec2fd302cb0f9,
        0x0,
        0xc85f5e5efdf415f8081bf53f,
        0xadc5010e9d9ac6c64000d33d,
        0xf81314011d8852e4,
        0x0,
        0xd5915098d3d2001310b0b935,
        0x88bb4507ebf1be82cfba2397,
        0x8a463f1c00ce885f,
        0x0,
        0x414858f8a83f9d4498890137,
        0xa09c4658c47ace74c42cdb60,
        0x8aaf300ff3ab7d98,
        0x0,
        0x1772eb803ddc8a82e23b1c05,
        0xc26baeb89b03fd69eb64b337,
        0x4ea7131b2d873a45,
        0x0,
        0xc9d16330db15efd90235eed9,
        0x1b586ef360673d36baa16189,
        0xee652d2b848ad111,
        0x0,
        0x68f9e7942638253f3b596f1f,
        0xb37e6153d9accd97a344f384,
        0xda48eae9ff614551,
        0x0,
        0xc58be8ed857035b34f51c620,
        0x3b14ed53116cb7c1db000006,
        0x7dfa292fe99b77dd,
        0x0,
        0xf7f7bd2513c1b31de932bbd2,
        0x627e2fa74b7ac891f7d555c7,
        0x7f8a094f818e7192,
        0x0,
        0x9b47b9326b668e62071faf18,
        0xe21058cb6937afa89be6931a,
        0x21a4bfb4cce2ac8c,
        0x0,
        0xaf4ad4d7d582b10b14c97e6c,
        0xadf808c85e766e997e470fd0,
        0x2714571e587ce46d,
        0x0,
        0x86a7815dad7e8a53b19fee2,
        0x1922fc1efcc51e68146ffa1b,
        0x9e19b7c1f886488e,
        0x0,
        0x17bc74c409191a2b2249d987,
        0xf4fe5f79db38f3064f7d093e,
        0x3536ce04295e2a42,
        0x0,
        0xb1d36a10f008c1c24de1ad7d,
        0xa4f2190c71ee5e0ff07c48f8,
        0x21c1a2d4cfff3233,
        0x0,
        0xef493bf7016f192140ec0c20,
        0x489bc5a24a83819834b3c08c,
        0xcccdd6728670ed1e,
        0x0,
        0xb2d8f23e9b244453602fae5a,
        0x76fafc92aa2ea44429a3050e,
        0xc6c6fb7c62dc6c2f,
        0x0,
        0xc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x1759edc372ae22448b0163c1cd9d2b7d,
        0xe005b86051ef1922fe43c49e149818d1,
        0x7d41e602eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x552f233a8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x8c1745a79a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x5129fb7c6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x870e15c2fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0xadc0da7a16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x148b2758d7ab792809e469e6ec62b2c8,
        0xd450fe4aec4f217bb306d1a8e5eeac76,
        0xd67e55fd642bfa42aef9c00b8a64c1b9,
        0x85940927468ff53d864a7a50b48d73f1,
        0x37176e84d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x467437419466e4726b5f5241f323ca74,
        0xa425799aa905d7507e1ea9c573581a81,
        0xfb82860deabca8d0b341facdff0ac0f1,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x37558e45b8041762de768836,
                limb1: 0x5d514037c232b89fb7a06905,
                limb2: 0x2515485638a3a199,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xb85967bc1c9cde890f6a236f,
                limb1: 0xeece653858fb74a34a817724,
                limb2: 0x71995703660dd489,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_1P() {
    let mut data = array![
        0x1,
        0xed54fd36c0f93ccf4d6a30b3,
        0x6eafafb1e71bee846a3b1813,
        0x29b44c4747a67a39,
        0x0,
        0x6589e76cd63ba451cc0e48dd,
        0x1149d78c68779402516e0e6,
        0x408a34b791a63729,
        0x0,
        0x4bab4cd06d72ec2ae5779c53,
        0x6917274b2e403eaafa2dc973,
        0x1ae7bef91471b1cb,
        0x0,
        0x4b792b778619b6b114598727,
        0x96cc798870f6db14e00e8283,
        0x7db3f78a00beff4e,
        0x0,
        0x823e8e165750ba17e480997f,
        0xbb32cc0e2bc05ae557dcd32a,
        0x2fd96b567f8ba250,
        0x0,
        0xe5a30d3059100da5bb4be48a,
        0xa71bb7e1fc820afa256f3948,
        0x5c0d0cfb29d4bb30,
        0x0,
        0x4,
        0x59f85720cd880a2177e74dd6,
        0xf0c37bb30838b020311aabc1,
        0x1e0ca72015361ff8,
        0x8edd904ff297020084e9042f,
        0x637bc1fbaa015be316dd4aa9,
        0x78cfc48cf3ef8681,
        0x9827b0d1462e975d083f4d0a,
        0xcd5b1734fff3569bfa4ef3dd,
        0x1ce1872e7f2ffea7,
        0x9bd10fcaf91e3744abbe9bfd,
        0x730d07d82e88de0021d1a399,
        0x1ce43c227b7bdd23,
        0x5,
        0xf20b0751fdfa861ef398200a,
        0x4d68825a59d83ccf7ad7738b,
        0x4688ecc6b519dbe2,
        0x7b2b0a0c76a9d7e3667a049f,
        0xf4805ecaa22ac3dcb5f1b167,
        0x36269373a55bd1fe,
        0xd5f8f2255486c7ad0d88e16e,
        0x8227073f88551cd6301cc343,
        0x61b66341d3fdfb3,
        0xd28837b6db223c51c71bf3fe,
        0x40189099b30006280bbcccaf,
        0x4996cd7dfc4c4908,
        0x1,
        0x0,
        0x0,
        0x5,
        0x667ee110bc38bdd99bc76981,
        0x9fe0b435a24b0afffe16cdb7,
        0x77cac85f349a7160,
        0x5d42eb6b422374588f9a619b,
        0x85a64348fa253867aec20164,
        0x76d94d0588e8ffa2,
        0xba96af6f3d521e4207e3e228,
        0x25dcabd3e3c17c088932452d,
        0x1580fad3ac6e6d02,
        0xcca72707c98a5a7adeedac3a,
        0xefb78f515686df794dc609fd,
        0x7f439268fd8ca906,
        0x4b2ee38f1010dbe10dbadcd4,
        0x6efea893b6490e42ff418373,
        0x5f419aae4edf96d5,
        0x8,
        0x8f78447b24e034468bbc991d,
        0x904e18aa02efde4d079aee4b,
        0x697366f8588e3e22,
        0x6b5a0c9a63c31488fdaf900b,
        0xe3aa2e0ad64e9ef26c36ee56,
        0x1c7d749339d721a4,
        0x15f1fdb9f775c7e7e7c98ae1,
        0x5b4d9cd78e264b0a640e706f,
        0x569d2a98fbd61f44,
        0x78d3d87d575523f8edbaa4bd,
        0xddf75196faf7d253f3e1b45,
        0x7f8d6412043d3e6e,
        0x6329e863c28174b30332f219,
        0x4948765c5554db156e3f4e8,
        0x235e77ab496507a7,
        0xe29e1d1d00f8a93c0644f89b,
        0xb3bee84ce9d05aac9bd579a0,
        0x636a1307c2f99e99,
        0xd28837b6db223c51c71bf3fe,
        0x40189099b30006280bbcccaf,
        0x4996cd7dfc4c4908,
        0x1,
        0x0,
        0x0,
        0x96a822323760e414e6f305b1,
        0xfaef305ec709b49432af2c5d,
        0x1525e524b40155ee,
        0x0,
        0x2,
        0x502593624e87594f2296202c,
        0xa58df91a165098a759427212,
        0x1aac8f86db9f77e6,
        0x0,
        0xac44bcbfe4eb6de1afb2b347,
        0x5c0cce46f8e56875679be163,
        0x359889fd2cb06df4,
        0x0,
        0x1,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x1,
        0xb4862b21fb97d43588561712e8e5216a,
        0x4b3e865e6f4590b9a164106cf6a659e,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x62c2b89a3152e22243cf864d,
                limb1: 0xaf83913cf31609fd7b4f9a32,
                limb2: 0x6da9a48b077c3954,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xa54703c64365ab4373eae904,
                limb1: 0x87e47f46101c003371e14338,
                limb2: 0x462e50d88b5b5c17,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_2P() {
    let mut data = array![
        0x1,
        0xc914e71aaa7e1791530dd4e1,
        0xa8feb3644ad6c325d1287925,
        0x7eda4e00093fed5f,
        0x0,
        0x6cce1abfd8d5791234bdfe9a,
        0xfbb3da398a17b93c5ae0bb9f,
        0x411a047603851187,
        0x0,
        0x776498c0ca91f61125748d46,
        0xe527d9848968f6f8dc9b69a1,
        0x54af272900e297bb,
        0x0,
        0x9365fb38c1394904031a496d,
        0x763fba7bed5c8893196fb464,
        0x2f87558ff89ca03c,
        0x0,
        0x6e1cec2ac2ac763632072d5c,
        0xf56487f529497eb89fce3e5e,
        0x2cd0c5cefee9e438,
        0x0,
        0x720a6f90ebfe4fd0886ca9b8,
        0x44f957be94195d5ed04b5251,
        0xa3c14fc7d58777b,
        0x0,
        0x5,
        0x99244849a100a4174540f0ef,
        0x40c45620ec4cea88cd29573f,
        0x4fc00ef473dc175e,
        0xc43fe2455f85b81fc0822fc3,
        0xb18849bd7b02c6714bec1e5e,
        0x3f70f5e8df24a8f6,
        0x1869503f0158419673080bb9,
        0xbc61349c3374fba384122904,
        0x6e29ed1efea9e8d3,
        0x1278d8a0c174ac6ba93eb821,
        0xc580e6f4b55c1960a6c94ec4,
        0x4f28bd535e0dc919,
        0xd817a8e8c645b576648522d7,
        0xed344417efbe06128d45bf8d,
        0x6eff6e406b995630,
        0x6,
        0x6b75e8e85ac01d983c6d565e,
        0x86adee2bfb4f6a7dca09fa11,
        0x8c883df61f3773e,
        0xcb5af37e2bd4fb6eed9472f,
        0x81ac0c0f1c83d910d5bdf096,
        0x3f691f88478ba770,
        0x30c6d1246bf2424dc3603aca,
        0x89c82e2fc26f6d86003e6e16,
        0xe95e861ce44d9c3,
        0x857e5e5cde29b6bc929fa401,
        0xe27a6f0ed61ab5945998045f,
        0x180bdef7a5b6b3ce,
        0x5c4c008e9ad443094c62f282,
        0x92d6bc839baa69059f859b7c,
        0x2613ed6e30d40ed4,
        0x1,
        0x0,
        0x0,
        0x6,
        0xd1c7c8c69ab49f8f75930b13,
        0xc9d6cc929c81d6bc8b288718,
        0x50a3ce68561dd41f,
        0x151a71fabbde3206bd1270da,
        0xb82c46b0b19ac3fc3ae1fa72,
        0x36cf23c19eacafac,
        0x8fbb576b907463d74bfa16c2,
        0xef478b67f2c681c01a53dde9,
        0x6cc57887367bcf3f,
        0x3bcf933934c2949b700904a,
        0x31a6f78b459152e97465b4c,
        0x3edd9354a2b17521,
        0x22578e356050f24de25e357d,
        0x5e29043f3ae33e7d9123f33c,
        0x347d75cde37cdbf4,
        0xfca42b892faf0aefc6867b2d,
        0xe41fd19fc936083f298f9c7a,
        0x52c4de6c9406d16,
        0x9,
        0x563e03395c66a3ef44858003,
        0xc7631310af346a58f2f565bd,
        0x22fac80564fffd8b,
        0x7bc2cda524a598d1a5e6c33a,
        0x14be0aa199b025574cb99b4d,
        0x4dd8cc60f63853,
        0x1d476513ce042bdb399d8753,
        0xf3939ffc265985fda8b4027b,
        0x19ac8d856329bcc2,
        0x7685188f25eb754e9067a15d,
        0x9289009815f687bd89008dbe,
        0x48f168c79c4fbf61,
        0x1f48a10e181a3849643106e3,
        0xf39e1871271c77095346b94c,
        0x1bcc8e9b71d0a0b5,
        0x5ab54eb59d7ad64bc528e449,
        0xbfa6e051eee19970cfcbc1e7,
        0x7d84e44456777ad,
        0x922389548a9b984b8b5bbb2e,
        0x1412501c3795f36ac550babc,
        0x755a8bcb4b7072b5,
        0x5c4c008e9ad443094c62f282,
        0x92d6bc839baa69059f859b7c,
        0x2613ed6e30d40ed4,
        0x1,
        0x0,
        0x0,
        0xbafac0d6a47da8a742e63b7d,
        0x5709333aff3e80174f8d7b04,
        0x3d700f02b3dce7fb,
        0x0,
        0x1,
        0x8c8b2b49c5e551bcf21d7c40,
        0xdf50027771c8c63a363e6ee2,
        0x11d8a920021cbdd3,
        0x0,
        0x2,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0x19657783ba5660e255c21849,
        0x7ed7474bcea7551fc71e46bc,
        0x596c0a76b75f4756,
        0x0,
        0x2,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0xa90f9c3af19922ad9b8a714e61a441c,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0x2fc154703983ca8ea7e9d498c778ea6,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x78cd6990a813b6a2588ccb19,
                limb1: 0xcb57433fd1eaa5787491656f,
                limb2: 0x70e4c58e64e4a9f3,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x428873cad69986b7befbd0f0,
                limb1: 0x5dde16f78dd45ec0c5a51f9d,
                limb2: 0x67295fe953f1c748,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_3P() {
    let mut data = array![
        0x1,
        0xad5eb29cdff35353ac85be4,
        0xd9c76fe6eedd44aa382baff2,
        0x5b900a5d85049374,
        0x0,
        0x739a87e1c170fe7eb5e118ac,
        0x2e3c8b78903ae605b25858f3,
        0x382406c5d4bb72bc,
        0x0,
        0x156a6eb38a2318d731ccd4d5,
        0xa04336d6b4775a6c5505cb9,
        0x40106a70bb7c59ae,
        0x0,
        0xff9a6170bef2e5781271ffbb,
        0xb31161ee0922a8f69369bb98,
        0x365179b0763537ce,
        0x0,
        0x89537905bb8da89d87c7310c,
        0xd7c7cb642b0be94d360279ab,
        0x34d3c12f5c2aa2bc,
        0x0,
        0x75fe0b539841f026231a5f20,
        0x7ecf364d7a3b2c1c2fa28c6d,
        0xab06199450d0294,
        0x0,
        0x6,
        0x9a1406dcdc52bd84dc22a476,
        0xc7fc2747a39435fb1cf829d6,
        0x252519ce1b344e08,
        0x991436fb13fd05b1800af1ab,
        0xe76b8961307381e7b441d50f,
        0x6ed3e86ddf31bd2e,
        0x8d760a8ad7f939ef7e632c,
        0x1461004a4c527b200ff190fc,
        0x5d349d096bb239ea,
        0xd6182ee25991d25172a09479,
        0xd08020a270f228cbd942c22e,
        0x3f67d173b3256084,
        0xd2f5ba900b89021a2dad3235,
        0x71ec76dd129aefc88d1ad31e,
        0x5f7ca21247d3ad29,
        0x4ddab0973d10122676d66312,
        0xb4034ba7d903bb070642c53f,
        0x7ae7015db044631f,
        0x7,
        0x42bf38a86d00b1e963486bf7,
        0xc1bb00beee2440c946614dd0,
        0x177986d6cec6c9ea,
        0x987ae00cb7001e35cdbdb2f8,
        0xabc164dea6ca9da39598eab4,
        0x5068bede6f34e507,
        0x1249f9c94e7c358b9290fe08,
        0x84730c70e7e05ae0d65ab8e6,
        0x25a5f4b874e19928,
        0x5f35d07b10c5bbe75f4c6406,
        0xd7e550f41f71d2c18dfb2475,
        0x23edc379585b86ab,
        0x9ac00eec1187ac25c2895245,
        0x6661266cbd6abd094b3334a,
        0x70357d21423216f5,
        0xbacb6ab9c048d8ba1ac285cb,
        0x6943f1cd2226a3c7f3135c00,
        0x6b383aa8d92bd6a9,
        0x1,
        0x0,
        0x0,
        0x7,
        0x8679b9906c801425ca341d99,
        0x9446286ca00bfd9f63d8d1a1,
        0x7bc81e2fcf348279,
        0xa7254b75ce275db1dead46e2,
        0x16b811ed4a54a94da22bc3f1,
        0x56dc3f1b2e2d1a96,
        0x217efc82337d600416aad8ce,
        0xbdb42eb0bdeff5aef9c3112b,
        0x2a82a4d2bba2be1b,
        0xa481e51690dfd513c69f41ec,
        0x14e6e27116bb765ad9f4640f,
        0x76e075185711717c,
        0xfd798a91997d6abf35f73f0c,
        0xd76f9adac3feafb53bfe653f,
        0xb5686bb48fe2bbf,
        0x88b586da9a400203a294ea35,
        0x9ca1acc4ad1a66b98b87456c,
        0x5bc490efe82aae94,
        0xa9826fd88b01c8cdf8ff1374,
        0x7d6f40e38055ddf2677c3ea3,
        0xafaf5090eae0f45,
        0xa,
        0x382dba27cdcffb527531eae2,
        0x537f80549255f8a42562f620,
        0x23a2e9f2bfe57098,
        0x739a3319975b2ec940bbbb4a,
        0xb56d880f9d91e9a0b404c2ab,
        0x3055d1e5c32a773a,
        0xa053c1e7fefb4388f2605efe,
        0xa149f3df879a0561a0cd9007,
        0x319c2df9a747cc4b,
        0x8c64ce98a2f5621d38e85f6b,
        0xfafa63dc8acd00a248d0d3fa,
        0x1e47669fa5e86e09,
        0x76ee3d5d2df07b9eadaeff54,
        0x27a9e27a65a09e249589b98f,
        0x1b15d6c22020812b,
        0xec4f9dceb6fafba0e6b45e7b,
        0xe8ba0d820e5539069cc08155,
        0x5786f89b91891a5d,
        0x6ea1c2609c00caa0e5eca501,
        0x459ab9f182889f0832695fd9,
        0x3bb8bf11016b7731,
        0xa76539e3bdf98db4bb456985,
        0x37fdf3742d51e9a7006be9a7,
        0x4d8429f4e7ebd5db,
        0xbacb6ab9c048d8ba1ac285cb,
        0x6943f1cd2226a3c7f3135c00,
        0x6b383aa8d92bd6a9,
        0x1,
        0x0,
        0x0,
        0x70218671c142b81698c5d54f,
        0x9bf7c4c69a5d8fe5bb4fd1cb,
        0x2fc49c885e96ffd2,
        0x0,
        0x0,
        0x3,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0x19657783ba5660e255c21849,
        0x7ed7474bcea7551fc71e46bc,
        0x596c0a76b75f4756,
        0x0,
        0xa6832ef7fe97f77de7cd9a62,
        0xf18a70dbf1dc5a76c685da4a,
        0x6ac1b7bfc409119f,
        0x0,
        0x7751161b1a9ef600b865a5af,
        0xed28aad4835a39a9e8318ceb,
        0x572e95c429f0e07a,
        0x0,
        0x3,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0x2fc154703983ca8ea7e9d498c778ea6,
        0x101fbcccded733e8b421eaeb534097ca,
        0x71832c59148624feac1c14f30e9c5cc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x2eb3db872ae22448b0163c1cd9d2b7d,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x9292b7770106624b91a73738,
                limb1: 0x2c9a7c1a0496485effe3922e,
                limb2: 0x7cc025fefaaec43f,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x44e571d5378b2d6e5b1d7114,
                limb1: 0x5d34cb1a17260d862ef07e73,
                limb2: 0x3d6ee7ee0c8df451,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_4P() {
    let mut data = array![
        0x1,
        0xb508219ad33e57b735144a92,
        0x424a372a8c25fe54507ef31,
        0x5a5ebc30cac52de6,
        0x0,
        0xce3478f3e28488c38417b91,
        0x507f04f833e93555e91863ef,
        0x7c9132816a9b006,
        0x0,
        0x75c05afc1c559f694e848928,
        0xd3c32e4d45e9ddc88305fee4,
        0x5e0e420206ed2ae1,
        0x0,
        0xb84b5f20c7d127e3de935043,
        0x553ba5d028a3567920c0f971,
        0x329bc50aca4fd96e,
        0x0,
        0x140a01b2de0f4cda3b9af7e4,
        0x773b3cfc367be9f085eb99e9,
        0x3932c84c5850fc83,
        0x0,
        0x998b8d0795cf666aa9dc1034,
        0x116c3372ab163da3fd9aa2a3,
        0x25cd618104f2b420,
        0x0,
        0x7,
        0x7e62d4f2a56602e47372a86e,
        0x7e597dd57c4a52ef5cd2d4a9,
        0x4fe1bd9bae20d352,
        0xeaca267a07518abfd41e1265,
        0xb0503f2dc6abea424f057c91,
        0x5e76cb43faa77ffd,
        0xc6494dc693a27d81f7305989,
        0xee68953ec90e989962207152,
        0x9b1d02ccd192401,
        0xe0e0ce825b4a8fadd4ecbc4e,
        0x4b6c37b2a47ccb5340a61ad5,
        0x45df9125c5ae7cf2,
        0xf3c5e494bce91e83e77ef048,
        0x366e84cbfd5fd672616b02e5,
        0x3d7d2322c193e3ff,
        0x4bf6bb3e172d63c9a735eb79,
        0x1d096a8ca1a7de4a31ef6463,
        0x507ead2f51c44657,
        0xf4566b39b11cee7a608b961f,
        0xf2f9895c8df50628a177df0c,
        0xcf93c95879ed9bb,
        0x8,
        0x422656d64b29b1b6179f45d8,
        0x905a7778fb4155a79feeb8ce,
        0x30577d783513efc0,
        0x330d46ed3259a4eb06057e2d,
        0xbaee10b62776c98fd19d7508,
        0x193e4ce59bc7258b,
        0x39dc3ca0c4af2f3cdac36fb6,
        0xc665ba7e2b26481c2bb9de50,
        0x6c4f5a8b83790ee1,
        0x877222c59faace37b98ca355,
        0x8d3dcc1f6c5e4e4563159b1e,
        0x2bcec93ebe712139,
        0xe42e8037813ed3e9355e9c78,
        0xa7af6a6d31b63f3f4ae0838d,
        0x7c2d916179337bb6,
        0xb193ff6c39686614cd3c3901,
        0x223492427002232f581ed48,
        0x6a52b736d5e1772d,
        0xc71aee56a9398a011b738a7f,
        0x27e44ee9c1432e157c749805,
        0x964414e2325bf0a,
        0x1,
        0x0,
        0x0,
        0x8,
        0x9408fc3c8eeffd9702efb96,
        0xcd900e962a40e901c5d32e1b,
        0x69682c63f131db9d,
        0x15e2f9e6b6d3b95dae09fa5c,
        0x1c5134e8319e80ef26192f4c,
        0x103946ec3db31f08,
        0x537ffcb868a318c08da2ea8,
        0x28403b62ccabd74ef4724d08,
        0x7281d60dbab0a681,
        0xbd4e4b8dd11e156be29bdcc9,
        0xc0683c402a5d03ecb78ce88e,
        0x2adc702e35b32103,
        0x662b95e6ead66a2268a65a05,
        0x89f0093dd4f586ec9ece909a,
        0x61c6aaba5a62fc7c,
        0x15f1b7832ae1f2db56de8d9d,
        0x8e9625dcccbe00fecd7a0eb7,
        0x2e4f3bcb6f07fbd,
        0x3022abcdd7e9ddd10feb70b6,
        0xc8c3cedfc01c87ec4e0da584,
        0x12dd95ef20f4d7c0,
        0x8a3a647f4b6e223f519eb419,
        0xd2a6e7a38badbee18a623f9a,
        0x2668b66553b80f8f,
        0xb,
        0xd8cdad72a6eb2cc09e3945a6,
        0x424b8e853a73a8e35a99d80d,
        0x78a88c3b10b67e18,
        0xae359c0464185fb818a000a1,
        0x785ae7c374990e8166fd2bb7,
        0x4607c0bfd6118643,
        0x5c95f43be47a80ea5a01b096,
        0x9ddf538e07c29a61576d97cd,
        0x2b201745b4072ea,
        0x96da422a4cad508dd56a8479,
        0xfc5080764232a3401cb7d456,
        0x63df9227ee1fb1b5,
        0x9860a667d946e815d8875613,
        0xcbf9880aa8fe0505b358c7ec,
        0xf90532b8a904b26,
        0x2bba8a74db47614b77c6d74d,
        0xb1f137cac6bfc3bb6799cbd0,
        0x2bbcd209596239e,
        0x73295b12da5fd5d8be9ef626,
        0xb9ae9f683fb3c472f63489b2,
        0x44d0430e348beb88,
        0x12e3cf71572285178ad2ec22,
        0x5f2465ed488550decad1580b,
        0x5ace228673a1e683,
        0xbe392a63e5da47a3c5f85041,
        0x33bb2a31887b6009613aa3a5,
        0x47a1640a7b9b3613,
        0xc71aee56a9398a011b738a7f,
        0x27e44ee9c1432e157c749805,
        0x964414e2325bf0a,
        0x1,
        0x0,
        0x0,
        0xcf0d2b5ae507ac743634fa3e,
        0xb52dfba839ca4582ee4e1f82,
        0x3203a58592dad317,
        0x0,
        0x0,
        0x4,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0x19657783ba5660e255c21849,
        0x7ed7474bcea7551fc71e46bc,
        0x596c0a76b75f4756,
        0x0,
        0xa6832ef7fe97f77de7cd9a62,
        0xf18a70dbf1dc5a76c685da4a,
        0x6ac1b7bfc409119f,
        0x0,
        0x7751161b1a9ef600b865a5af,
        0xed28aad4835a39a9e8318ceb,
        0x572e95c429f0e07a,
        0x0,
        0x5e71d0fc5d1c016834779173,
        0xadd002dfc0ebf1b25c23c252,
        0x40a868d928ae5233,
        0x0,
        0x423fa293418d6e3f59c2e830,
        0x7a4bcf26f93e71ffd903e68e,
        0x7837b851ad8da6e3,
        0x0,
        0x4,
        0x101fbcccded733e8b421eaeb534097ca,
        0x71832c59148624feac1c14f30e9c5cc,
        0x247a8333f7b0b7d2cda8056c3d15eef7,
        0x2eb3db872ae22448b0163c1cd9d2b7d,
        0xe005b86051ef1922fe43c49e149818d1,
        0xfa83cc0eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0xaa5e4678c25166a1ff39849b4e1357d,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x54e30b1dbc54acd91542088c,
                limb1: 0x702b532dab377f0636d9f465,
                limb2: 0x25ee2efd1d7ca3f6,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xd25f547d7c2f7258cbdb9c6b,
                limb1: 0xcae4d4cae9a1aba26935de1e,
                limb2: 0x277ff10c5815321e,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_10P() {
    let mut data = array![
        0x1,
        0x57b9fb09f08ca8de94739f27,
        0x67c196766a4282e6bdcac478,
        0x145170c955ca1771,
        0x0,
        0x2aa1a10e328c53a9ede3c9b5,
        0xb3e761d5becd32123c4536c2,
        0x56cc821fc8814a5f,
        0x0,
        0x4f491b952a47229bf7d72c1f,
        0xfb08a88bd261a5852e4bdfdf,
        0x3dcfcb49313d7c4a,
        0x0,
        0x890800bd7dab91154f1ad43b,
        0xa5a90b33ac2ad146e84ed038,
        0xa1c549eae5c064c,
        0x0,
        0xf087f62844a3740bbc389e61,
        0xcc4e82c674e17ccc5c46bcdd,
        0x6c29899b9b40f79a,
        0x0,
        0x85c3315cb5ab686eeffe41f8,
        0x6750b9f6090037683db6813d,
        0x313355608cd56ff4,
        0x0,
        0xd,
        0xebaca1c9020447892f1b2ba9,
        0x25bebc98734f728d4aa2e5d5,
        0xa0ec6726548d828,
        0xfd36ea571f6058e9f29aa829,
        0x5606dd1603003ec9a6640f12,
        0x376ac4adea343ad3,
        0xad6f1c228dd4b19e93505ffe,
        0x39c85c2baba166475d95b81e,
        0x467cc987819bb4ae,
        0x4615dc0adbd471208808fe13,
        0xfcfefd6aaa0b93754ece68ec,
        0x7430734b23160e45,
        0x47b2bea95c848458eb5c69b9,
        0xe3bc21c166e22f7bcfa4b29b,
        0x4356c2b31a9d3a92,
        0x293a7ccb245874c1d01c37ed,
        0x8b5b2fa9f8e63aa7e8e1382e,
        0x1f7d412a8c6ef056,
        0xea019b8017791a91176802b8,
        0xfe17c4aa8329b6bfc1412fb0,
        0x48b603ea1d205f19,
        0x1a707eb6c6255cb8cdb8f719,
        0x6356ce77b47e5d9890283455,
        0x3cfa339855820aef,
        0x48decd2031cc3530db38a07a,
        0x85552a1917ad0decc6be5f8c,
        0x3acab191c5f2a7ac,
        0x4880cd89cd356eb564e145,
        0x47134f527bc1f146753585df,
        0x644379dbf0ea340a,
        0xde88327ba1e1b26ecd5b9564,
        0x2b44055b5f6bf07c74f2cb86,
        0x6544a0f0b7196157,
        0x9264671c104414f9fb899b25,
        0xe13a73e0eda166e95284f5e5,
        0x1f8cc6cddda3e2f,
        0xd6936fbee590d562195f64e2,
        0x5c4e0f3a45a9aad6bca1023c,
        0x1577fb3b582379a9,
        0xe,
        0x8a5fd74c65444f3dddfb3ed1,
        0xdc73b3fd5df53c558d7d312f,
        0x6325980586857bf4,
        0x4d861a76e51b78a8542d4926,
        0x3d018f70a1bf9f86c3249224,
        0x42d1672fd172ab8b,
        0xf19aaeff2fbb4a2164a9164c,
        0xf59a6b41a8349ba12a736bbf,
        0x18728eeac1f16c95,
        0x55ca11349b1c695fcb5209f3,
        0xa117e11509c881ea93e12671,
        0x3e5962bf3afbe0bd,
        0x865d5b6ee860e3cff3d5e9ad,
        0x3a1067a61cb4432ad97119d2,
        0x54f931aa0884345b,
        0x4bdba3637e6ede56d19685d0,
        0x47c117e6ed0a21929af246d6,
        0x735ec5d79ce05a8a,
        0x5977fa669647d0026de97714,
        0xea50e41170fd8a4191d77fb8,
        0x1a4fe55b99cc7032,
        0xb49dc58a41551e301b155b1b,
        0x675d741fa3bdff1377c223d6,
        0x9e4041f8a810b01,
        0x43db66d5c7318a3e06ad5417,
        0x5fc1d5a1cafbb64d13a5b95b,
        0x57876536b46d1643,
        0x4af2404e5a7070322e91b6da,
        0xa1c8ce7d089cf1d1c5dd027b,
        0x373fc6282f8360d4,
        0xa491c288affd15ab36efad33,
        0x34258ed46af6298160659f1f,
        0x11d4aa54a13fa6af,
        0xa3e04059a5e68129add7e913,
        0x170fe124f593efca63d02152,
        0x318e0675c0861016,
        0x8542ff686cde4379f2188714,
        0xe4e5869192cad99d0c4612af,
        0x194a6b32db1b02d2,
        0x1,
        0x0,
        0x0,
        0xe,
        0x54c8bcf5afc497248c752f92,
        0x4e2e9c9d48e5b4933a6c4ff1,
        0x2efd00834666f430,
        0xcecd7eb995d6661d90e2319f,
        0xb1404155a92cd4b38197f542,
        0x2ffcabc304f5c612,
        0x1ea61d4bbff3b2ebb2bd9e90,
        0x6f9311f127567be0155ea4ac,
        0x885238822d41843,
        0x45e4830f1c615bcb00c2fe2e,
        0x24af72f9b9cde65c05928270,
        0x3e6c9fb0fc6bae1f,
        0x6e70aeb905f8fcead79aa7a7,
        0x3dedac50cd1932eae1a9b35a,
        0x20fcf50395071e21,
        0x679fcbe5a6dec20f0594ef42,
        0xcc0828c08257f1de81ebc40e,
        0x604fc3a5bd626656,
        0xed9aaaa2326742275dd6cdc,
        0x60a07a98fca52345043f16bb,
        0x8bc793de507da1c,
        0x54dfdc2b2db8c9347489e1c9,
        0xb772f40b8358612a21a11543,
        0x44d3becae821997b,
        0x96180a0d87cf4892064c4f10,
        0x410798179202faede68dd83a,
        0x5f033c576cc02312,
        0xed4a713bb21d1e1c62566e88,
        0xd2ce4693a43aa1372df4b576,
        0x431f704b4b85e24b,
        0x979e32b5aeca4cd65a879fa5,
        0x7fec0e099b8a0affaf22ce4f,
        0x14b1b59764735aa8,
        0x8a42ea5c4dbe4e022ea401ef,
        0x1070e37071252313c1535baa,
        0x7badde8ef70fc7ce,
        0xe03abccd400f1bd06a96284b,
        0x3fe9b123f1f30d095b9a6cf3,
        0x7afd5d14e2a2d3f6,
        0x3521ee80df0979de500bda7e,
        0x4849abe2de85ce5219f6ee95,
        0x5e7facc43d9307cf,
        0x11,
        0xcd24a3e6e35659d5fb34ff23,
        0xb27e87a59a624e480fe64d03,
        0x42e492692001d4d4,
        0xecfad2a38ee5233fc065ef4c,
        0xb91086e00c6075eab90ffb0c,
        0x37cc8f1a3c7e3532,
        0x7539bcdfe160a866a342657,
        0x18e2b5ae7ab4213c4f8bfc53,
        0x710a0deae5807733,
        0x23b7b8ad437040014af562d4,
        0x6e78d287c07697f5dde61c46,
        0x72789cad540aa66b,
        0x2966b3d5c089a9b04f2ac475,
        0xfe0f50a8f435264d2bcaba9,
        0x4ce51b00872c950a,
        0x824866daf015bf223d6d94c0,
        0xe34172c41bbd4ec6bd8baf6f,
        0x7792b44eb5b86dbd,
        0xfb5146137b1cca17d42dc2db,
        0xecdd82e12eebb2495c521993,
        0x7fe4be0fb0d89642,
        0x72ee975eb4ce302b1691d752,
        0x80694c9b66f3a5403248b211,
        0x98cf58b139f5a8f,
        0xfe75fda5379f006c9204468f,
        0x23226252c292c4d9f99eb2ba,
        0x5f09388c66968a7a,
        0x3c80c8e8faa1d6547b84c69b,
        0x2aff54e5d11f6d616146153f,
        0x24b26ca24a061497,
        0xed622d2705d870f0ba976e99,
        0xbf75ca2366b62c4166b84e77,
        0x1f5c800794944f6b,
        0x9399cb5780bc45e713877330,
        0xe1d43d2ae1d8f8419bedb520,
        0x531f69b95162f458,
        0xe23bcf3a15c41dd3c68d523e,
        0xc6947e1ee9fbfefb9b23c55d,
        0x2934ef0bee3f6eae,
        0xa71c0ea6963253fa112307e0,
        0xcd6bc4b809f59534273564cf,
        0x59aa62b2e73e04d8,
        0xb0856b51525862b8a6940053,
        0x48a7c232570f2da0cf88d7af,
        0xedcb349663fcefc,
        0x8542ff686cde4379f2188714,
        0xe4e5869192cad99d0c4612af,
        0x194a6b32db1b02d2,
        0x1,
        0x0,
        0x0,
        0x58c6b6062d7722b71d3aae48,
        0xa818895bbcd111bae00b4fb9,
        0x39e2fcd071e81988,
        0x0,
        0x1,
        0x165d1e347c166460d7746200,
        0xb8f9b2a329c6cc1307df3cc2,
        0x146db09ec64d2c37,
        0x0,
        0xa,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0x19657783ba5660e255c21849,
        0x7ed7474bcea7551fc71e46bc,
        0x596c0a76b75f4756,
        0x0,
        0xa6832ef7fe97f77de7cd9a62,
        0xf18a70dbf1dc5a76c685da4a,
        0x6ac1b7bfc409119f,
        0x0,
        0x7751161b1a9ef600b865a5af,
        0xed28aad4835a39a9e8318ceb,
        0x572e95c429f0e07a,
        0x0,
        0x5e71d0fc5d1c016834779173,
        0xadd002dfc0ebf1b25c23c252,
        0x40a868d928ae5233,
        0x0,
        0x423fa293418d6e3f59c2e830,
        0x7a4bcf26f93e71ffd903e68e,
        0x7837b851ad8da6e3,
        0x0,
        0x5907087f8e8e4dacdd039371,
        0xc390e2073b4e64b9ede0570d,
        0x6b039a85962f1594,
        0x0,
        0xc45eefa03155b8f7eb780b42,
        0x3db57eb22f9b0394a4d7b78e,
        0x6cf45b6d90883f60,
        0x0,
        0x60dd8ed0a614b596fb37eb1f,
        0xabb99f371be41e26ec2d8e4b,
        0x187ecd72c40f159d,
        0x0,
        0x7b66c9263de5e1663622985d,
        0x118b032cc27a1d6dd192eca6,
        0x312fb405788616e8,
        0x0,
        0xf4ac3e1f1f068dd64c86fdda,
        0x24594e591d82a7f964b5ec9f,
        0x6ca311b5421c57fc,
        0x0,
        0x42745cd7b146012455434d0f,
        0x6aa4f552b7bdc93a613bd9df,
        0x5832a065d7199c7a,
        0x0,
        0x341786b7854e3e0104e2e416,
        0xbb368441c295043bee7b1d2f,
        0x35c88542e11463b4,
        0x0,
        0x3c36e7fcc4e2fde28308132,
        0xf58043d0e3d1a36d1f8137fc,
        0x58c1508fbe8868a8,
        0x0,
        0x560a37951d69a6c8d7138239,
        0x462d454a509846714184ef71,
        0x3aaf8fb4f60e3e9c,
        0x0,
        0xb70cea4e13db5322899753f9,
        0x6c62656b6d7ffb5c2af44fd5,
        0x4b5ae4567dc6a7c0,
        0x0,
        0xb06cccb4b425d5179f528270,
        0xce017c281a3861570706cd86,
        0x42d14846dc4860ab,
        0x0,
        0x646bf486f6e77663c597ece8,
        0xd87c8c36a430a6fe42305b88,
        0x7964c7742b6f13da,
        0x0,
        0xa,
        0x2648ee38e07405eb215663abc1f254b8,
        0x29164ebd7ab792809e469e6ec62b2c8,
        0x85940927468ff53d864a7a50b48d73f1,
        0x6e2edd0d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x8ce86e89466e4726b5f5241f323ca74,
        0x30bcab0ed857010255d44936a1515607,
        0x8ac57cfbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0xda2ddc3552116dd2ba4b180cb69ca38,
        0xc87a746319c16a0d0febd845d0dfae43,
        0x7003168b29a8b06daf66c5f2577bffa,
        0x176ea1b164264cd51ea45cd69371a71f,
        0x3b6a666fb0323a1d576d4155ec17dbe,
        0x9edfa3da6cf55b158b53031d05d51433,
        0x23d79a9428a1c22d5fdb76a19fbeb1d,
        0x4d125e7fa59cec98126cbc8f38884479,
        0x1f40f472e2950656fa231e959acdd98,
        0x98b33c6e0a14b90a7795e98680ee526e,
        0xc8555a9fcfcfa81b306d70019d5f970,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x9dd56ed7fdf1e5a3e9cbb3b5,
                limb1: 0xd0df8ca018c550bbd230f67,
                limb2: 0x75b3c38a01fed369,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xa1bb56d8c1b7c9598a692c1c,
                limb1: 0xc940b96f597931f22e3c4b07,
                limb2: 0x41ca6082f12494f3,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_11P() {
    let mut data = array![
        0x1,
        0xdc20fe08c1078ecccaeff7a4,
        0xaec7f08ee387381aef0d1a64,
        0x1a20072df14e213e,
        0x0,
        0xdbdc6a57aaa5fd1b5f318c61,
        0x917c64e627c02af859b93da9,
        0x6165f618703677d0,
        0x0,
        0x477c85aad05d310093472fec,
        0x67ef6580facd32b86dfc0894,
        0x38cf98777c4e2884,
        0x0,
        0x99941366c7ed057c9eee24bb,
        0x3fd490f1b53c20f1953b5da,
        0x2aacaaa56097363b,
        0x0,
        0x7aff72c740fe2491362eb4df,
        0xa1dba202c3ac6d1b8e096827,
        0x63254648fdf325f,
        0x0,
        0xb04223075465c1cb55f29173,
        0xa661ce1bf70f13c2e60b7016,
        0x1d9660946fd1fbe,
        0x0,
        0xe,
        0x7bce3bcde4135ff79fb4efeb,
        0x3ae68aea5568b4435dc97843,
        0x4905e40bc2df0bb6,
        0xb61b6a6aa84a190d21bb8147,
        0x3406f2ed2f53b20db74ff9b3,
        0x613fe2f025c86af8,
        0xcfdeb4584b1a5716c8057f7f,
        0x5bb258993fbe159fe95126ed,
        0x2b8dd41f82380d11,
        0xdacc01947fa5e6f9eabac328,
        0x2f8cc2878857244d7db26d74,
        0x7333f36023de0930,
        0x91ccb7b7229b640a72f9bc3d,
        0xccff9ce1c97ee1dd22eb9f34,
        0x629cf062847de627,
        0x45518873617903c3a65b2e43,
        0xbf3509b3348f0b95a673c9f,
        0x3ca570a6bf417721,
        0x26adfc021a03d939199954fd,
        0x9b1cbf329dda2d9c67157b25,
        0x60bd451205fdaf06,
        0xffc015742dadb04ea33a0046,
        0x952c91a4f86128432a796a7e,
        0x7693db84f645e0d0,
        0x64a60a1787e3caf461a1727c,
        0x3af9c3641df2b6991862aacf,
        0x2b7f0d39ed558c11,
        0x970f31f253ae3af76fbee33,
        0x3e67192c40ea2d2f04681c81,
        0xf0d6ba0fdf3e87c,
        0x8d07d11bc83f6fc8195fb036,
        0x646bd3dd322ca614067526b3,
        0x1b34005d0c2a5758,
        0x878c2b8721b654843bcbd168,
        0x5a02892ad5706805a474e978,
        0x2fe32e6e02061f96,
        0xfa2666a66cde6dd415cc3c9b,
        0xd1a03e07c39fa21a3846eb38,
        0x231d93e53b99324b,
        0xa2a80e1fa885ec59361ebf,
        0xf770ba96dfdf5b1b6105684a,
        0x7950a834605f4e0d,
        0xf,
        0xc1517db2f5a9b7686251994,
        0xc638d66a28cd32175cb1f777,
        0x4ba0b68638e39a33,
        0x25f24be4457b33924d5084c1,
        0x5e06a872c75ee4c7419889a4,
        0x59d5108750398b24,
        0x41b79b01d4d758ce4b601598,
        0x143d4ba64b1c13ce6aae1381,
        0x346f875440d7688e,
        0x6d986b85c149fd8149822ac1,
        0xd7bdf8dd204e5e789bccd388,
        0x721c3179f4056491,
        0xc1bc69c0b563106839fbcf0a,
        0x1ed332b00c1757f28ee63a0a,
        0x4ec7f92a9c649b1d,
        0xb9bc6288f35df1585180fdda,
        0xff431db32b56e9ddad47c891,
        0x4184098fab2ad7b8,
        0xe6716d03aa420841a8e6ace7,
        0x427279d1127bd804397037c7,
        0x1af05cc5ea1f8849,
        0xf0ea2b795e63133ffff41646,
        0xd8f0db0577d40460c0fdf91a,
        0x71dc49d964d44745,
        0x587ebffdcd6c2d968d263f74,
        0xa20d165b93f0c666df57d29f,
        0x25b5e25f7cfe7429,
        0x7d1a201ddf81c50c8f141740,
        0xe354f16bf8186538dd881bca,
        0x471bb5dddf15e918,
        0x5123a073abd6e1d2c02b5ba,
        0xd7d630318fd7ee983c18d2fd,
        0x191abfe2979315b1,
        0x557c2e935460cc119ffac087,
        0xbcd75e6f180bc01efd91648a,
        0x4317504a6105b2f5,
        0x44f049c5bb6fffd2be0c2c25,
        0x541f1ea7bb72532fae098ac7,
        0x3cf5176f7a58198b,
        0x2b6c8e1380ccd57e70a3b3da,
        0x4855f342eb0c84dabfcc0b93,
        0x6d6c74a41702f1b0,
        0x1,
        0x0,
        0x0,
        0xf,
        0xfcc179a6c8be06537b72bc24,
        0x8673743a8190d3473d8497c2,
        0x167e4a5a7dcfe6ae,
        0x9e5fb8ed7520201037fadfb6,
        0x8c34f6c6e9265216ebdb9bdb,
        0x6afa71c830224378,
        0x3b664c34de953fd8518874ae,
        0x847fa018562afac8aa7d44e,
        0x761e4325fac30f42,
        0x2f8fca22f2d9584407f0c69c,
        0x7d222d5db5a6113cdc0e1eb8,
        0x7899530f76a913d4,
        0x43163de1aabd4eb3178a6c54,
        0x146c6c594f950dd462555166,
        0x22d925be41f660f6,
        0xffd6a2fa6bae6f943e700f35,
        0xde7ee7aabfbc96af9878f3e6,
        0x2f8619d801388c07,
        0xed30eddc8b48cb8599105615,
        0x8a439b2905076cf3f5e345f5,
        0x5c130c9992142971,
        0x19273235f91d1e096d774cd,
        0x72109a66681388dbb7464543,
        0x7a1482374a355a31,
        0x4cde41a441f8c306d4c14709,
        0x82e8ff325f7ca603b82564e0,
        0xc3b75b0378d6fcb,
        0xd97b2c8843ef29ac6eca8a2f,
        0x323985564d0cde61e93912cf,
        0x4d84e7ebd9711a35,
        0x442413ebd173b89ee789968c,
        0xfc5b84405ea554e5ef4e3b42,
        0x4c6736dfbb39af7f,
        0x23dafba36ea960e623e0f0c9,
        0xb2ea852b59df814e6ec08ee1,
        0x25cea3b94e059073,
        0x5cf93c74ddb203721b93518a,
        0xfe524be52215bae5ed433351,
        0x571918d2a8107c76,
        0x100302f5510867ac479bee27,
        0x2de162ff6e0c2e850de30361,
        0x150e2cc40717f404,
        0x5b7f90e7f3e0e2a65deeb037,
        0x1993ee857a435dab43ea0ad4,
        0x5a5a965349e1417e,
        0x12,
        0x9be3d4c8b8cc9f1e42167645,
        0xfaa1a691ff545039f8608d88,
        0x3323e8ad78350b83,
        0x51699ad0f3a65625a634788a,
        0xc45f3a12be0b763c411baed,
        0x3af9abe4c1b3da6a,
        0x3b22791b45caa9abb57ad724,
        0x3952696548b7ae21abd27ccc,
        0x3bcf1a2d9c156db6,
        0x9747bb5ae8595ddbefb392ef,
        0x61834459398693868e0762f9,
        0x270d7839096c16fa,
        0x28c05e67d885119228e8d589,
        0x7a97f9c3f523a2621315e893,
        0x1cf4c305d61db137,
        0xdf31a7ac92734936bee79090,
        0x3aef7473765a71607a2aa132,
        0x484e2edb94c49744,
        0xc7260507c4812c3a5d81551a,
        0x6bb3703baa0bcc8bd903ae6f,
        0x4aa1edc0a04ae1c9,
        0x4e6f649fd57c910eed6ea85a,
        0x5b78313b2e58c1332220cac5,
        0x103bb0e764d22ccb,
        0xf0ef6ccd58051166a0e0278e,
        0x1699631e2c9f8bd863e8cb32,
        0x26302658970bdbef,
        0xa1b0b90952c52c962ecd8308,
        0x594e1ac9fc483fed062ea1bd,
        0x2f8a4e4dfc5fdd7f,
        0x66ebc89b7beef42686481985,
        0x2fc7ffd515460996f6c05284,
        0x5234eab0707038da,
        0x2c2e0d951e74449c0ca7f49f,
        0xfd47a87f621efed84aca3283,
        0x341d46380ecd100e,
        0xc88264095cad871a205c7f04,
        0xb925619436d50b5512a1b6d2,
        0x3cc348a55b715256,
        0x5e16fe427479a97414fd172c,
        0xcf36922e3bc12d9c77521ccd,
        0x401109d17feaf91d,
        0x52f20f13004178902cc5ca1,
        0xe5484ec9da050dbfd8ee72bf,
        0x2a91fffc27ebc2a5,
        0x519574bd67e1e161b6c84365,
        0x85b6ffb51ced910619c24124,
        0x1a43c4432011d871,
        0x2b6c8e1380ccd57e70a3b3da,
        0x4855f342eb0c84dabfcc0b93,
        0x6d6c74a41702f1b0,
        0x1,
        0x0,
        0x0,
        0x831ed5a87534c5aff4963c5,
        0x54d0e2511856bd4ae123370f,
        0x3935f21fd6f73e5b,
        0x0,
        0x1,
        0x83007ffbce2aec0e5003fae,
        0x38cefbf40a6ae8860d16f7f3,
        0x14add14d5f8ae9d1,
        0x0,
        0xb,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0x19657783ba5660e255c21849,
        0x7ed7474bcea7551fc71e46bc,
        0x596c0a76b75f4756,
        0x0,
        0xa6832ef7fe97f77de7cd9a62,
        0xf18a70dbf1dc5a76c685da4a,
        0x6ac1b7bfc409119f,
        0x0,
        0x7751161b1a9ef600b865a5af,
        0xed28aad4835a39a9e8318ceb,
        0x572e95c429f0e07a,
        0x0,
        0x5e71d0fc5d1c016834779173,
        0xadd002dfc0ebf1b25c23c252,
        0x40a868d928ae5233,
        0x0,
        0x423fa293418d6e3f59c2e830,
        0x7a4bcf26f93e71ffd903e68e,
        0x7837b851ad8da6e3,
        0x0,
        0x5907087f8e8e4dacdd039371,
        0xc390e2073b4e64b9ede0570d,
        0x6b039a85962f1594,
        0x0,
        0xc45eefa03155b8f7eb780b42,
        0x3db57eb22f9b0394a4d7b78e,
        0x6cf45b6d90883f60,
        0x0,
        0x60dd8ed0a614b596fb37eb1f,
        0xabb99f371be41e26ec2d8e4b,
        0x187ecd72c40f159d,
        0x0,
        0x7b66c9263de5e1663622985d,
        0x118b032cc27a1d6dd192eca6,
        0x312fb405788616e8,
        0x0,
        0xf4ac3e1f1f068dd64c86fdda,
        0x24594e591d82a7f964b5ec9f,
        0x6ca311b5421c57fc,
        0x0,
        0x42745cd7b146012455434d0f,
        0x6aa4f552b7bdc93a613bd9df,
        0x5832a065d7199c7a,
        0x0,
        0x341786b7854e3e0104e2e416,
        0xbb368441c295043bee7b1d2f,
        0x35c88542e11463b4,
        0x0,
        0x3c36e7fcc4e2fde28308132,
        0xf58043d0e3d1a36d1f8137fc,
        0x58c1508fbe8868a8,
        0x0,
        0x560a37951d69a6c8d7138239,
        0x462d454a509846714184ef71,
        0x3aaf8fb4f60e3e9c,
        0x0,
        0xb70cea4e13db5322899753f9,
        0x6c62656b6d7ffb5c2af44fd5,
        0x4b5ae4567dc6a7c0,
        0x0,
        0xb06cccb4b425d5179f528270,
        0xce017c281a3861570706cd86,
        0x42d14846dc4860ab,
        0x0,
        0x646bf486f6e77663c597ece8,
        0xd87c8c36a430a6fe42305b88,
        0x7964c7742b6f13da,
        0x0,
        0x52c487a17925c92335926072,
        0x13155d04b743220ba9c4dd31,
        0x1106c832e8e52057,
        0x0,
        0xbc69df5aa9a21ba08f160d5f,
        0xc207c95ac5d454f546b05fc3,
        0x574515b32b35f440,
        0x0,
        0xb,
        0x85940927468ff53d864a7a50b48d73f1,
        0x6e2edd0d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x8ce86e89466e4726b5f5241f323ca74,
        0x30bcab0ed857010255d44936a1515607,
        0x8ac57cfbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0xda2ddc3552116dd2ba4b180cb69ca38,
        0xc87a746319c16a0d0febd845d0dfae43,
        0x7003168b29a8b06daf66c5f2577bffa,
        0x176ea1b164264cd51ea45cd69371a71f,
        0x3b6a666fb0323a1d576d4155ec17dbe,
        0x9edfa3da6cf55b158b53031d05d51433,
        0x23d79a9428a1c22d5fdb76a19fbeb1d,
        0x4d125e7fa59cec98126cbc8f38884479,
        0x1f40f472e2950656fa231e959acdd98,
        0x98b33c6e0a14b90a7795e98680ee526e,
        0xc8555a9fcfcfa81b306d70019d5f970,
        0xebe2136898c752051e01a934402d0baf,
        0x6c2a492cc0f859aa6524ab713b7e05,
        0x637e0edc5b6e4ae7a62081434fbaecc0,
        0x4e8c1e4403d1f83a859890cd670f668,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x1518e158cd20a0734c8395d6,
                limb1: 0x9e542f72e122bba6f1c46e7,
                limb2: 0x74cb223a70d329c9,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x779bfa346b625483d1999346,
                limb1: 0xf6901ab1d5d3d000b7fb3634,
                limb2: 0x6898c5fa74d3665a,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_12P() {
    let mut data = array![
        0x1,
        0x34fafb398caeb101db7a0972,
        0xe45861e3c0e9475133b99857,
        0x1dfe2d806f7870ef,
        0x0,
        0x4f016d2f64b402fc0016a2c7,
        0x47bfdf46af9e1417434a9154,
        0x6ef77119e9cf04a4,
        0x0,
        0x85726b5f64c87a1359219509,
        0x2c833428db70472e51e0f6,
        0x19744b6afc3ae8ce,
        0x0,
        0x50c71e584c6c6d13aa62fb45,
        0x22dce41fe9ce2e2589a91fb7,
        0x156bb62a331b27dd,
        0x0,
        0xf1ddcb5c96faf36fdeb3a742,
        0x39e6f34c9fa18e5837341299,
        0x52021fb11926e5fb,
        0x0,
        0x5faff596894792b6ff9dfc9c,
        0xd927148c698c3c8373e7c9f2,
        0x293fe3c00324103e,
        0x0,
        0xf,
        0xa5a3ac454c213913079bae44,
        0x795a6c9064d04468da9a2b93,
        0x57cfcd927773feab,
        0xc4f1946af9104a85ff682056,
        0xa45773f5aec3b3f8d989f29a,
        0x6f08db2c8b514ebf,
        0x5277c711da7c03a51b6ab5bf,
        0xd1002391d3fb468765da8798,
        0x177118f20c0ed289,
        0xf2530b8429e4bc4e9d7335dc,
        0xe075908754e38fda90d045e2,
        0x6dfcf5227b652604,
        0xe4ba85d5e4a3cd21da5e6aeb,
        0xbfd62c4b9ba29d4af5681a2e,
        0x3fa2adf2d371db40,
        0xa84938e330719e3f5b3f2d4d,
        0xeedcbab879b22bd4e4a69e10,
        0x337f91987e31c67e,
        0x4c66069101883bb6638d3302,
        0x7248f9d4f62264d10298d784,
        0x146969ee763539f2,
        0x94dcfd70ee03760741ac258f,
        0x7dae0c19d415a3876b75de18,
        0x786eba41c88bee56,
        0x1dfcf3f10a65e9b26b50c8b8,
        0xe8448ef518699e5dde61a8fa,
        0x371caabca63e57f4,
        0x82cc76de0646c81213e91e41,
        0xa9b126502d32d19dde483448,
        0x2035b79bfe567a73,
        0x8281b22828d5a131aabfebc,
        0xc1fe9b1b3315977b7707ac6d,
        0x27f08783f520c844,
        0x5588c769182fad7a8a8a3f33,
        0x7b7dfb49934d709c357a7dac,
        0x69b20f406845338b,
        0xfdc5e1ca0969f3f099106311,
        0xa2ba42a45b38ca92b9c3f135,
        0x7a3329a72f818f26,
        0x4ccd25ba6c38088114872b7b,
        0x61318b971f0608be03e827d1,
        0x79119f85cfa7ae4b,
        0x5139f1cf3c88c41fcff36b0,
        0x1e44c73f6bc3e08578697ab7,
        0xcbdaa8e68933e9,
        0x10,
        0x7a8fafa0c6bef4757821947d,
        0xfd48ea251f2053bb50e9e2ac,
        0x5ad753f6883b9e92,
        0x267e503a81132814456f6308,
        0xf29aa70402ebb84cc26f4abb,
        0x5f7ab9191ee2d518,
        0x86ac53d188546aa2622219cd,
        0xa475fb727e5854521b4510a9,
        0x9a8daca276f58b1,
        0xb60ef5dea1d2e4698185195b,
        0xdc34f9f8a783b663ecc152f1,
        0x4ae0a8bb83194958,
        0x61f7f3ab9723a9caac82f804,
        0x23c5177dede8747992c53b64,
        0x407633836865a352,
        0xd3f442d1c2ee88a44642bfc,
        0x45eefdad6396ce5ad618faa9,
        0x6fa62aafbf651b47,
        0x18e1348d5dec8dedd0d63866,
        0x157d5b5a1fb4e4f58dc0a124,
        0x1b56acfab107890e,
        0x2e6c5757db316065efbf26d5,
        0xa404f3a0e385769c140de833,
        0x19f60a1b0aea6041,
        0x4c4e27be4e00a9998653797d,
        0x6b052eda3d88a95b639e931c,
        0xacbb38db3be6390,
        0x7a1c36e6a9a89fdb7a9ac77d,
        0x940a6e119b42410932871817,
        0x660c9dc8af97d2ac,
        0x8a24095b2e25cdf557402a5,
        0x750f2d5cf8f418dbafb5f21a,
        0x67f01894ef3cfe2a,
        0xa09c2981d1c40e4fc4d4c059,
        0xc8cc70cd811a50b737c8f702,
        0x1fd5a0bc3c064137,
        0xf3198e08c17a62cf18b155d4,
        0x9f07b9d79a7af191835e1add,
        0x1266a4130cfe25fb,
        0xcd90d666a429c5495be70076,
        0x3f6e2e5ff3ca9d7a484bcddd,
        0x55da2ede0bd1ce57,
        0xceb7c631d47aac813f107b51,
        0x859e75cf6b1c6dea3cff4cb8,
        0x64d2b9c03eb17cae,
        0x1,
        0x0,
        0x0,
        0x10,
        0xc89fcfffe7fd4c4412708b77,
        0x75971e9d1cc9b14c9d689fc9,
        0x69fc5772b2b01ef8,
        0xe095a5b7495113ea189ebb2b,
        0x8bea22ca05593e166fc82a29,
        0x6e6e97bb86bb9d15,
        0xb5f23c787974a4148fc292b2,
        0x4af182b1acd916aebbdfa54c,
        0x2d01c1c476675a46,
        0xaf1fd2b2705fd1cb9f18f230,
        0x974554e5061b5ce7a731b85e,
        0x7360fcc1145184d9,
        0x6b2cc49ded8e60b5caadd418,
        0xa4a114898a3c094c7aeb94b9,
        0x638ea2d159445d61,
        0xae8f910eb2e2651fe3f569b3,
        0x1e03b714e7e6af187c520d76,
        0x20f5443f1648207f,
        0xadfe5ceba907c0d40d7665c1,
        0x369ed938b43c195fa611d78d,
        0x75dab0469236bd15,
        0xf0766f40ec7931bc257c5f13,
        0xff07aed0dc7fb9bb4ba37e99,
        0x789052129e9a7a71,
        0xe43924d4a72f8dab96957723,
        0x6c497f78d8f4f01a42dbff95,
        0x6f846a0600f01b13,
        0x2d00371ae313258821f779ac,
        0x9dbf1e524ec19865896bac54,
        0x452000e1a6d66346,
        0xc03b1a65fad8408204eb7bcb,
        0x32d71742214ab66f19f4ab22,
        0x7c85c2be3899bdc1,
        0x11d4bf60a1c34d9dcd6b645a,
        0x2f010cc877788bb67113c69d,
        0x1a6090c14415ba1f,
        0x9c6fc77cc938dc6e705aaa76,
        0x82cbaa07551a89cb4816b50a,
        0x30d9243518ff9b07,
        0x69ef46693c6e5ed9ba2a91f8,
        0xd1877b23fa6df4552a317903,
        0x2b5f0eb45ecb3863,
        0x67f43be0844fd5966588a5fa,
        0x97a2f4ad53ffdae4e845a480,
        0x670b251ed4c5d915,
        0x524a52b78ec49061a87cce7a,
        0x66bd8fa0c9dbcc0c37a9e60b,
        0x19a27e3e1d4da565,
        0x13,
        0xd216fb075ff627c773a295b2,
        0x1d1d51f6199a963dd737190a,
        0x7b1fefc7d7842d7e,
        0xd7783f5645fbe2014faf44df,
        0xbe44c68d1ea8889bf9ae95e7,
        0x7646e5ce78e1fa4c,
        0x19bc59634bfea4c788dbb23d,
        0xdf465d7ef4b83e0c6f11933d,
        0x58a42d3395793705,
        0xad502802243fee39f67c7cbd,
        0x6f60d9afc285a9cfeec7010c,
        0x4c2265b24c7088b5,
        0xd25a73bbc5676a93c1119f4b,
        0x94b1e2f5144557de56816c0a,
        0x7fc534da09ab3784,
        0xd203dc97c414ae9a0f3b4aaa,
        0xa493abe76e1cdb354f9b353a,
        0x130b33fd4fb1a3ca,
        0x134f7142199fbfe4d2f2cd70,
        0xe041a5f113e45a4aa93b8563,
        0x4a45a2299b09cd3,
        0x4d20696df8d249143b28c777,
        0xbcd66c1b0ab390dd4a252654,
        0x4f8e5625c5b3abcf,
        0x9027a2c146c2fcf18265bae6,
        0x6a3c785fc1c571d57705f1f0,
        0x210873f6f6023ca0,
        0x5772097a21a6e396f9b93d3e,
        0x43c64e168654b502d12a55eb,
        0x117ef43247debea4,
        0xb4fdfb092c927a2737f7ed6b,
        0x3103ec4d26a98f5d0d39b2f2,
        0x62a5ae8435ea774b,
        0xceb30265d39a3b204dd16323,
        0x65977615c348243b9490fa57,
        0x57a21ea38dbf6007,
        0x71ed617e3ebd31fb4be5632d,
        0xcb9a81c480cc8998f771be31,
        0x1061d2ed0c614dfd,
        0x909d51da367661c3737a38b7,
        0x7fca4331593074985933a00a,
        0x54ce12121fa084c8,
        0xa6701220f31db9429a2cc36f,
        0x77055bde00e073283b5fb4e1,
        0x15cb1b568ef36b84,
        0xb921792249da640e5769244,
        0x5c705b6fea2ceed7698755c3,
        0x3d74b93538e54e9d,
        0xda36015e509ba6d854a317b6,
        0x71060f6d5545db50b404843a,
        0x3328dbb1b18b8d3d,
        0xceb7c631d47aac813f107b51,
        0x859e75cf6b1c6dea3cff4cb8,
        0x64d2b9c03eb17cae,
        0x1,
        0x0,
        0x0,
        0xfbc1fc60dca98b694a8cfcf8,
        0x44539319cafa53708a46e95b,
        0x34ba025011396246,
        0x0,
        0x0,
        0xc,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0x19657783ba5660e255c21849,
        0x7ed7474bcea7551fc71e46bc,
        0x596c0a76b75f4756,
        0x0,
        0xa6832ef7fe97f77de7cd9a62,
        0xf18a70dbf1dc5a76c685da4a,
        0x6ac1b7bfc409119f,
        0x0,
        0x7751161b1a9ef600b865a5af,
        0xed28aad4835a39a9e8318ceb,
        0x572e95c429f0e07a,
        0x0,
        0x5e71d0fc5d1c016834779173,
        0xadd002dfc0ebf1b25c23c252,
        0x40a868d928ae5233,
        0x0,
        0x423fa293418d6e3f59c2e830,
        0x7a4bcf26f93e71ffd903e68e,
        0x7837b851ad8da6e3,
        0x0,
        0x5907087f8e8e4dacdd039371,
        0xc390e2073b4e64b9ede0570d,
        0x6b039a85962f1594,
        0x0,
        0xc45eefa03155b8f7eb780b42,
        0x3db57eb22f9b0394a4d7b78e,
        0x6cf45b6d90883f60,
        0x0,
        0x60dd8ed0a614b596fb37eb1f,
        0xabb99f371be41e26ec2d8e4b,
        0x187ecd72c40f159d,
        0x0,
        0x7b66c9263de5e1663622985d,
        0x118b032cc27a1d6dd192eca6,
        0x312fb405788616e8,
        0x0,
        0xf4ac3e1f1f068dd64c86fdda,
        0x24594e591d82a7f964b5ec9f,
        0x6ca311b5421c57fc,
        0x0,
        0x42745cd7b146012455434d0f,
        0x6aa4f552b7bdc93a613bd9df,
        0x5832a065d7199c7a,
        0x0,
        0x341786b7854e3e0104e2e416,
        0xbb368441c295043bee7b1d2f,
        0x35c88542e11463b4,
        0x0,
        0x3c36e7fcc4e2fde28308132,
        0xf58043d0e3d1a36d1f8137fc,
        0x58c1508fbe8868a8,
        0x0,
        0x560a37951d69a6c8d7138239,
        0x462d454a509846714184ef71,
        0x3aaf8fb4f60e3e9c,
        0x0,
        0xb70cea4e13db5322899753f9,
        0x6c62656b6d7ffb5c2af44fd5,
        0x4b5ae4567dc6a7c0,
        0x0,
        0xb06cccb4b425d5179f528270,
        0xce017c281a3861570706cd86,
        0x42d14846dc4860ab,
        0x0,
        0x646bf486f6e77663c597ece8,
        0xd87c8c36a430a6fe42305b88,
        0x7964c7742b6f13da,
        0x0,
        0x52c487a17925c92335926072,
        0x13155d04b743220ba9c4dd31,
        0x1106c832e8e52057,
        0x0,
        0xbc69df5aa9a21ba08f160d5f,
        0xc207c95ac5d454f546b05fc3,
        0x574515b32b35f440,
        0x0,
        0x4f068c66f642eed6b2a9cf28,
        0x5cde9d21988aa8eed49fbe13,
        0x5847165150f2b16b,
        0x0,
        0xdf6b306bce93c8248de1b0ab,
        0x5d126993fea5de605b6d6f73,
        0xb2fd0f2d63c2503,
        0x0,
        0xc,
        0xd344749096fd35d0adf20806e5214606,
        0x8ce86e89466e4726b5f5241f323ca74,
        0x30bcab0ed857010255d44936a1515607,
        0x8ac57cfbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0xda2ddc3552116dd2ba4b180cb69ca38,
        0xc87a746319c16a0d0febd845d0dfae43,
        0x7003168b29a8b06daf66c5f2577bffa,
        0x176ea1b164264cd51ea45cd69371a71f,
        0x3b6a666fb0323a1d576d4155ec17dbe,
        0x9edfa3da6cf55b158b53031d05d51433,
        0x23d79a9428a1c22d5fdb76a19fbeb1d,
        0x4d125e7fa59cec98126cbc8f38884479,
        0x1f40f472e2950656fa231e959acdd98,
        0x98b33c6e0a14b90a7795e98680ee526e,
        0xc8555a9fcfcfa81b306d70019d5f970,
        0xebe2136898c752051e01a934402d0baf,
        0x6c2a492cc0f859aa6524ab713b7e05,
        0x637e0edc5b6e4ae7a62081434fbaecc0,
        0x4e8c1e4403d1f83a859890cd670f668,
        0x2284b7a447e7f5938b5885ca0bb2c3f0,
        0xf6b20a3f40048d7c31d5a973d792fa1,
        0xc5adf6816b10e53a9145de05b3ab1b2c,
        0x54d35980bf9c0efb5816b74a985ab61,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x4ee4167708b29620b1a9e142,
                limb1: 0x6fd520385a98769aa6f2e833,
                limb2: 0x29e58ca78283490e,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xf78829d77fe7c51b0788aa60,
                limb1: 0x98af3b491451a91c0de5fdab,
                limb2: 0x4ba4b20ac788a99,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_1P() {
    let mut data = array![
        0x1,
        0x7f786854444f3d558366509,
        0xb70c0b25574aacf166121ab3,
        0x1b7d1a551a29220d,
        0x0,
        0xd86db008c9761f4b89a24f1c,
        0x503a8407beaf6af113245fad,
        0x285a4405a714ac10,
        0x0,
        0x4f04eeaad93c0058fe8cd7a8,
        0x1a0c50e40b77208e462ff4ba,
        0x244df6e2f202b733,
        0x0,
        0xb765ba7219cd90034e062c53,
        0xd3ae38b70aa13672bea1c690,
        0x127d4c8c219ac9b8,
        0x0,
        0x6c6d7baeed557a6311562c37,
        0x2cbf667fba5f965983388785,
        0x24d44fcd99de1826,
        0x0,
        0xa6ff1f5312f1a0df76f3047f,
        0xb379fb0bc2d5f37295bc4db1,
        0x257c4a6b5061f93b,
        0x0,
        0x4,
        0xec176080f6b6922bcdab4796,
        0xd788c5cf69859925e4764a2e,
        0x5383a46504b5da7,
        0xbee0ee85007d5fc3a9b606d5,
        0xe8ea9f974639382036159b7f,
        0x2b81cd43f7a7c786,
        0x6b3cef5ca4a6139beab9bbeb,
        0x7c6015d56b55afa9a25f002a,
        0x7b26511800285,
        0xb0bc1159914be4ae680d8d74,
        0x3cf6b6eb074ecfb2199afacb,
        0x6a57fe2e407f6c1,
        0x5,
        0xe623c68126644fdc6841a767,
        0xd4eeba1af56efcf7505520f0,
        0x16cb92fd461ab8e,
        0xfa095fec9d1209b8cbedd42d,
        0xe12a1cdd6bce5430577f9a22,
        0x15e35aefdf0f67c9,
        0xaaaa289f7a9a3fb364f0d4f4,
        0x2025e959ed41b3338d8ad86,
        0x276720bdd227c2bc,
        0x230e5e06bde7aa5fe5f559ca,
        0xf1cfd827f42812b4a5c10125,
        0x24997cc12136db42,
        0x1,
        0x0,
        0x0,
        0x5,
        0xa2654cbb028c6c1698de9bfb,
        0x76550e02bcfa19e57887f6f0,
        0xcae510c8c613865,
        0xf8461cc80feba5df531b0802,
        0x27777eb6ff392df51b6db74b,
        0xe97ba55343edebf,
        0x575ca04a38f3290cb23af4f2,
        0x84b1b2ca4ceca7fec8db42c8,
        0x20e2262b31a8c6b3,
        0xb2c84005e31326b00bf6fe28,
        0xe3b5e7090ee8dfddb2a9bbf5,
        0x28cd9859a018ad80,
        0xe828394c8fbcbb451491be16,
        0x71b60898b89adedf0e124477,
        0x2ce19dd1bafbd792,
        0x8,
        0x315941fdb738a7f103a3e22a,
        0x9475e9ec35228bf0d28cb849,
        0x182c0245c6b53bad,
        0x332c25d3b0dd0759f534e90b,
        0xceb642ffe3572bb3722605f1,
        0xf0969a939871ce5,
        0x52d7755a921d332d6c01dbda,
        0xf23b880b88fd06b16c732e05,
        0x7a31dad5c12d3cb,
        0xc09a3f6efc7b780152f6b10a,
        0x2234e9b852573bb35926d927,
        0x8536c320f423e3b,
        0xfa095fec9d1209b8cbedd41c,
        0xe12a1cdd6bce5430577f9a22,
        0x15e35aefdf0f67c9,
        0xaaaa289f7a9a3fb364f0d4f4,
        0x2025e959ed41b3338d8ad86,
        0x276720bdd227c2bc,
        0x230e5e06bde7aa5fe5f559ca,
        0xf1cfd827f42812b4a5c10125,
        0x24997cc12136db42,
        0x1,
        0x0,
        0x0,
        0xdb6fe1c5073fdf96a98e95e,
        0x7e95b6c3e7c9876c7b6cb8f9,
        0x28e33c7595bf8f1,
        0x0,
        0x0,
        0x1,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x1,
        0xb4862b21fb97d43588561712e8e5216a,
        0x967d0cae6f4590b9a164106cf6a659e,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x41c610705003caeb41ebc2e1,
                limb1: 0x7e86ece0ef89d80aca46deac,
                limb2: 0x121b38a9ddb387ef,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x5d4d7ed98f7bc32e88ca220f,
                limb1: 0xc1b7d0a1662fc4fbf7fefffe,
                limb2: 0x24a447a3fd6b6dd0,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_2P() {
    let mut data = array![
        0x1,
        0x4c8a3fd5ad554815920fa34b,
        0xf6267f83b9ddd0836b7dd162,
        0xe76e77e38a48883,
        0x0,
        0xa2982f7bfc0f3189f9be185f,
        0x52a10204c7fc7210807fbcb1,
        0x2857ea06cd55db2f,
        0x0,
        0xca1bf051f440b180bd56a0e3,
        0x35bc4ead76d1cf777790f482,
        0x1bd1cf8767b53047,
        0x0,
        0x4a02c1059a54d5a076e214d7,
        0x8ff53ca9d5299908e545100,
        0x209b6bca287a5a6a,
        0x0,
        0x36fa3841052a982602b5c41e,
        0xb1d1bdab9bf315751cf69ce8,
        0x9dc9f81e6099051,
        0x0,
        0x13ec56dc1c86874d8660678c,
        0xcd5dea31b6ab5d1d2a589c90,
        0x2e5ac55f032b02db,
        0x0,
        0x5,
        0xc545d3f9161d6321340f58b8,
        0xc805a18e16d5fed81d99ff3,
        0x6d3eddb9e976204,
        0x496cc4ee8ac5df6c9d3ccf6f,
        0xffaa7d4c3d65a01f0513ffc5,
        0x1c48bd80768f3261,
        0x6cb49e0e354d44cfac306dfc,
        0x1ee42ed1df7df9e038c89b2f,
        0x2dc357f47604f9fb,
        0xc27b1bbbd628b89bf50876bf,
        0xc5fd02cf66ebef3b7f0ee611,
        0xb06a1a79f69fd18,
        0x9baeb8f2eed15f9006dbd6d1,
        0x396bce458e6690bf46eda992,
        0xa08433b25ecac79,
        0x6,
        0xdd93e0799c4337aacc1bd042,
        0x37070c3db5246f2d91c96ef3,
        0x19eff9c4ecea736d,
        0x45e5f38e4864388496e1ad14,
        0x34d764f936c048c53b99933e,
        0x30c2f06d350b477,
        0x54d4a0ca90fb9859f70ec32d,
        0x4468882a83f862fe84ccc0b3,
        0x2fc075e1be0196a0,
        0x1d0df5b5a1bb457bd9dfd8b,
        0x1348b61af8a37e0459445a38,
        0x927a6251fe92109,
        0xfeb7d6fab4c698bd502a0592,
        0x203859ab7f62ebdb59f02e1e,
        0x136bac2973864876,
        0x1,
        0x0,
        0x0,
        0x6,
        0x405cd9b805fdff9d06e1d992,
        0xb9e3315bddb86e1cf8690b51,
        0x1a786933cc28d389,
        0x552f4679263fbe4b31936dd8,
        0x9dc21d2d905f530318267b06,
        0x2e323d95de4ac1c2,
        0x7bce114b83f3fad7ea6ced51,
        0x1b8c19047631ddfad5dd0c18,
        0x23fb1345c7ecadf7,
        0x28c8161ece2495e5e6950ab2,
        0xba9c71418002f392712dd8ca,
        0x2107cf2a465e92fd,
        0xd8226295fbf19dbd8cace5c0,
        0xc0c2d2f3d1a0fe2c67cbf5dd,
        0x23d8c1fd6cb7b389,
        0x8153730c17a3ba2fd35f9fc3,
        0xe3da7f7415aefbd97e97ac35,
        0x566596022f043ac,
        0x9,
        0xa6c7d99465ce56fd2272ba8,
        0x8baae90807a2119ce3a6b4a3,
        0x2afb7a69105e9760,
        0x4f2db4afb91c2a59db0381ae,
        0xee52d6e0603ddba15b35096e,
        0x2cf97d71ba074468,
        0x7331cc31e14c30d988050a14,
        0xb263964bd6184b48d9d9a0e7,
        0xae161a35630a220,
        0x2be15d1c6c121e93049dfa0a,
        0x1823c596b6cd19fb1cdb2a15,
        0xf7adca672042250,
        0xafc2c0e12261cafdd4174e69,
        0x1b4b58934bb809c05c11dd2a,
        0xba3e56a4fc145c3,
        0x54d4a0ca90fb9859f70ec31c,
        0x4468882a83f862fe84ccc0b3,
        0x2fc075e1be0196a0,
        0x1d0df5b5a1bb457bd9dfd8b,
        0x1348b61af8a37e0459445a38,
        0x927a6251fe92109,
        0xfeb7d6fab4c698bd502a0592,
        0x203859ab7f62ebdb59f02e1e,
        0x136bac2973864876,
        0x1,
        0x0,
        0x0,
        0xca8293d63204d9cbf15da4dd,
        0x1b90a5a885872b0ab5c473d4,
        0x27e79bec39d0baa,
        0x0,
        0x0,
        0x2,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0xa560a5759c90985fde99aca0,
        0xc5b21186cc6dcd0421026513,
        0x21fb1f47c6ac55b3,
        0x0,
        0x2,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x1521f387af19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0x28fcb26f9c6316b950f244556f25e2a2,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x512920e074cbe690304d839e,
                limb1: 0xb077d5884dbdc5fcb9424a35,
                limb2: 0x16cd67edce8be7ac,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x70cd2c4a003d407aabc7cc,
                limb1: 0xe2748dd5f8c2a0e1dadd02d5,
                limb2: 0x1c1cfa79fda07581,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_3P() {
    let mut data = array![
        0x1,
        0x5b735f9d246768e02c0666da,
        0x83f633bb9800ec2c4cc194f0,
        0x15feec67d630a317,
        0x0,
        0xac94790115ff0210d703167f,
        0xeb040635f0f5ff1287e49030,
        0xf78a864e28c69c5,
        0x0,
        0x65674f22bc98bec2accf2470,
        0x40c674c94b72158def5a52cc,
        0x18e57166430a58fd,
        0x0,
        0x9d0e8e14a785eb3d0e4eaa32,
        0x3e20fdc722461babca0a3998,
        0x120a8e6af37d4bbb,
        0x0,
        0x46028832032b94adf5b8b017,
        0x6d90ee3cf49127f3d221c9af,
        0x2ce9040cafd3fe7c,
        0x0,
        0x1f3685f216ca5bd08eb9216e,
        0x179caf6afc65db27d8d4be35,
        0x2906d0115fbef9de,
        0x0,
        0x6,
        0x3cbef6167c04a53a8d1a8b3e,
        0xd03c395d30be0c63921a3aa5,
        0x160ba41bf714815b,
        0xa47e9d004e0dd8e44203a35d,
        0x2609e25339450d5b56df8500,
        0x2cd184da9780044b,
        0xb2a2bfa5ab14b9a36e126f79,
        0x63ed6e552dc41be0766cbb4a,
        0x218648e48e522bb9,
        0x7f17d844a735fa5e7e29f8d4,
        0x6c5365c69553be5e18ea89d9,
        0x1d38dd623376d94d,
        0xedd1192a61a1bc895b869833,
        0x2a80b1c908e8547e98888968,
        0x8a3cd515b2c9149,
        0x88a85d9da38f9edfaef415ad,
        0x529a6d27cfdc8cd6244d05c,
        0x1195b3d3a041c9e2,
        0x7,
        0x480e2740b69d4e9e7379999c,
        0x621cb893ecd9e22821ce335b,
        0x51afd4c2c03dbd3,
        0x95b6d86bd2c68e4d8ec7b5f8,
        0x815a2482fb5b016a28821fd7,
        0x64874dbfdfcb4ad,
        0x41939a0c478b5b86995e8646,
        0x74fba1f7eeaf8e9a3fdfa794,
        0x767ba95b8af8816,
        0x80aa47d0018280f195453a45,
        0xdc8221f6da9e890709f07ed3,
        0xd8c512301560d93,
        0xe4f47d058a393c0f0a193e42,
        0x614174dadeb4d5f2d00cd2df,
        0x473ecc22ee968b0,
        0xfcc6f494b7b4a1d8d79f8b09,
        0x7f74ad793034e6388a3462fc,
        0x249ff9b5a6cb5d17,
        0x1,
        0x0,
        0x0,
        0x7,
        0xacc19685f70147e717898dbb,
        0x744ceb39a832aea13316a2b0,
        0x97af1da9f0e53c3,
        0xd4cd7dd1c0b18cb3a65ca0e8,
        0x30a3c8761cadfaf10ca670e3,
        0x25f36b3ede6c0200,
        0x8bce9d688da9fddec9119f33,
        0x45d17d1b622b1a75c60870a5,
        0x2c362560c77335ef,
        0x30a1690566e047e85c84c4a8,
        0x408673ee1f50e18127f71a6d,
        0x2b7f80924b308340,
        0xc1bba34f256bf80fcd993789,
        0xe965957d9e06522a07ddf499,
        0xf35807db92cfcb7,
        0x1b31c35751ae4843731022d9,
        0xcc63e18797cc3169f4a9f0cc,
        0x1903b849856fff64,
        0x2bc0cb4c6777cc03745f1e81,
        0x43b688ad509724d04fc6ad54,
        0x1d7b30997e745552,
        0xa,
        0x2a8245d66751b2a234eccca6,
        0xecb8499a488aac1011b66781,
        0x9fdcad6d621a749,
        0x7c07f28acc766d9554bcea8b,
        0x91f46470d378f10ac7f79b88,
        0x265d28bcc5cce0f7,
        0x125f16e30b64cccba0b9155d,
        0x643b0facaadb90d93ac19801,
        0x134987675fecd6ff,
        0x1d5e9546f05c8a7739e0bb0c,
        0x5709d3bfefd9828241d950ba,
        0x10bf22377b4515d2,
        0x54ed6c302cbd7c75c31a9398,
        0x7ca1ed67345b7d04a80fef8a,
        0x1b5e58dca2e0014a,
        0xa6c8138c870614a377c64aba,
        0x5a4fa7304ebdc1941d07e075,
        0xde0215b14b37ba5,
        0x80aa47d0018280f195453a34,
        0xdc8221f6da9e890709f07ed3,
        0xd8c512301560d93,
        0xe4f47d058a393c0f0a193e42,
        0x614174dadeb4d5f2d00cd2df,
        0x473ecc22ee968b0,
        0xfcc6f494b7b4a1d8d79f8b09,
        0x7f74ad793034e6388a3462fc,
        0x249ff9b5a6cb5d17,
        0x1,
        0x0,
        0x0,
        0xa005d970511e5c051f1fdf32,
        0xe7e339774ae8dc9fdd2dd0f3,
        0xe78fa1831e306e7,
        0x0,
        0x1,
        0x1d97c2e3cc0828e5b4f5147a,
        0x7232e52ead2e65ca6a309eb,
        0x232391fc639964c,
        0x0,
        0x3,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0xa560a5759c90985fde99aca0,
        0xc5b21186cc6dcd0421026513,
        0x21fb1f47c6ac55b3,
        0x0,
        0x3c26f4ff476ab777dc184776,
        0xbccb2cba46cf421f11eb4d14,
        0x27ec44064c727a3d,
        0x0,
        0xa893636703904fcbe984618c,
        0x73b210a224190b9b7b28784c,
        0x20f05486689dff6c,
        0x0,
        0x3,
        0x5a92118719c78df48f4ff31e78de5857,
        0x28fcb26f9c6316b950f244556f25e2a2,
        0x8d723104f77383c13458a748e9bb17bc,
        0x215ddba6dd84f39e71545a137a1d5006,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0x5f82a8f03983ca8ea7e9d498c778ea6,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x213a074a0215934c65d47250,
                limb1: 0x57ceadf09cd8ebde50476db0,
                limb2: 0x1f82780f1a4c3d23,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x7282af42d1608d1f8c034960,
                limb1: 0x81214b248c88a391f72dd6e0,
                limb2: 0x5df1db744450be3,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_4P() {
    let mut data = array![
        0x1,
        0xfc0722e08ff59a388c160e67,
        0x1f813d3a60b67b11327a7cdb,
        0x1ef17bed865fb2d7,
        0x0,
        0x6eff8b7d85c26da843f2519d,
        0xd17fb14a8e909f3d4b5429d,
        0x1eddde5506bf5a0e,
        0x0,
        0x860b3f95056742041f8e9835,
        0x12cab9f28e92f04343e67ccb,
        0xb5d332ee2df5861,
        0x0,
        0xa043f0e8ae7339e72322d625,
        0x70363269dca062b8657da134,
        0x302bcf4a5342dee6,
        0x0,
        0x137636f58167dd35e85ccdaf,
        0xccda42f80a79729ce7c2b077,
        0x1696b6179d836ba3,
        0x0,
        0x134e5249421e07707774ed4b,
        0xdb37c9d1ce9987d9b92450e0,
        0x1f78b447e9ac330e,
        0x0,
        0x7,
        0x458687f18524c3171da96dbd,
        0x60860e58491eb75205143d03,
        0x89449402de5fd30,
        0x963ac6e0a8963e355d7d151b,
        0x273d4e0c13789bb7092d3857,
        0x2678c6bcb14d27a0,
        0xc70c767b91fbe06452f07e5d,
        0xf6f68a73d6592b6c80906059,
        0x2c67181dc09a2bc8,
        0x62ce170ad8838c248f6e278a,
        0xd435efa18e38077a6259ddb9,
        0x279f26c53966129,
        0x960d42c0d714ae9d02e23d51,
        0xeb1dc71be0fa85c9b1d87a5b,
        0x8aac2c5fb81bde3,
        0x771914326fef2a9fe0dc393f,
        0xbbc917fa2b7c2d6e1069b21e,
        0x1272c4388b616b7a,
        0xb267d5105dbf5d17c58eb417,
        0x60f991ee6cb166a2569a6fb0,
        0x300f4120abfe68f7,
        0x8,
        0xc49399caf60942cb41bf1a4b,
        0xb8c8f81e257db77ba7d930ee,
        0x29c35c834ca56474,
        0x3534b978f4f2c3d54cc082ed,
        0x9c5c74e77d7f454cbb0c51b3,
        0x11b94667e5652c41,
        0xb7f1984e55f526ab3e2d5c3b,
        0x3a33c8331e085d3f05ff430c,
        0xb4d70b78cf91b33,
        0xde6a859469d254174e11bf57,
        0x50233069282b757021eb8a94,
        0x1b18d51d01c230b1,
        0xfbd835be57bc92033bfa1c71,
        0x747f20f1225c121246b49a36,
        0x22f8037bfa371f0a,
        0x7637f02eba0c1f888dfcdc8a,
        0x202e181a99bf5c64a21208a9,
        0x36ea960c7320719,
        0xf928efcf6cc7ccb350726f0f,
        0xb1fd915a7c42d1b9d1e2cd22,
        0x22744e0cac3e724b,
        0x1,
        0x0,
        0x0,
        0x8,
        0x5036c299fab2dbae1a6411d9,
        0x6a2eada6668b42795f1dae02,
        0x251005017d20ac,
        0x943f5096ba0bfd5b4ee3b02b,
        0xa29c0cfb02e5fb6028e3d779,
        0x1cc5c0cca2fab73b,
        0x882e9e64af249b84cc31e5c5,
        0xb547ab5c49e5a1ae8015713,
        0x226a7a1f103f31db,
        0x5ecb6c26c0e2eefd42a10a11,
        0x21f0297cd1690bc90616b4bc,
        0x1bb0a627168356df,
        0xf8e2ccf5f956fd5f10b22be6,
        0x53048cc04f6fd3c7cbda8705,
        0x1289f195d31df76c,
        0x6205324655787f1496134ac1,
        0xf56cc4877a09aafbb2675587,
        0x25880e3486d63cf2,
        0xd18c19bf9a07fe68d8ceb27c,
        0x4684a790d12d70538e5a4b60,
        0x1ecb957e7d6066fe,
        0xc3cb4e2afbc62f0f806b478f,
        0xe280f218d04f6d45356ef745,
        0x817c5518474fa27,
        0xb,
        0x14106208a39ff42bb24f4114,
        0x875b9bb1193afe3f359e5c64,
        0xfe774031aecb6b1,
        0xcb91c2f0970eb5e177374e4a,
        0xa80e249e3515d073ad99ed14,
        0x2570783deca370c8,
        0xafdaa5115a4044f09efce019,
        0x3d0cb75077730453adc2d49,
        0x16cbd9b283bb240,
        0x4705b00b52034f728291658d,
        0xe145348d0827064fd1082798,
        0x10a3f7a0197eca25,
        0x308a6ea45004948d91249f78,
        0x83ae897247723673eb7cf772,
        0x3f4b88ed60f9e84,
        0x57f415c53f09042dc062b712,
        0xcf74742569d492ed6b009814,
        0x1587fbd33d842b1,
        0x763df9d5f253f1e36785f64,
        0x220fcdf4f9cbac77144acea8,
        0x161353a81ff01b9f,
        0xfbd835be57bc92033bfa1c60,
        0x747f20f1225c121246b49a36,
        0x22f8037bfa371f0a,
        0x7637f02eba0c1f888dfcdc8a,
        0x202e181a99bf5c64a21208a9,
        0x36ea960c7320719,
        0xf928efcf6cc7ccb350726f0f,
        0xb1fd915a7c42d1b9d1e2cd22,
        0x22744e0cac3e724b,
        0x1,
        0x0,
        0x0,
        0xf995f34bdca9cb323c8a2d74,
        0x8688d228b0eb3a8f26b12726,
        0x84454090518f86,
        0x0,
        0x0,
        0x4,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0xa560a5759c90985fde99aca0,
        0xc5b21186cc6dcd0421026513,
        0x21fb1f47c6ac55b3,
        0x0,
        0x3c26f4ff476ab777dc184776,
        0xbccb2cba46cf421f11eb4d14,
        0x27ec44064c727a3d,
        0x0,
        0xa893636703904fcbe984618c,
        0x73b210a224190b9b7b28784c,
        0x20f05486689dff6c,
        0x0,
        0x74f2a24c1853d803c1b9e310,
        0x9e78bb9233603b686b9d27,
        0x1d13a84fbcd96e81,
        0x0,
        0xe5bc08950f2f1accd92245f4,
        0x3b653bbe7b6cfd9074b07f89,
        0x1638a8a07b89463b,
        0x0,
        0x4,
        0x8d723104f77383c13458a748e9bb17bc,
        0x215ddba6dd84f39e71545a137a1d5006,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0x5f82a8f03983ca8ea7e9d498c778ea6,
        0xb5d32b1666194cb1d71037d1b83e90ec,
        0x28045af9ab0c1681c8f8e3d0d3290a4c,
        0xd3fbf47a7e5b1e7f9ca5499d004ae545,
        0x2ebce25e3e70f16a55485822de1b372a,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x577ddc8cb42b7a3b83e4d525,
                limb1: 0x74e9415eb1dbca9529930fc,
                limb2: 0x26b61a5d6d67dd31,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x6cc0d22d0549fc5bbbb24080,
                limb1: 0x315ae072448564ca12dc062e,
                limb2: 0x2d218fcb973e8f23,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_10P() {
    let mut data = array![
        0x1,
        0xf714cab85e2680547608c7e9,
        0x6f4938cf1c5847f8e27a8c40,
        0x180e2836702eceb1,
        0x0,
        0x33801593e6ee17e6e566186b,
        0xcb3740f2644821679f685418,
        0x22fc50ca1c2b330e,
        0x0,
        0x9ae33eec220546452790bbe0,
        0xe9bec4cab422b776c9351fe2,
        0x25c6b662e0335e79,
        0x0,
        0xe717684d187212b689b12d88,
        0xa51566c0c3d970b7af786c1d,
        0x220fb1c7d59f42ed,
        0x0,
        0x792a29db3b35c0f6db0c7046,
        0x9a9c55cf99e043e5e9f6c153,
        0xb26227884cc3fdf,
        0x0,
        0x17d6d3feaf7a501bc718e3a1,
        0x65eb70ffc9f41f5ab55cf0cd,
        0xf905b417bc404bb,
        0x0,
        0xd,
        0x5f48ad48e2456d926095f1a6,
        0x896689f4e824a332f01cdbe7,
        0x25b942c5bdb96fff,
        0xbc4f8438a2ea969a8a9a3f1f,
        0x92d5ab77c0add7054186ae30,
        0x23e28afca228bac7,
        0x5db9781c8d3b27078fc0ce68,
        0x845beec82262f131bef68b2b,
        0x20dedbd28d98b931,
        0xa5788865e71c16915086606e,
        0x564ee3847a64658752e13678,
        0x27da6998af509f74,
        0xc78f9cedbf27991b7c708b0f,
        0x7fbda5146ad61236ba2f574d,
        0x2a5a1cbacd5d9530,
        0xe9448c81cb4477405dac943a,
        0x72c2d385bb46b49ef66bb97f,
        0x21a5eabfed37f86d,
        0xfd7cf4a023ef1fa15b5ed01f,
        0x614f6cc4740ae26415c4e2a4,
        0x25466e9c2c5e260d,
        0x3a7df25c7d3a50a8ded19398,
        0xaa4f3e5683fac6df3e50b798,
        0x22bbdcddb09d8418,
        0x38787b516438cf764721eec4,
        0x2f844e2a5f09cdd02a4b16b3,
        0x6979b362d71056d,
        0x2a7c7f705b8779539ec167bb,
        0xbdd88e4c126701b6af84c373,
        0x227a0fd7470aadaf,
        0x9a545d7def496708bef98eb,
        0x93e8449e084f85b007287402,
        0x19e8b2016bc2122f,
        0xf51bb1550adbb6842d98bb80,
        0x485d08bda53ab3645ead71d9,
        0x2f6aad2faae2065b,
        0x9b29baff6e6d96c7c00665b1,
        0x33b67e1f6d2d16f9c88f8880,
        0xd56cc7d9fcdd9fc,
        0xe,
        0xcbc804570d2861891461ebc5,
        0xdca44fce837958d67b20099f,
        0x2d9fa6b627a12e76,
        0x9ddaa7197a9916b28a78b7c2,
        0xaac0168d55668b7c4eea1e9e,
        0x2e6476b7b21d041,
        0x18fabeaa9bae606f9079c3cf,
        0x882f273bf17d65529b8b190e,
        0x275c8b68c4691941,
        0xd26bb2b4a0c5c1caf9bcfd0c,
        0x318483d115dcf6c5eff66a44,
        0x12c16159463555bd,
        0x8ddf3d4a2e20afd341c3f0ec,
        0x836f0e7efe4a6f9050bb8dd8,
        0xebcb07726834ee9,
        0xb8224f47d57e5697540830c0,
        0xf5d3d87373546b238b3c71cc,
        0x252662966ed64777,
        0x763482fa585207ad4166d5df,
        0x33fdfdf97b9f5fcc57021b0e,
        0x1132bbbfd4af41a7,
        0xc3245f53b44d8b7c097c9fdf,
        0x56b1074bf9407d195c3a9f18,
        0x1adcce09b57a6de,
        0x187d905d1dcb72d4fecb91a3,
        0x3ba634ce2ec3f415986aca06,
        0x25cc61d6e4122131,
        0x310d61ebe683ecd845371f6c,
        0x1df7eeed80eea0f931da699a,
        0x1107a0dd08cbf2b3,
        0x47b20f84696b24ef5cfe4cb2,
        0xe1688025f0260d006d18b155,
        0x2f1bba752850da3d,
        0xf342eda6bd8d20e65d382b01,
        0x69b603abb1f26c6665cd4819,
        0x2411a1df535add81,
        0x5d96d00f297478750f4536c3,
        0x33059625b5fd7cf46ab1d5ae,
        0x258b010b83d1c1f2,
        0x1,
        0x0,
        0x0,
        0xe,
        0xace28ce22d0ac4b9b316f80e,
        0xf4130e2b3e0b88905e6465fc,
        0x16a313cc505ea013,
        0xb7e40473b176ac8bd8c7cec7,
        0x28ac3acdf009562ec70691b2,
        0x22adb4d9a68d748,
        0xf59b2d430ad6d63bbefc5a78,
        0xfcca79b9bc8aaf35c21e93b3,
        0x2315dc05b53a8d98,
        0x1126814d905ee0579c58cf83,
        0xaf546f3c8193d7c40f36d3c3,
        0xbc5311b8fad0ccc,
        0xb2ccade9018eacd643e271ae,
        0x261c6ca4330b3dd240b5d6d9,
        0x2dd76abd24c6b87e,
        0x2f345451723b80d4895a1d82,
        0xb7ace272bb2d96a99ec532d1,
        0x7b5ff4f32dce348,
        0xd6824c9062d35bfbb771767a,
        0xa7792908c9e7e788e99eeb37,
        0xf594289e9cf2ab1,
        0x9455d858f57bee19b401fef8,
        0x646356dbe2fd6bae57f64bf6,
        0x4e931796323571c,
        0xcbe11559fce42659d98ad411,
        0xf706f8d3861f13b2095656f4,
        0xf727402f3cc5469,
        0xc85a56b616ad2580c403c6ac,
        0xa86a9ca21d28320c69772a86,
        0x7752ef40aa823be,
        0xe40355b19f5cdefa72d02b72,
        0x7588d26783133ef892b16aa6,
        0x15c4784556bbc439,
        0x20ed8b8d09c4acafce584bb,
        0x18c439e1609531dca5517cd3,
        0x29bdb8aa232de6a8,
        0x9a512d2aaf8c505bbd0a7565,
        0xe5ecc755853f0fcbf8fa44c5,
        0x26fa39a9ae4cd4f1,
        0x68afb25714112f5fd7d598f9,
        0x89d0538ab47fb218faf5e081,
        0x26f3cd38d819e140,
        0x11,
        0x8d082fdda252d4b8957f57fc,
        0x966b5467de87f7f17e51c933,
        0x2f0f238852978ce0,
        0x77edc8716399694cadfbcc20,
        0x19df0c0a57336d7912dbc808,
        0x2f7ddec295246bf7,
        0xff7d7e9d5fc706ae87e9ff4f,
        0x94235000bbf1a9bde9a0a06,
        0x857085345bc14ee,
        0xacf9c9bff75244861ed51dff,
        0xe4b9313318d507e07cfa6cc0,
        0x11220679c5403de0,
        0xc60389401b92b22cc75b81c,
        0x4241c2657b7d3515e3ad24f0,
        0x2ab86633339353ba,
        0xd1e3245e0c418e62bee871c,
        0x913151d5dc73c4b1672a5624,
        0x24e7fb40d7b37c68,
        0xd347a37c5a9f00c141e8c943,
        0xf884886e94fac631a0a1001,
        0x10bcc04d6dbbba9d,
        0x122e594c78dc622a907d531e,
        0x79fdd829f283793e590ae57c,
        0x229663ffb6e2da4f,
        0x463670794d752ef5988384fa,
        0x5bdde106ebe2b26f76c7d313,
        0x17abdf26b9273551,
        0xea9a5b7a0db0ec848bdbfb9,
        0x8868c27af4cec16ef8b88984,
        0x120ae3c3864de4bc,
        0x15a1d12e36316669cc99881e,
        0x9c1525e5a0507e41c909453f,
        0x177fa0b9e244cb87,
        0xa5bd0f19b603c6780e10b69e,
        0xda533af56fbae5a6b837e3b2,
        0x5544f64e95ced8d,
        0x2874484a98416595719e7c86,
        0x16ac80b0feaad17926ae04b4,
        0x7e48aeeb76333bc,
        0x47b20f84696b24ef5cfe4ca1,
        0xe1688025f0260d006d18b155,
        0x2f1bba752850da3d,
        0xf342eda6bd8d20e65d382b01,
        0x69b603abb1f26c6665cd4819,
        0x2411a1df535add81,
        0x5d96d00f297478750f4536c3,
        0x33059625b5fd7cf46ab1d5ae,
        0x258b010b83d1c1f2,
        0x1,
        0x0,
        0x0,
        0x8cee634e132776dc791b39b4,
        0xfbb40876f82ebe1832c0dac1,
        0x11c7edc98b954078,
        0x0,
        0x0,
        0xa,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0xa560a5759c90985fde99aca0,
        0xc5b21186cc6dcd0421026513,
        0x21fb1f47c6ac55b3,
        0x0,
        0x3c26f4ff476ab777dc184776,
        0xbccb2cba46cf421f11eb4d14,
        0x27ec44064c727a3d,
        0x0,
        0xa893636703904fcbe984618c,
        0x73b210a224190b9b7b28784c,
        0x20f05486689dff6c,
        0x0,
        0x74f2a24c1853d803c1b9e310,
        0x9e78bb9233603b686b9d27,
        0x1d13a84fbcd96e81,
        0x0,
        0xe5bc08950f2f1accd92245f4,
        0x3b653bbe7b6cfd9074b07f89,
        0x1638a8a07b89463b,
        0x0,
        0x549a4dee31909bd274709d7c,
        0x2628a928b4ed90e98d5de1f,
        0x1f2c2eeb200495b,
        0x0,
        0xbae71f4f781675cce1119290,
        0x18995b20b8d0966bac7f5c23,
        0x1f7a255155ab7785,
        0x0,
        0x616d2877cb47206e625b0076,
        0xa7255531af3575b0a682d6df,
        0xdd4a0db8187661d,
        0x0,
        0xea99c54030edacb739c9ad0f,
        0x1e2e84792f7a12b330406ecd,
        0x70f1e1a9673a240,
        0x0,
        0x4ca9473b8cae66da0baf8eca,
        0x9ca627187edabffeb80da281,
        0xda800cad866dc3c,
        0x0,
        0x6dcd62554ccd88a00f3e90b3,
        0x141b8118cd6873dc9ac01a64,
        0x19146bc96fa6a4bd,
        0x0,
        0xd21eca6170588371cf0fef12,
        0x2aae89b6d1784d7fe5d6f233,
        0x2fa67b7cd137898c,
        0x0,
        0xb20856046d39da92c0a6898a,
        0xc9dba030db3ed937e781ae4d,
        0x695a8c76fb0f771,
        0x0,
        0x919e8724022c5bd17875261b,
        0x3a2b09cc9362be43a8573a0,
        0x2cf4abb949016ad7,
        0x0,
        0x89062bf5adf784b526337420,
        0xf710d8fb0beb9551fe0e08f3,
        0x1577b6c8f024c52d,
        0x0,
        0x2cb6c8386e51647e028876a2,
        0x3eeb71e38623705690872fa1,
        0xbf610b0d76e1a8f,
        0x0,
        0x92f468ac225e9f9a2b52929d,
        0x28e7d79e30f3f4d4abf38c05,
        0x2e2ba523e6456871,
        0x0,
        0xa,
        0xe005b86051ef1922fe43c49e149818d1,
        0x1f507980eece328bff7b118e820865d6,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x154bc8ce8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x2305d1699a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x144a7edf6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x21c38572fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x2b70369e16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x522c9d6d7ab792809e469e6ec62b2c8,
        0x85940927468ff53d864a7a50b48d73f1,
        0xdc5dba1d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x119d0dd09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x2592a1c37c879b741d878f9f9cdf5a86,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x664e7a2a841e9440a32b6d19,
                limb1: 0xafdb5f6d16a62de9213ee040,
                limb2: 0x13f95a9cdebbf34c,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x7ff039b0dc46b2d7c69d0faf,
                limb1: 0x2e4a2bd3a50e076ea1b3056,
                limb2: 0x2dbf12d12987fc34,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_11P() {
    let mut data = array![
        0x1,
        0xd6b55f04ac8d25212df600ea,
        0x7b4f30c2510b8e3065760692,
        0x2e94120b75c6f88a,
        0x0,
        0x8587afbb1fc5b806fe234a80,
        0x9229a7ca7b176a0d4fe6d03,
        0x26641f01aac06f32,
        0x0,
        0xb9854e42b55b7d4e6e4c556e,
        0xe07a6443ebff04799aa86234,
        0x1c9890fc93446b60,
        0x0,
        0xc166afb1c9df8c91bf2698b1,
        0x3d9154c58fd99a205f4de9c3,
        0x6f3a6b05577137c,
        0x0,
        0x4825ca67851be6ee1f6b3794,
        0xc979e5fd2d566063530f7fba,
        0x11db5add6908455b,
        0x0,
        0xf12f347c2ad8710ed5d55d18,
        0x2c78393162025d8beb7588d4,
        0x2a9bec8b1931fc15,
        0x0,
        0xe,
        0x71eba27b41826bc24bf283ab,
        0xe21e81fdcd47b522ec70a29b,
        0x2145e91b986c8c7,
        0x2dd77bba6aafe3c4c4b473dc,
        0x19e9bf01a26241f58d2e48fa,
        0x1089cdd63bf6128,
        0x4c3b90ed6c9f726f14caaa89,
        0xdbb088c6ea9f2a8e4c3ace4c,
        0x2d329b4da41efb77,
        0x1339dd468a89e06d26236c31,
        0x3df4aa9bd0260d070e17a3e3,
        0x3c7c373ac40cd21,
        0xc0095b95a22947b2b042cf3d,
        0x8c4eafa21e9d29324b2f5da2,
        0xea94204ad37c60f,
        0xc833905947b77032d0919d31,
        0x94ebf3aee1307317eecc4741,
        0x1ead2eda5102ab9,
        0x3b03d7bb1e328cec74df464e,
        0xdc34076bdf945faaf82f647c,
        0x122b87ea14e18e6,
        0x19dc3bf148e395d8970e371d,
        0x275f4e994bcf6ccb4cc3a210,
        0x189b9c7cb9a6a8f6,
        0x7f97e26556897df26bc5f4f8,
        0xd8914ce0df69aeb8bb334813,
        0x124365c6a1855666,
        0xf07fa6784288a389826b5678,
        0x713ecaac7874e9b95aa1f895,
        0x121b1edd709f1a9,
        0xc0dbd845361a434b4b018386,
        0x4514e0417529a0a539f67c54,
        0x1ca778b7354d6308,
        0x46d7b4b8d5e4155cf6957651,
        0xbd5bd9d888a7b8252a4efd92,
        0x17e7f7dbf3fcfdec,
        0x516956c46ae77578a45b5ae3,
        0xd4db8768cfc1bf6260f3a8e0,
        0x210795676becc18d,
        0x266485628614b97e7b143251,
        0x5359529ec2c07801296fbd97,
        0x2ab7d6d5a7efc0a7,
        0xf,
        0x9593a40c7cd1eb788920daac,
        0x905e12f2c1cda893509271fd,
        0x956734a1220a892,
        0x8b08fb38556fa6ef9a8ac857,
        0x5b4ef3d5a7cc994c3b3d8de8,
        0x2430eef9f14a06d1,
        0x3d17d281cbd93b117332f0f8,
        0x260ac7bdb4e1b6a382312b69,
        0x2aad21beeaafbc6b,
        0x371087172d4d3afee8ca3287,
        0x8c323c62838f29df786a0c40,
        0x1e1401a89273e4fe,
        0xa71b3772d505df57ff6cead4,
        0x605fcbcac0849f7d8bca92d1,
        0x2fda36007be6bde0,
        0xff36953682b86f9f6a067a6f,
        0x4baed51bea5fd443b32778d9,
        0xcf74c0954861a68,
        0xfa3fb77144bc8808be511e1c,
        0xe779311facccb78a2370335c,
        0x13091d1997b5d509,
        0x2b7888119069e5707dbc50b,
        0xee40dfcd3bb1ef57e8b750b2,
        0x26ab2a22e8d4c207,
        0x570458c8bff64e906581112d,
        0xd1a3a2e901ed9791ae6d84b9,
        0xd468563aa08178f,
        0x77b429259523d852d9da260b,
        0x278c14a29b407b3ad2975140,
        0x9b5629cbfdc4e4,
        0x831bce379313ee1fb23c3187,
        0x2d72d5f200f94c966ea48be,
        0x12f867a65a93798b,
        0x3437cd37ef93892e101e1cab,
        0x358fed85d8a3ed7c19f0c786,
        0xe06be8522007340,
        0xcfb9c526e0db72a95a81af3a,
        0x7701d2221e7c5a2661351c35,
        0x36bc4f3976d545e,
        0x8e1347706936ded13259e7e7,
        0xa86ab9b486b7359376ea7351,
        0x2f43b65091dc7351,
        0x1,
        0x0,
        0x0,
        0xf,
        0x7aa486832b3a2da9aca816e1,
        0x6dc7b647ef83c0ec9b73465b,
        0x299a095317d5712f,
        0xc03ecc8005db298aa854831,
        0x422110daf02387abdd6fc2f,
        0x1d312d0c2894b1d,
        0x9780d713452084f825aaab62,
        0x4af7392b6d623bfaf50382ae,
        0x143a86f5aa93cfa5,
        0x8730f65c879d517212a0919b,
        0xd75f5dea312105d1dc9adb74,
        0x2977b9dfdd14f237,
        0x1241d59b923eed7b737318aa,
        0xc30d6e476af0ddb913926dbc,
        0x138d4fe20b19a9fb,
        0xdefdb67996545adaca749914,
        0x87a4a3be6e0a755d0a4450db,
        0x11794798a16d3ab0,
        0xa50bab6fd8942a0e18ea1186,
        0xdce1e09c5af5a6c3ad8ae71b,
        0x1159cae06f175716,
        0x62e2b15dfa5493faf87baedd,
        0x279611d3700c9d06e1a44c2,
        0x305a9ea2766eb8bc,
        0x6be82612dae6b6bd972fad18,
        0xc6ebdb69d793a616277feefd,
        0x1b5689f70a259ee6,
        0xc3ac705a12d1c1f6fcf187e2,
        0xc008e7581c3baf74d2a9500d,
        0x3d98e5eac033c13,
        0xe0557431fb97327ba59c142d,
        0xa40aa9a5a42ab34c23d56b6e,
        0xeea0d967684d87a,
        0xa46fe3727bbb5dc2c10573e,
        0x3796a644673584c7a3cbcf6,
        0x20a6c904426b53d7,
        0x22fd054c392eddfd7ad9352e,
        0x2eeb43c80f9a1d69dab0e121,
        0x2d569ce3d7bdd768,
        0x18fbc46bc3c0ff73f785821f,
        0xa37fda78f10f89dc119a5d3c,
        0xcf994bfc716dc06,
        0x5461cf2e1f2181d397333a6b,
        0xefdca12f4dc1e8d2ec58a901,
        0x72de8a88124c27f,
        0x12,
        0xf817dd70c597334ea4d17a98,
        0x4b01d4bb275d2fac47160f4a,
        0x22d391e0509b4eeb,
        0xf2d208a2c60f6299ecc8b246,
        0x4bd559146efb4eab1b8c5f3c,
        0xdd81d3c699aae37,
        0x13489de470d07782699dff97,
        0x45fcd21893970c99b5c6ba42,
        0x615b0d9c3cdf54,
        0x287281c065668de663b37fc0,
        0x2c7b0f3f95daacbd0bc29cd7,
        0x1e51b60805905576,
        0x878ac63db20d20ea944f3054,
        0x32470c7d7894e0259e3c3acc,
        0x2d5c8e92ab430db0,
        0x315dac282d21a7cb28c4cf9d,
        0xafb7bd2a89ff993d61c611,
        0xfd24eebd28e7c25,
        0xece76c8a77f5e975d56732b2,
        0x3757e1459480643f3761fd0e,
        0x2d373819a7bc207a,
        0xa755de409e0ed413a9d4d526,
        0xea24796e5d453762224102ad,
        0x13946584754afd77,
        0x988be2b816c703ec5c745677,
        0xf9626033511f7d68e6e531f5,
        0x1d3df8a96ff4aaab,
        0x748fbf25d5b2a8846d49761,
        0x472bd2535d8488a22763ce15,
        0x8b864530bdbc1e3,
        0x28377a37ebff8fb3d1dc7b1a,
        0xfd87ec323b12027045fedbe,
        0x6861ec82c3370c7,
        0x3feeeae82a93fe65038129d7,
        0xdca6399626918c25be73ce3a,
        0x10c966cacdf8911c,
        0x9fd0f2b32e55263bb73d8333,
        0xb10dabcb98012f68ae78423e,
        0x273bdee2801e6af1,
        0x292489661870710e4a43cb41,
        0x11157980c77be42e2ccb0d24,
        0x262281ed9f3b73e4,
        0x3437cd37ef93892e101e1c9a,
        0x358fed85d8a3ed7c19f0c786,
        0xe06be8522007340,
        0xcfb9c526e0db72a95a81af3a,
        0x7701d2221e7c5a2661351c35,
        0x36bc4f3976d545e,
        0x8e1347706936ded13259e7e7,
        0xa86ab9b486b7359376ea7351,
        0x2f43b65091dc7351,
        0x1,
        0x0,
        0x0,
        0xdce339992f6e8bde7394a5ef,
        0x5379494f801afed93956e333,
        0x15841655de61b558,
        0x0,
        0x0,
        0xb,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0xa560a5759c90985fde99aca0,
        0xc5b21186cc6dcd0421026513,
        0x21fb1f47c6ac55b3,
        0x0,
        0x3c26f4ff476ab777dc184776,
        0xbccb2cba46cf421f11eb4d14,
        0x27ec44064c727a3d,
        0x0,
        0xa893636703904fcbe984618c,
        0x73b210a224190b9b7b28784c,
        0x20f05486689dff6c,
        0x0,
        0x74f2a24c1853d803c1b9e310,
        0x9e78bb9233603b686b9d27,
        0x1d13a84fbcd96e81,
        0x0,
        0xe5bc08950f2f1accd92245f4,
        0x3b653bbe7b6cfd9074b07f89,
        0x1638a8a07b89463b,
        0x0,
        0x549a4dee31909bd274709d7c,
        0x2628a928b4ed90e98d5de1f,
        0x1f2c2eeb200495b,
        0x0,
        0xbae71f4f781675cce1119290,
        0x18995b20b8d0966bac7f5c23,
        0x1f7a255155ab7785,
        0x0,
        0x616d2877cb47206e625b0076,
        0xa7255531af3575b0a682d6df,
        0xdd4a0db8187661d,
        0x0,
        0xea99c54030edacb739c9ad0f,
        0x1e2e84792f7a12b330406ecd,
        0x70f1e1a9673a240,
        0x0,
        0x4ca9473b8cae66da0baf8eca,
        0x9ca627187edabffeb80da281,
        0xda800cad866dc3c,
        0x0,
        0x6dcd62554ccd88a00f3e90b3,
        0x141b8118cd6873dc9ac01a64,
        0x19146bc96fa6a4bd,
        0x0,
        0xd21eca6170588371cf0fef12,
        0x2aae89b6d1784d7fe5d6f233,
        0x2fa67b7cd137898c,
        0x0,
        0xb20856046d39da92c0a6898a,
        0xc9dba030db3ed937e781ae4d,
        0x695a8c76fb0f771,
        0x0,
        0x919e8724022c5bd17875261b,
        0x3a2b09cc9362be43a8573a0,
        0x2cf4abb949016ad7,
        0x0,
        0x89062bf5adf784b526337420,
        0xf710d8fb0beb9551fe0e08f3,
        0x1577b6c8f024c52d,
        0x0,
        0x2cb6c8386e51647e028876a2,
        0x3eeb71e38623705690872fa1,
        0xbf610b0d76e1a8f,
        0x0,
        0x92f468ac225e9f9a2b52929d,
        0x28e7d79e30f3f4d4abf38c05,
        0x2e2ba523e6456871,
        0x0,
        0x7bfeb500d87c8d6a89e3b500,
        0x114bfa8db0c1f0065e73cf9a,
        0x129e9c5a3641b28e,
        0x0,
        0x755ef61cf917721bfef36992,
        0x8f3d6b6348b89a2c0cfa9d3f,
        0x272de7db2186fd11,
        0x0,
        0xb,
        0x4a84eb038d1fd9b74d2b9deb1beb3711,
        0x154bc8ce8c25166a1ff39849b4e1357d,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x2305d1699a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x144a7edf6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x21c38572fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x2b70369e16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x522c9d6d7ab792809e469e6ec62b2c8,
        0x85940927468ff53d864a7a50b48d73f1,
        0xdc5dba1d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x119d0dd09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x2592a1c37c879b741d878f9f9cdf5a86,
        0x30bcab0ed857010255d44936a1515607,
        0x1158af9fbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0x1b45bb86552116dd2ba4b180cb69ca38,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xffdf31426d80fe0e0c50bc6c,
                limb1: 0x3f2ee5e0c6081e2b90431a5d,
                limb2: 0xee45d84f0c8d969,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xe2ce9a7cc98cfccbbfd0057,
                limb1: 0xcb704f80e53cbafb61a4cf65,
                limb2: 0x2249c2809c6b67ce,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_12P() {
    let mut data = array![
        0x1,
        0x57e2861da07fe444d864e7b8,
        0x4a0b6de600262ab16de68a18,
        0x28669b78950254be,
        0x0,
        0x2745ab5de45cf22fd1a74522,
        0x27ef15c45e31a817b1048a65,
        0x17dc0849112ecbf8,
        0x0,
        0x7df5229a14d87738da008a69,
        0xf2a5db8bd4b78bdff344c7dc,
        0x2a30d8bed6c7af74,
        0x0,
        0xe2aa2a5400446ffacd48e14d,
        0x8cfac8f264066d752e5e272f,
        0xb0a5467d67e28bd,
        0x0,
        0x7034ff9709b857c4ab33eca7,
        0x7eb726cdf73bd0a9c359b3fe,
        0x1b2818698d512afe,
        0x0,
        0xd3d5708eb4d5f0ab4d826376,
        0xef5fd40a46625df71a379861,
        0x26baebc7523bbeed,
        0x0,
        0xf,
        0x8d1059236e16259ceb3a8d7a,
        0x5da11f06d7ef71d7a283273a,
        0x81b9b0c4e43c039,
        0xa683fb70616ad9feb7019a14,
        0x206b3b1bf4afc61ecfee87d4,
        0x11286858c3ef271b,
        0xbba09c3d4265b8d8e290257d,
        0xf883fd65c5c67fc2d78f9bab,
        0x1a0fd2a4686b08e2,
        0xa65a64dfc04688c168403ebf,
        0x7610ffe7c95ae03469271904,
        0x239757741d8bdb28,
        0xb88145af33b3aebe63144235,
        0xbac619128c537c0b816e8cca,
        0xc1e547edf591b4b,
        0x5f752cb1398fd93ab9749e31,
        0xb6a482f22316eafaa670c1dd,
        0x1973e63b34401bc9,
        0xd1d5beccd27db94db6e098f5,
        0x2b76fcbc8d05513453a41dc1,
        0x2bfb93ed8c956c3e,
        0xb7b56309dc7585f5b1b01c8a,
        0xa196895d24449021137e2102,
        0x270e6f1479ee6e4e,
        0x1a3f1f76b86c432283d959b9,
        0xdd1a3cbb895069c24a24f7e1,
        0x271f4adaa66fea18,
        0x4be869cd428458271d627d6d,
        0x71ef73c40ec05c44e55e5bc9,
        0x434f7498da19175,
        0x83730368ad87d7835e8c560f,
        0xe658098612660b0f67807bc3,
        0x1edf9ac6de27fbcc,
        0xb21531a0ed7bb6caf99eb443,
        0xc8830557599c7f906a78e60e,
        0x13199185ae9aa286,
        0xca79198bdae996f62b9f2fc2,
        0x131cefec3fb088c35092b6a5,
        0x2828d84e5fdf18e6,
        0xb160a96276a09b765f7eed7d,
        0x7d7f3fbf8ecceb57a3619065,
        0x19a7e69f79f2e2ec,
        0xe3e3961bf5a08358968bbd29,
        0x339200f95c68578e222a5ab,
        0x3adbaba766adab0,
        0x10,
        0xf4d66220e58cab091529a05c,
        0xf71f43f0a27f806f77ef72b,
        0x1321794605adc1c6,
        0xc984c903ef7cfdb59f7d186a,
        0x5d765b208d9fab1e974691bc,
        0x10b0914faaae1018,
        0xd572b08d04c44f25baae162f,
        0x176f5aa1e3cf36b87e522038,
        0x211ca82608617d84,
        0x1fede1fa27752a43532dcc51,
        0x47a697bb76ac28ca0112176,
        0x213844ccb2ff2ef7,
        0x87aa34e9afbb8eb31dab761e,
        0x9065224a87d8602a86cd3b8f,
        0xf2966e89e4d1d7c,
        0x3248fe8d159ad4d69578f7ee,
        0x785f993c8b2d809d639f5df4,
        0x1d2b95446f2edf77,
        0x856ec0abe03e4550bd59d0d6,
        0x391df5381bf5a4f33e90a92c,
        0x11d19e0b9226942a,
        0xc96449089f3b9db33215d556,
        0x2daf3d3336ce2157dbf7a46f,
        0x1815cc6190c835d9,
        0xaef3c3e71eb10cffb4725eb8,
        0x6726d237c6ab057826453e17,
        0x1066a6f24133f9ba,
        0xfdde85dca5475bd852e28839,
        0x81d50fd23abedfa475df5c2f,
        0x2cb43def48552ea3,
        0x6af5b247da6de8318040966e,
        0x955fcc306f78eb8a8d8a75c8,
        0x966bb399dfbbc09,
        0x6bcc092842f23a60bb6e6df5,
        0x2bd3d2d35c4a863a21f1440f,
        0x2772b39ea9c9ba2a,
        0x40c7e2142b2dd7978d911408,
        0xf8ecc4071ff40ca953c7e320,
        0x29c595d80206b341,
        0x7e9ad03f5d56e7668d31047a,
        0xea440d81b242c947f9bf114f,
        0x1e47cd326d55606c,
        0x50885e782ca1ac44f3dd8497,
        0x1204fd82c3008b3381f28967,
        0x28bb77b115917a7a,
        0x1,
        0x0,
        0x0,
        0x10,
        0xec496d99d0a50c1ffcf0f4d1,
        0x4f6a9b6d55fd19303bed0b6f,
        0x2ef77038ff8feb7f,
        0x10c616e25d9c5bff2b671d3a,
        0x1eb68c26306fa78132061270,
        0x1c10403290bc34b3,
        0x1fbd25ccb0cc4457dc8a0036,
        0xec82e2cd5a204b0f071e2454,
        0x3ea1ab9797edae3,
        0x7acab0b197e585e51bf2f935,
        0x1fb74feba72e50434eb3d455,
        0x9a314e5d110697c,
        0x19ea81b241abc789abcb9f23,
        0x2b90cb8b5ce465e82c2962bc,
        0x56a6aa3f3b1d865,
        0x2111f0cfa752b5d202967809,
        0x42e22d5ce5aa840bccc03333,
        0x1827c27e51cb59b0,
        0x78b297632cd71ebb52b2dfb2,
        0xaa7d3da45d4804e2a0c1156e,
        0x1b067c371e279154,
        0x46af5176076710d6a2aa325e,
        0xb2b64f56e4f273289cc67a6f,
        0x211e0f3cf5c654f4,
        0xcdfbcf1adc479f7bf56dead,
        0xb72f6965898220aa9ccac9c3,
        0x21fd2bd28b5e978,
        0xb740018cf91441ea37ff55da,
        0x4a9dbe0c63c8047f60bf0d5e,
        0x251e82478af85e31,
        0x83529344a1d6c699c8d5d72d,
        0xb673b5e095c7527e43ba5620,
        0x2644b43c3305ef0f,
        0x1e35fa80e2fb1d09f8c1359e,
        0xe89e287cd3489e3f9f1b134a,
        0x1ef051b749d61dbb,
        0xa35234b396eb0953f5bf5f14,
        0x1add0da2ac9d429f7a80601a,
        0xa38587eb0245200,
        0xa1d42133760c8a9ee3c40f86,
        0x7d7af71013c31a583d0f77d3,
        0x1b45dae7a12de879,
        0xed1868cd641d82578d43443f,
        0x74edf1b66cac00885e04102f,
        0x1b35d26d42fde077,
        0xf65e7e4f4690d30ffcada3b9,
        0xac80868fad0c3d1385fbcb6b,
        0x1cec89ae978a9f3f,
        0x13,
        0x11d58fc99cd65b71283c59eb,
        0x3a0afcddde1f215a9fcf010,
        0xd85177dc7d182fd,
        0x78874a24affee86808b160fc,
        0x1d05951da16db526e587c429,
        0x6a03066f19aaf5c,
        0x88138d71dd8e416dda7086ed,
        0x155e3fcdf14d821d7efabf9f,
        0x11cc82dbffda2c2f,
        0x8abba753755c5f7fcf1f0f07,
        0x67143795ee21310e38caa1b9,
        0x23189510b10f2553,
        0x27d6785597724fb4571a4071,
        0x605070be0fc8021d6ca9269f,
        0xe6441b8d873ba3,
        0x3fd82edb3c4fc4ad2da59f6b,
        0x4c38e6bdb4d71fe872c3f5d6,
        0x1522cf177234e836,
        0x1debb9f7da9e515e6036ee21,
        0x8b5ec308e522e09469ad5734,
        0x14a69cb945991923,
        0x6f8650727fb7b8003a384b71,
        0x294854e71b4449b552e7aaf,
        0x293d9677ebc02b88,
        0x6e719f9ba324b95339e0adbc,
        0xf0ad45cf62da35d1ca3db014,
        0x28b455df61e50b10,
        0x453ee61924a085323c4ec51d,
        0x1efc43aa4d5e50d9edfa0e84,
        0x201e6855d7987dea,
        0x1c3fc3f6e99513257dcbd80b,
        0x6b437f1f544a863bee618afa,
        0x97048e6b6a599b3,
        0x2e8b502c62f69aaa621d1181,
        0x9279a229bacaf0b418166d08,
        0x174503b14b855f35,
        0x58bcaa777d9778df0c4033bf,
        0xe7fdb54309cdd7e186ffb02,
        0xc1194df769a098a,
        0x3da5b450925e17bd6fff4a5f,
        0xf24de56b299859c3b2154a9e,
        0x1af179d008723698,
        0xbae1eb1f029137e3a9b89ffc,
        0xde2cd1f7e541ce6b3acd829,
        0x187c0b248bd75a57,
        0x40c7e2142b2dd7978d9113f7,
        0xf8ecc4071ff40ca953c7e320,
        0x29c595d80206b341,
        0x7e9ad03f5d56e7668d31047a,
        0xea440d81b242c947f9bf114f,
        0x1e47cd326d55606c,
        0x50885e782ca1ac44f3dd8497,
        0x1204fd82c3008b3381f28967,
        0x28bb77b115917a7a,
        0x1,
        0x0,
        0x0,
        0xcf703b0e37c040dfa703178d,
        0xfd56a603012233a782ab04aa,
        0xd587017346ddcb1,
        0x0,
        0x0,
        0xc,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0xa560a5759c90985fde99aca0,
        0xc5b21186cc6dcd0421026513,
        0x21fb1f47c6ac55b3,
        0x0,
        0x3c26f4ff476ab777dc184776,
        0xbccb2cba46cf421f11eb4d14,
        0x27ec44064c727a3d,
        0x0,
        0xa893636703904fcbe984618c,
        0x73b210a224190b9b7b28784c,
        0x20f05486689dff6c,
        0x0,
        0x74f2a24c1853d803c1b9e310,
        0x9e78bb9233603b686b9d27,
        0x1d13a84fbcd96e81,
        0x0,
        0xe5bc08950f2f1accd92245f4,
        0x3b653bbe7b6cfd9074b07f89,
        0x1638a8a07b89463b,
        0x0,
        0x549a4dee31909bd274709d7c,
        0x2628a928b4ed90e98d5de1f,
        0x1f2c2eeb200495b,
        0x0,
        0xbae71f4f781675cce1119290,
        0x18995b20b8d0966bac7f5c23,
        0x1f7a255155ab7785,
        0x0,
        0x616d2877cb47206e625b0076,
        0xa7255531af3575b0a682d6df,
        0xdd4a0db8187661d,
        0x0,
        0xea99c54030edacb739c9ad0f,
        0x1e2e84792f7a12b330406ecd,
        0x70f1e1a9673a240,
        0x0,
        0x4ca9473b8cae66da0baf8eca,
        0x9ca627187edabffeb80da281,
        0xda800cad866dc3c,
        0x0,
        0x6dcd62554ccd88a00f3e90b3,
        0x141b8118cd6873dc9ac01a64,
        0x19146bc96fa6a4bd,
        0x0,
        0xd21eca6170588371cf0fef12,
        0x2aae89b6d1784d7fe5d6f233,
        0x2fa67b7cd137898c,
        0x0,
        0xb20856046d39da92c0a6898a,
        0xc9dba030db3ed937e781ae4d,
        0x695a8c76fb0f771,
        0x0,
        0x919e8724022c5bd17875261b,
        0x3a2b09cc9362be43a8573a0,
        0x2cf4abb949016ad7,
        0x0,
        0x89062bf5adf784b526337420,
        0xf710d8fb0beb9551fe0e08f3,
        0x1577b6c8f024c52d,
        0x0,
        0x2cb6c8386e51647e028876a2,
        0x3eeb71e38623705690872fa1,
        0xbf610b0d76e1a8f,
        0x0,
        0x92f468ac225e9f9a2b52929d,
        0x28e7d79e30f3f4d4abf38c05,
        0x2e2ba523e6456871,
        0x0,
        0x7bfeb500d87c8d6a89e3b500,
        0x114bfa8db0c1f0065e73cf9a,
        0x129e9c5a3641b28e,
        0x0,
        0x755ef61cf917721bfef36992,
        0x8f3d6b6348b89a2c0cfa9d3f,
        0x272de7db2186fd11,
        0x0,
        0x499828e9a86afe3b8c909275,
        0xb8910cabe37f6e8f4bd4b4c1,
        0x2634fe56d6751316,
        0x0,
        0x777228ef48ddade6caeb3c9,
        0x6e0e16c7f54463307a858b78,
        0x6e2e3e3a1dc83da,
        0x0,
        0xc,
        0x3405095c8a5006c1ec188efbd080e66e,
        0x2305d1699a6a5f92cca74147f6be1f72,
        0x1775336d71eacd0549a3e80e966e1277,
        0x144a7edf6288e1a5cc45782198a6416d,
        0x2f1205544a5308cc3dfabc08935ddd72,
        0x21c38572fcd81b5d24bace4307bf326,
        0x42930b33a81ad477fb3675b89cdeb3e6,
        0x2b70369e16febaa011af923d79fdef7c,
        0x2648ee38e07405eb215663abc1f254b8,
        0x522c9d6d7ab792809e469e6ec62b2c8,
        0x85940927468ff53d864a7a50b48d73f1,
        0xdc5dba1d977e9933c49d76fcfc6e625,
        0xd344749096fd35d0adf20806e5214606,
        0x119d0dd09466e4726b5f5241f323ca74,
        0x5306f3f5151665705b7c709acb175a5a,
        0x2592a1c37c879b741d878f9f9cdf5a86,
        0x30bcab0ed857010255d44936a1515607,
        0x1158af9fbb42e0b20426465e3e37952d,
        0x5f3f563838701a14b490b6081dfc8352,
        0x1b45bb86552116dd2ba4b180cb69ca38,
        0xc87a746319c16a0d0febd845d0dfae43,
        0xe0062d1b29a8b06daf66c5f2577bffa,
        0xa25b59fd92e8e269d12ecbc40b9475b1,
        0x2689f61688c132adefbfc19ee8f6cf32,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xcb36822ddaf2d31c783a48a,
                limb1: 0x8bdd749154654edb9553e2d,
                limb2: 0x27b9db3dc009b797,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x98d17fd0a10d23d8218f14dc,
                limb1: 0xe9084619146a3dc82331192,
                limb2: 0xd5e171223497006,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BN254_1P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x8,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xb4b30030d604f094d3602296,
        0xa0e983b28babaffaeaa2a062,
        0x471c9e526d4e91e,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_BN254_2P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x9,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4438dbd4fc537b19aa9029a1,
        0x71338662165803d1aeba36ff,
        0x8463adc2f6b3ff5,
        0x0,
        0x1,
        0x75937bc3dba286ad2bd8fe5,
        0x575d166325014e975405464f,
        0x1437873db8d7dca1,
        0x0,
        0x2,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x2,
        0x0,
        0x0,
        0xb4862b21fb97d43588561712e8e5216a,
        0x967d0cae6f4590b9a164106cf6a659e,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_BN254_3P_edge_case() {
    let mut data = array![
        0x1,
        0x5b9b511a35490c4f05d6e4e7,
        0xf11ec8642a0df9cb0b8f2cdd,
        0x2b568cd4a3e221ca,
        0x0,
        0xb45c3680d8359a0fdb47de6f,
        0x4c17fe1c96f237095df8c737,
        0x118fc0474955ac2b,
        0x0,
        0x47bec5e5e1f295cdcd7689e9,
        0xcb171283d651071401630545,
        0xa401c0298cd5f83,
        0x0,
        0xe5d2831c05e61956d8725b57,
        0x6bb84991518471727263fde0,
        0x15e82f62ee3caf32,
        0x0,
        0xd15f8e23aaf3af13ab5ba169,
        0xb0ff9631870f189040aec289,
        0x1c77509b88d3bab7,
        0x0,
        0xb620e3716b30b1003beab421,
        0x1d6aad1137155249c5d4f785,
        0xbf95d2db0be45f9,
        0x0,
        0x6,
        0xbba74f84d6d3a3c60dc3cd41,
        0xf36f80b4b1a3f69f44ab1b6a,
        0x16adf9385577d09,
        0xe3748a5201028055d851d0da,
        0x7d4d0c483a8050c66e35c6e1,
        0xe58ca0d31a6a8d2,
        0xa59f084b703ac17683ca07f9,
        0x7f1a924087f5442a95a66068,
        0x284cb90ec99aa375,
        0x1c72c56de666104df8056a9f,
        0x3b0db6cd914b52831fc41396,
        0x1953864f49cc904c,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0x36208c0885fb7058abddd334,
        0x3db412a5e6005a05ab374adf,
        0x2b398812b30eb292,
        0xdf68dc78906c44847536a23d,
        0xa6bbd9ceb18275da98d88a68,
        0x11b898e607064ade,
        0x6f0aaf5b805720e403eddcdc,
        0x11afb25fbfae966d38aea0d6,
        0xc14f6e4a6a37797,
        0x712f22263ef5e91c488b0722,
        0xbf68443cfd66208b1f0a2b4e,
        0x19990ced3afb3faa,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0x210edfad5881dc6bf8ec5f58,
        0x3c354ff8e0cba98c03e7c606,
        0x1d8c9c28e2545384,
        0x95055f0bf55a751df0f89316,
        0x652b61b3a2e6073c3af64fcc,
        0x23080aa3e59e0cc4,
        0x9e36b036fbad71c308a43548,
        0x5261fa4f1b50b2519194e556,
        0x218c5e7ffb07ea5e,
        0xc8285d3649f36c8f5daaa331,
        0x3f053e816c7552d20ecadbc7,
        0x2527827f86516567,
        0x7b5fb11b84d5950d23c96fa4,
        0xe2b051a2b9c1cc88b1d77617,
        0x1edee19e79e4e9ad,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xa,
        0xd17e0eff19b138dc529f7f0e,
        0x487bac84aefe5d55d2a30b7a,
        0x20e3fb5256c8d763,
        0x35c8cadc752441768726e970,
        0x3be347b593060932330834a9,
        0x4c57c3f33e14072,
        0x4d200e12810562ac0bc99694,
        0x350f171f3f0bc347aa0be283,
        0x243ee4adf3ea66c5,
        0xb8ca5d60ca9c137fd484ee0c,
        0xb4c53efdb300aebd952f7a7,
        0x173c11f4a19d313f,
        0xdf68dc78906c44847536a240,
        0xa6bbd9ceb18275da98d88a68,
        0x11b898e607064ade,
        0x6f0aaf5b805720e403eddcdc,
        0x11afb25fbfae966d38aea0d6,
        0xc14f6e4a6a37797,
        0x712f22263ef5e91c488b0722,
        0xbf68443cfd66208b1f0a2b4e,
        0x19990ced3afb3faa,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x48c8946a24cb60456d420600,
        0x9ed381bdd7c9eeb7bafa2d1,
        0xa24e6a0b6a74206,
        0x0,
        0x0,
        0x3,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0x772ca79c580e121ca148fe75,
        0xce2f55e418ca01b3d6d1014b,
        0x2884b1dc4e84e30f,
        0x0,
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x57fa42444057cf0c1d62ae3c,
        0x4f48d341183118d68ea41313,
        0x1d2d2799db056ed1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x3,
        0x0,
        0x0,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x1521f387af19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0x28fcb26f9c6316b950f244556f25e2a2,
        0x0,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x21725fdb9f487676e547051,
                limb1: 0xc23930e4f96498a77a316418,
                limb2: 0x1244cb13309195ed,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x6251c487cf0f5a44ac24a45b,
                limb1: 0xf1db336c10ce7fae206dd8dd,
                limb2: 0x1da9c56792006d76,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_BLS12_381_1P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x8,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x64c9ef86686ed7cb0fa42251,
        0x17c282e8624e1788ff8fbc5b,
        0x712b5be5bb66eb8f72af3c9c,
        0xc182b0f0e8d6cf017feeb4d,
        0x1,
        0x5c35d2ca01541a34fb66d844,
        0xda7b85c12db291e5c2c802b2,
        0x5987ec0b8e681de8e6dd0e3c,
        0x1d4ef28e7e9c0cae8144b52,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_BLS12_381_2P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x9,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xa9125be5f17f34ce6de5896b,
        0x77ff67ddaf6b61c4088ee57a,
        0xb4940789dbaf29c60e3ae417,
        0xbab38248ecf0eb99f06ac59,
        0x0,
        0x2,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x2,
        0x0,
        0x0,
        0xb4862b21fb97d43588561712e8e5216a,
        0x12cfa194e6f4590b9a164106cf6a659e,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_BLS12_381_3P_edge_case() {
    let mut data = array![
        0x1,
        0xf6a31a9a41fd0378150dc360,
        0x7a355df87079a4cf4c78fd36,
        0xbd92b81f9f87a14ded17256e,
        0x1259b26908470ad4f6be037c,
        0xfbe2abbd7e05b561703438fe,
        0x892d1cc404bcc0c000d206cf,
        0x962b60138682dd48428b2a8d,
        0xa68b20ba71d8fde199d485b,
        0x7c866be61fbaed5ef7d1122e,
        0x7fed89acb87ce49d38175a6f,
        0x30dbb6ee5876fa6873045668,
        0x60c4285948cc11859881060,
        0x5a931aaa036da6ee08c49738,
        0x1c92b3a560ce474174cfa275,
        0xa4f783dad6c9da34040c6553,
        0x8d9752128e5b2be6254e2b,
        0x663acbe46ab1edf9e0302ddb,
        0x133eafb6b82660d39354a91b,
        0xec9146f8b18f4ccfa8f938e,
        0x1127139158d2558af3ede6c1,
        0x2e2dc7b89be127d3eee7e15f,
        0xb9b688b1096640c721587415,
        0xd09f1d870e1c2d4e08674d2b,
        0x12308a0685f2c08876496459,
        0x6,
        0xeb35755831b8b274a72187ca,
        0x619d73fdc8ca106f251bb23f,
        0x83526e9a98267e300003744c,
        0x74e843f7fd9b3c1eb4f8a71,
        0x263294ccc2a97ffb2ec76a8e,
        0xd158f356f93267263354d7e2,
        0x714889219b424296b85139b5,
        0xa8f3019b0a505d2ffd1caac,
        0xbf917add7208b045d906ff3f,
        0xcd23d9673211a97506787efc,
        0x7179e6dc54430c65b26530b3,
        0x17bb9453c160e11d98066ff9,
        0xebd56ed5f538ae24aa8dc0e2,
        0x3ba413917f065ec7e45c2721,
        0xa9b1360228e4503e35364d2b,
        0x1301d2f14e9626ee2309422,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0x9b4aac8938de0d6d29299aec,
        0xed00b7c2b8d648ca0d5cb5bc,
        0xa052f33dafe080f320f1ff8e,
        0xa83d431853448de44c440fa,
        0xc5a014c4a628fb418afdc431,
        0xff1bc5487dcfd4fac800f591,
        0xf09802d0f98c9a1e7d8b3326,
        0x125f173ee992bebf294f042f,
        0xb9100f1617268243b95b9208,
        0xb1f5e20e709d1d7cf3b2d087,
        0x39c86f0b79ca465e49a95325,
        0x1269c9e792e7575a1b407349,
        0x2cb2b76ffc0a57eef2f100c5,
        0x8c7ae8ef5688c4968d0ade85,
        0xf0719994ff5b34265dca49d0,
        0x141860f0e8a032121ffd28c2,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0xda7bc5a089fc35de52b5ab6d,
        0x374d31abeda2bc7d1fa3314b,
        0xdc9b575368802cb064ea215d,
        0x586829f9bf69e05abd324e6,
        0xdf7cbeaa6d31e6304e21b449,
        0x98191ab75477b88d9100a3b0,
        0xaccec7142afafc55a16d5a5d,
        0x2145b524c0790e06e301e66,
        0xc03bb07a666edb299db815a6,
        0xfc9f8e6a16f220fde529492c,
        0xa907065eb5bf6b0eb40cf236,
        0x1149cca478baba09dee1d533,
        0x8e5d1fd64b21b819208b11ea,
        0x66e777b31da1abe09cc24423,
        0x426e7a0bf850c1501a08cee7,
        0x7dbacd73a097db82eaceab9,
        0x7b6589cb116ffb6c5cd73707,
        0xa62d2451aecbbdb4a8c8ed99,
        0xca0de292aeae27f922326d89,
        0xd8a62ad9db2e6794979a947,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xa,
        0xbbd6b225297935b4a4a6c105,
        0x4cd20c69eca82d0416c6d6f3,
        0x3e00201f5b0ab8479042eb7c,
        0x100e3edbdb513cdec7f55c34,
        0xb3d8531324a5ed062bf7bb6e,
        0x2e0d6fe009dd67a2e2abd649,
        0x3bc8b1951d43d1700f22a71d,
        0x157a3927334b2dc80f04c153,
        0x81983c58e89c090ee56ef2ca,
        0xf975e2f7d51289ab91734221,
        0x608a627f1e3a826f3f9b2717,
        0x15a503c9d89d9033d6ca7db8,
        0x3a198a49fb0a6d28f4ee9dff,
        0xe959e39d2ee678b7e5842fd5,
        0x9836530b7fe76efdbd8bee92,
        0xce222367b355d57e365ece3,
        0xc5a014c4a628fb418afdc435,
        0xff1bc5487dcfd4fac800f591,
        0xf09802d0f98c9a1e7d8b3326,
        0x125f173ee992bebf294f042f,
        0xb9100f1617268243b95b9208,
        0xb1f5e20e709d1d7cf3b2d087,
        0x39c86f0b79ca465e49a95325,
        0x1269c9e792e7575a1b407349,
        0x2cb2b76ffc0a57eef2f100c5,
        0x8c7ae8ef5688c4968d0ade85,
        0xf0719994ff5b34265dca49d0,
        0x141860f0e8a032121ffd28c2,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xdd789d7c02428dc60246d081,
        0xc9de1388dd3a5eaff5de8784,
        0x6eac6c37a0a90e65dd33fbc8,
        0x89f38f13155da73ef366afc,
        0x0,
        0x3,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x3d77d61326ef5a9a5a681757,
        0xd3070afd4f0e121de7fcee60,
        0xdf9ef4088763fe611fb85858,
        0x11a612bdd0bc09562856a70,
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xaefd0d854043fd325dd3c34f,
        0x9b63c98d9a7845c52e1e2b0f,
        0x9db0be660d847ccc58358f3f,
        0x17cb6c41f0c4e1a7394ab62a,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x3,
        0x0,
        0x0,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x2a43e70faf19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0x51f964df9c6316b950f244556f25e2a2,
        0x1,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u384>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x2b828af1f5fe30bbe7a1074a,
                limb1: 0x5669beaa69827b52dc874c9f,
                limb2: 0x648af2c24d82a5a758c96b8e,
                limb3: 0x188bc245620ae6b6afec9dc3,
            },
            y: u384 {
                limb0: 0xdc96192f803ef92f56d59758,
                limb1: 0xfc6139925c05a030065d564,
                limb2: 0xb24447300bec56efec94dcf4,
                limb3: 0x156f97e5d31055c0a5fe154d,
            },
        },
    );
}


#[test]
fn test_msm_SECP256R1_1P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x8,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x3ca5552c96ec2a5049d28426,
        0xc8669717174b973f4de5a646,
        0x4fbfb38ec0c14e6e,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_SECP256R1_2P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x9,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xcab2bdb49d36853afc772e84,
        0x9388d6adcd576a1b6ae83895,
        0x4a4640dc5b206990,
        0x0,
        0x2,
        0xa65fee3201baba3b9c2f59b5,
        0x1ff3274e058360d6b1e64db3,
        0x2af2ec2fe4bf31ee,
        0x0,
        0xda5e742b60f13ba9478a5085,
        0x4ef5a3a77cc1f80dedc41ae6,
        0x511bc713034c93d4,
        0x0,
        0x2,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x2,
        0x0,
        0x0,
        0xeb1167b367a9c3787c65c1e582e2e662,
        0xf7c1bd874da5e709d4713d60c8a70639,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_SECP256R1_3P_edge_case() {
    let mut data = array![
        0x1,
        0xf831856624736393b3b76d11,
        0xc165a27df5b76589fe2ce1e2,
        0x2a23444ace6bef77,
        0x0,
        0xa6bbeec6fb0369c3de339579,
        0xd394f6a5704d1de2da06048,
        0xe8057073c0fde87b,
        0x0,
        0x3b1d72dc227f75f02874e08b,
        0xd395fa7c14d6ff33d03e1baf,
        0xbf16fcc65f95b486,
        0x0,
        0xe2461ebbe7a5b4d76dbef92b,
        0x3eecb75c5315cd3d2d0b9456,
        0x8192517353bc6523,
        0x0,
        0xcff970bda4db69dac06ebad8,
        0xdee4204cca252abd67132509,
        0xa79c0006b6ca7fab,
        0x0,
        0x759642b853dd01b9d2d7bb18,
        0xe1e1d2f8bf0f2f5b463bfae0,
        0xbc3c71be130f204d,
        0x0,
        0x6,
        0x9103bd16e2232359c067051c,
        0x47056dacf5ebc26121584255,
        0x510b978b1c20d16d,
        0x3866c583186023310ae6006f,
        0x94b09aee6293fdcebd256a74,
        0xe9964a385943e6e7,
        0x4e66f352e983f05cd787905a,
        0x23e4fc7f433c2785b079f227,
        0x6b71075ebbeffe51,
        0x8d716d3dc708179fd42941cc,
        0xd8e4a54aef03a57c0c4a1845,
        0xed1182498b974526,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0x32f47eb672f5bb330a73bb4a,
        0x1a8091c6f1f3893bc55d0fa5,
        0x8f7089d778e965c2,
        0xc7a8f052fc045a7c4ceff3e,
        0x8b14021f73a80543f9ad14a3,
        0x508a2680c93698e4,
        0xfc72a135b2aaa8dee44f9400,
        0x9f66c7f22c15ecf4bac82c86,
        0x6724ac9ffc3487b8,
        0x28b8828023437a8d6e45900c,
        0x490cdc11b822023a5eedbb11,
        0xcf427b32bdfa36c7,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0xc31b8bfe95c99a953dfbeabd,
        0xe63b42304b4dc475c331d5ac,
        0x499b1e200475197c,
        0xf166baa3bc64785c42f2e9eb,
        0xd575ea7fa8f28aaa7a9b0f64,
        0x128864b271e1ebf2,
        0x116db906aee291051c9ce08,
        0x2943633ba402debefac3b9a0,
        0x36d5e25b3ef465fb,
        0x525c3dbd1864649780b5a73e,
        0x65b5ed8ec92dd969aa336caa,
        0x3f69b099f8b6619c,
        0xdcb8bc014e35c6d4febb77c9,
        0x25ffc8096d6e87b1e76b8e6e,
        0x45eaa89a67cda802,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xa,
        0xbeada704feb34546e4301ab0,
        0x5b533141bf8fd64c6afe4bd9,
        0x4e4368ec25ed3c45,
        0x1a26c33296a4cf0e96b4d599,
        0x27f1e1d4a919a68c6edaf9df,
        0x7e1cc39a4fc825b8,
        0xa37d8288f41c6ce32ecb17e2,
        0x56f36c3517bd230fefdbda97,
        0xde1b03a23f8bb59e,
        0x9d3ed76f0cda7c44b1892480,
        0xad525772678432d3dd0efe6,
        0x1e5683ea757beea2,
        0x5ea4b87b01c4123da1d0af63,
        0x63d92b3fc1da85514200ea22,
        0x3d88eabf39828878,
        0xfc72a135b2aaa8dee44f93fd,
        0x9f66c7f22c15ecf4bac82c86,
        0x6724ac9ffc3487b8,
        0x28b8828023437a8d6e45900c,
        0x490cdc11b822023a5eedbb11,
        0xcf427b32bdfa36c7,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4d4cd96c2a9c3eeb03a36099,
        0x68066c4db63f81f0b9abcbb6,
        0x3cf75d802ff73183,
        0x0,
        0x0,
        0x3,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x7f8bb562ff60a902ef14bcb0,
        0xeb9420089fa531db62e806a6,
        0xfd028df433dfd5cc,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x3,
        0x0,
        0x0,
        0xe443df789558867f5ba91faf7a024204,
        0x23a7711a8133287637ebdcd9e87a1613,
        0x1846d424c17c627923c6612f48268673,
        0xfcbd04c340212ef7cca5a5a19e4d6e3c,
        0x3,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x33ee7695471a03192ef22266,
                limb1: 0xb449dd8cfd0c3438e14a718c,
                limb2: 0x1fbb33f079b828e2,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0xb411f97aeec2eae6044122ec,
                limb1: 0xcdce180b60667260d7ce284e,
                limb2: 0xa73a7381dd3b07c,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_SECP256K1_1P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x8,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x69588367250041f054620d3b,
        0x1174ea4879bb0b580868e8e8,
        0x7ea9eb687089d547,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_SECP256K1_2P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x9,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x862bbbc7625bb23fe3ee10f0,
        0x868baf0626c044f9a077a0ca,
        0x155e74b122885e85,
        0x0,
        0x1,
        0x610f7ffe1889436670829e43,
        0xb1f2329808ffbbfd2a7fce4c,
        0x56c9e223dae04be9,
        0x0,
        0x2,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x2,
        0x0,
        0x0,
        0xeb1167b367a9c3787c65c1e582e2e662,
        0xf7c1bd874da5e709d4713d60c8a70639,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_SECP256K1_3P_edge_case() {
    let mut data = array![
        0x1,
        0x81f93764cd87ff5af9aad87f,
        0x8aa0792747a5b8ca16b9e369,
        0xce30fe4be7b17451,
        0x0,
        0x5b77703ae4639b17cfca6124,
        0x86b771c3a15eee8b1ca9feaa,
        0x5acc99b6152d28a4,
        0x0,
        0xff8927eca139c99d7960c8ef,
        0xec91eee7a0301418e07f41fc,
        0xb49b07479d1c26aa,
        0x0,
        0xe496c28fbc13ed8a0324b632,
        0x2d5583856241be833fec7c9d,
        0xff1c723bbb39f40b,
        0x0,
        0x3efedfaf5b7ce0a80c4fa5a1,
        0x2c16205bc2efe9dcc6eefa9a,
        0x3f2cefb8efbcc695,
        0x0,
        0xc3eeedd13fa2c621a214d57,
        0x5e42015603c2cf1a184c7bdb,
        0x8ab02685472a4433,
        0x0,
        0x6,
        0x20a01cfce8a5bce328cd8cb6,
        0x611f3fb42b516f17cb0584f8,
        0x763b2c950e4c198e,
        0x462d15939fcd221751c6ac8b,
        0x946592683858eab6a9652826,
        0xa1544fca41ad8c11,
        0x31f0a0eca245552ecd7315f8,
        0xf2429ee89609dddcb454a01b,
        0x2c1624c1c090dd7d,
        0xc709d17953074ae5eadde9bc,
        0xeb446dc59a11fc094796dd40,
        0x47408b85eea80d47,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0xb491b2471055bcbdd1dbef77,
        0xb90603fde64b1a2ce0b61eca,
        0xb4aaae5c76b88642,
        0x3eba2b268c80681c5c311e90,
        0xf11a024b8e0531687340bd0b,
        0xc1b2df975bb5b863,
        0x2eaecbac827c9f309771dbcd,
        0x4f246630ea9180999a632579,
        0x39f4d03f54586bae,
        0x4180fbf542589c18eb2d7044,
        0xced4c189fdc0356f499c8870,
        0x7b2973b1222292cb,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0x875809d83e33cb3b603309aa,
        0x6ad6d4a704b31d0441fad306,
        0xe478235415e659d5,
        0xc29722eb23a6c51f15c5b6b7,
        0xcaad40fc21df62667f2f7c9f,
        0x283d3160bb315f86,
        0x4524bfca28d2a6c6ba96c39,
        0xa35f0c26665675ff32ee3a9c,
        0x92cb938207ec8ab2,
        0x151c89d4b8f7c9e45b67a274,
        0x5a281d2133f588c400ee55b1,
        0x53876cce8038fdba,
        0x7ac4deddb182928226db63f1,
        0xb766e28c02e373347c52e9b0,
        0x4a7ea9b2ab26031a,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xa,
        0xeffbdff172582934bd039b85,
        0xf2a1bf14c0db73a24fad78a,
        0xf0aac4873f0babd3,
        0xb7172e0dd782d8cb8557e905,
        0x97b61010e22459db26c52b4e,
        0x4be41d2381f80abb,
        0x46c791b791685a55241d066c,
        0x29fecb5669fa843338b60650,
        0x95b1b1bb4e6af1c4,
        0x7f1895fbe0c20170401a1097,
        0x60d74ec3d68c9037e3fdd9dc,
        0x12ccd83465aa89d5,
        0x3eba2b268c80681c5c311e97,
        0xf11a024b8e0531687340bd0b,
        0xc1b2df975bb5b863,
        0x2eaecbac827c9f309771dbcd,
        0x4f246630ea9180999a632579,
        0x39f4d03f54586bae,
        0x4180fbf542589c18eb2d7044,
        0xced4c189fdc0356f499c8870,
        0x7b2973b1222292cb,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x2c77bb8f219c4f86d830378a,
        0x7762e343071b3889761f79fb,
        0x96e3952b500641,
        0x0,
        0x1,
        0x9d1cd65376303ffbede41478,
        0xc58c82a3af69a89f7f34d76,
        0x4446aa183d69a768,
        0x0,
        0x3,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x589fa250d638e35400c12ddf,
        0xb3aac19fcb5095808402aa7f,
        0xed6de6590d0195d1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x3,
        0x0,
        0x0,
        0xe443df789558867f5ba91faf7a024204,
        0x23a7711a8133287637ebdcd9e87a1613,
        0x1846d424c17c627923c6612f48268673,
        0xfcbd04c340212ef7cca5a5a19e4d6e3c,
        0x2,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0x55909ba28af82ea934a4b85d,
                limb1: 0x4bf448ca5d57fb119c843e0a,
                limb2: 0x6a2275491b991ee3,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x5bf4bf0cefc9553422e60eb0,
                limb1: 0x178d55925d3d72f44783f626,
                limb2: 0xe13a21d7302f8139,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_ED25519_1P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x8,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1e98736cf961394cfa6dfe5e,
        0xd7fb6593bc4d484738ba5ff9,
        0x3133b3e2100f63a6,
        0x0,
        0x1,
        0x785094dfbbba459c666beaef,
        0x55c307610d1a86f697251ba6,
        0x3a9bf57c2d1f3f50,
        0x0,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_ED25519_2P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x9,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x732ddc8e2cc76b36024c51f4,
        0xc4691da0ba50feaacb01549d,
        0x3b4ce309a9762fe,
        0x0,
        0x2,
        0xeb61555ff2e8eab1c46d48bd,
        0x470b0eae7200060f8562df1c,
        0x1e45be405dcbf244,
        0x0,
        0xf4bfa5b3cc5f0d550830ebba,
        0x60db6b1216fe71b94bfc06f8,
        0x253e2357d973bcd8,
        0x0,
        0x2,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x2,
        0x0,
        0x0,
        0xb4862b21fb97d43588561712e8e5216a,
        0x4b3e865e6f4590b9a164106cf6a659e,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_ED25519_3P_edge_case() {
    let mut data = array![
        0x1,
        0x6889d75e36c152c1cc46f152,
        0xab6c91609cc41b1c6148652e,
        0x6d04cda48b959e7b,
        0x0,
        0xd12689aa4a75942f20369ac5,
        0x5d6ae4c0a9977c4e19538008,
        0x101fd900dd268a39,
        0x0,
        0x4cf7cf1e83ac6ddeb4c0d88,
        0xdf032c7d359dec2b1b30b922,
        0x1b4e7ef7358304ab,
        0x0,
        0x90887d2f101702d94aa5377f,
        0x3fdfadebd967a872d02af758,
        0x2ea0b09931ec6dc4,
        0x0,
        0x506c121a6c7fd9aa60e121a3,
        0x23b636b641b29ef8bdd1c639,
        0x791b6ec60b5f8598,
        0x0,
        0x59f9c615c1fecf831ca3b5fc,
        0x2f6fb1f6358caa9cb6f8c9f7,
        0x6e62064b941a23df,
        0x0,
        0x6,
        0xe69974737b88f1268fe9aaae,
        0x8c1559e40bcf30fa0bd7903c,
        0x4b532cae5bfa2c57,
        0xfa9035e798d15baf399b3b7d,
        0x8e289acf0c43e298455b089c,
        0x5e626a1eb94c848c,
        0x654e97c8202baacafd347411,
        0xbbc95eee2c80600c3e370615,
        0x125df9e9282cba82,
        0x183a985c65551f6ba3d83980,
        0x134ad9dbc6c8c9ef9842342a,
        0x3a6b860a6754781f,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0xe1dd890ca42bb6787953ac8e,
        0xd1043346a7687fcd1c173684,
        0x25ac41ef53a8b264,
        0x1a927f53bc1929ea47a340ce,
        0x1d066482260ad25a944af22a,
        0x5099f019034be8fe,
        0xdd8253ada22de2f45fdf5202,
        0x5441006694aef1a85b444399,
        0x235d0862dfa6cdf4,
        0xbf55f655e635b433fffa06df,
        0x9529a92891026d5feaca56b6,
        0x66f328ef9578380b,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0xff4a7e8b7f2cfcdbcee5a4b1,
        0xe12c1714e746fb90fbaacda2,
        0x74e32598c1f69b37,
        0xec4097839b45ff546026a0c2,
        0xae7581a88eae4a5053b8f9dc,
        0x39c19c5066a7bb2b,
        0xe66b928f5f906da6b564a19,
        0xe6eb535ca7ed037f82d2c152,
        0x71e49573bad6c71d,
        0x3c366ce7ca838787367666b9,
        0xe4fe0f13556bcdf6e6ed8414,
        0x7242e8cce5ff3b6f,
        0xc199caa040b67c0c31530366,
        0x862fb1b3977b470bdf71fa33,
        0x56f64010ec27341b,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xa,
        0x5c9b04b3b245e09a4194094c,
        0xdd37f3697ab22b9010a7a63,
        0x5128c8fdc31f7a9,
        0x823a7a3274ed4f8afd3da5ad,
        0x97bab3dd38c5e707cb7b2c8,
        0x5a9b9fb5a904e5b7,
        0x136a754b8e6ef4fbbdb2c19c,
        0xccb7829961063c89b98962cb,
        0x72b6443d8587b85b,
        0x4d61d2ba560cb6cdace82b43,
        0x4ec094a713c7dd9c57d2239e,
        0x6d86d878336d2975,
        0x64419bccfa5228f31d1d0868,
        0x3d89f6514c52a71529d25b3e,
        0x6282237340916256,
        0xea277ea54e9fc483589b6942,
        0x85d8e173f62a2f7ec6fcf9f6,
        0xabb53685608cda,
        0xbf55f655e635b433fffa06df,
        0x9529a92891026d5feaca56b6,
        0x66f328ef9578380b,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6fd4e3f593a17ba71159d847,
        0x1118616a869823a48ad75add,
        0x15473f9ff2346518,
        0x0,
        0x0,
        0x3,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xf046f8cd6e5a75fca71dd19b,
        0x892b4613ef5c58df4ef692a4,
        0x7527fa36f5738847,
        0x0,
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0x19657783ba5660e255c21849,
        0x7ed7474bcea7551fc71e46bc,
        0x596c0a76b75f4756,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x3,
        0x0,
        0x0,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0xa90f9c3af19922ad9b8a714e61a441c,
        0xeb2083e6ce164dba0ff18e0242af9fc3,
        0x2fc154703983ca8ea7e9d498c778ea6,
        0x4,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xf7d884feff5aba51d9990dce,
                limb1: 0x999f1d302046c6266257ff5,
                limb2: 0x7f9caa5ee5815899,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x6d71279424538e87f8ecf2cc,
                limb1: 0x8a8a1d74581da5996a52bbaf,
                limb2: 0x29acff692eccea25,
                limb3: 0x0,
            },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_1P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x4,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x8,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xd1047f7150ec5100a6e49ee9,
        0xc2e7d792c40dc5b460e86d57,
        0x7b3f189f2f960a5,
        0x0,
        0x3,
        0xac5aa8d6d49297a36aaf986f,
        0x7947b09c6620f2fdeb6c05b0,
        0x8f24f2607ad197e,
        0x0,
        0x7cca3f48d7a850ac077aa53a,
        0xfc0367c309acf4dcb9b6023c,
        0x1389ccb9283ad6bc,
        0x0,
        0x9be267945cadfa270fe33fea,
        0x53629b1877e276ef9c05b645,
        0x5f3a5c7c506992f,
        0x0,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x1,
        0x0,
        0x0,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_2P_edge_case() {
    let mut data = array![
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x6,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x9,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x5799d0a4be76c4179913ad19,
        0x86201acbfee2c5bb1e120b24,
        0x167b9aeffb401b8c,
        0x0,
        0x1,
        0x746895ac8d85fdcc78a517dc,
        0x439607b706d6b787a329afcc,
        0x122c8ade7aa1ea89,
        0x0,
        0x2,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x2,
        0x0,
        0x0,
        0xb4862b21fb97d43588561712e8e5216a,
        0x967d0cae6f4590b9a164106cf6a659e,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
            y: u384 { limb0: 0x0, limb1: 0x0, limb2: 0x0, limb3: 0x0 },
        },
    );
}


#[test]
fn test_msm_GRUMPKIN_3P_edge_case() {
    let mut data = array![
        0x1,
        0x37c9a46b0612fc1b353fe24a,
        0xeb374db12bd7d7711f2705b4,
        0x253453fe507b50b6,
        0x0,
        0x33cd021aeba5ea18a2e20a56,
        0x3e392b55f320a528391fcef8,
        0x14fbdf9fd7fbfcdd,
        0x0,
        0x60e6980f95d8e5261423f38e,
        0x3079cdd992636bb28a5984df,
        0x14368ee41c0e5576,
        0x0,
        0xa3597535ddd5b8336fde7418,
        0xc0329958cee690ca2b691fb,
        0x2a11389e1b5a9b57,
        0x0,
        0xc294148f233ee2e2eb301899,
        0xe1d7d7726b8c2ea638d0879e,
        0x1599a751984c9cbc,
        0x0,
        0xfb70f5613f53701f0d60d44f,
        0x1bc69554d8e00e30700a9bad,
        0x1e3d7a04c2e60b68,
        0x0,
        0x6,
        0x8d1ac407b0b68a1dab34b0ea,
        0x28583648ea41a8369d9266ea,
        0x5bd7a61cafde77f,
        0x2e2d64b34628cd5121e61d8b,
        0x3c9160edd20418993dc03a9c,
        0x14935bf5b97aaf31,
        0x6d828690264f9647a8a849f1,
        0xaa4db7f1d471f2660eea1a53,
        0xdf52f48a4714b89,
        0x22b173b10b3e7c4fac032098,
        0x4f28a503f922c55da227f373,
        0x4654b1125198233,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0xb2266081a22d892a905aac07,
        0xe29e40ff84bf386a075c2912,
        0x2bdae940ecd05238,
        0xbc07a73baca9200621b30a,
        0x9feb152fd5380add8bfeb65d,
        0x27611e103ee6cd84,
        0xc58abb3148d1b699a1cd566b,
        0x427ed6a0de410a4bb7ae367a,
        0x1710b0370e12ff29,
        0x77c7f1279f442e1fefa35cbe,
        0x39ad28fd9578c20b1b049f7b,
        0x80860ed167627c,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x7,
        0x36d43362167f95a6c7ab3efb,
        0xf1b335d8f724e2f00d074209,
        0x4210b05774c00d8,
        0xfcfb832a114ffcbb88fd9872,
        0x14d78d0b3eb673c7a7bcc78a,
        0x272e013c16236c86,
        0x3e4ab9a1f92275723f292c08,
        0x750afa16be5a64b2272b368,
        0x2bb352e1f4120313,
        0xcabd610b2776514a16c4ca00,
        0xe2528b2f5dd72dcf9738f4f0,
        0x2ca5cb95ab68ee73,
        0x6ead72438d38a9b6bbb87e01,
        0x65951ccceba1f98566e26518,
        0x2a904cec00cee003,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xa,
        0xc70aa07879193d6b69fa9399,
        0x78820a704762c6c8061fca49,
        0x1cbb69de59448cd4,
        0x9ba7a5d6bfe432f6b7c31c64,
        0x75c767cdec5a1c61e6ec97c9,
        0x8094b3423631c79,
        0x294e86d58d0481ffb15d42ee,
        0x106632bbcb3a6c3f37418c65,
        0x2b6b0e61fb7bafba,
        0xbddf5ce00ea6790ba6818369,
        0xe1e882897ba55ad3c0d91df,
        0x2352024504f2c7f9,
        0xbc07a73baca9200621b2f9,
        0x9feb152fd5380add8bfeb65d,
        0x27611e103ee6cd84,
        0xc58abb3148d1b699a1cd566b,
        0x427ed6a0de410a4bb7ae367a,
        0x1710b0370e12ff29,
        0x77c7f1279f442e1fefa35cbe,
        0x39ad28fd9578c20b1b049f7b,
        0x80860ed167627c,
        0x1,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0xb4d724fe09e4d0654dff3b97,
        0x5a5d54ab4d5e104be31a68a5,
        0x227e7025667ec33,
        0x0,
        0x0,
        0x3,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x371e7b6a5c01505bd4334e81,
        0x2f596ae4492a87c66f7bda1a,
        0x9dffb4dcdb94df9,
        0x0,
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0xa560a5759c90985fde99aca0,
        0xc5b21186cc6dcd0421026513,
        0x21fb1f47c6ac55b3,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x3,
        0x0,
        0x0,
        0x12e0c8b2bad640fb19488dec4f65d4d9,
        0x1521f387af19922ad9b8a714e61a441c,
        0x5a92118719c78df48f4ff31e78de5857,
        0x28fcb26f9c6316b950f244556f25e2a2,
        0x5,
    ]
        .span();
    let scalars_digits_decompositions = Serde::deserialize(ref data).unwrap();
    let hint = Serde::<MSMHint<u288>>::deserialize(ref data).unwrap();
    let derive_point_from_x_hint = Serde::deserialize(ref data).unwrap();
    let points = Serde::deserialize(ref data).unwrap();
    let scalars = Serde::deserialize(ref data).unwrap();
    let curve_id = Serde::deserialize(ref data).unwrap();
    let res = msm_g1(
        scalars_digits_decompositions, hint, derive_point_from_x_hint, points, scalars, curve_id,
    );
    assert!(
        res == G1Point {
            x: u384 {
                limb0: 0xf47b4ee8eecf8576c38173d8,
                limb1: 0x755d90a26c30d7d6fb33afd3,
                limb2: 0x5e835e05fdb55c5,
                limb3: 0x0,
            },
            y: u384 {
                limb0: 0x990d5f4767a8d057f8695e4e,
                limb1: 0x5f8dd4e272c268c0d2ce4a39,
                limb2: 0x1704905427d31a82,
                limb3: 0x0,
            },
        },
    );
}

