use garaga::core::circuit::u288IntoCircuitInputValue;
use garaga::definitions::{u288, u384};
use garaga::signatures::schnorr::{
    SchnorrSignature, SchnorrSignatureWithHint, is_valid_schnorr_signature,
};

#[test]
fn test_schnorr_BN254() {
    let mut sch_sig_with_hints_serialized = array![
        0x536c985db33c69f7c242e07a,
        0xfc531bccffafcf1e59d91fb9,
        0x2585e4f8a31664cb,
        0x0,
        0x88be2ce9ce62b465354a3799fa203a0f,
        0x153a203b4df3737a1b3372ac547e5fbc,
        0x12e0c8b2bad640fb19488dec4f65d4da,
        0x1521f387af19922ad9b8a714e61a441c,
        0x5c724369afbc772d02aed58e,
        0x2cd3bc838c66439a3d6160b,
        0x72f26b55fb56be1,
        0x0,
        0xf14522f0e41279fa3733fed2,
        0xea20efd268b756a9c0b06945,
        0x7df9c9692acbd19,
        0x0,
        0x7bd63e78d1e1c2056fb9197a,
        0x72961bec96a01531c33eb608,
        0x1fcae1936a2bdd66,
        0x0,
        0x875946910fa5c2b95a467381,
        0x50644775bbed6c2b212bca0f,
        0x250ac9e54cfff41,
        0x0,
        0xc01bfbb790be6ac4321386fa,
        0x3fea123561e98f7c0fefe248,
        0x309c264f018108c,
        0x0,
        0x6592fcf0bf4971419fe1414a,
        0x9b8594fa5f76358f4cd9449e,
        0x1baf3f8f8485749a,
        0x0,
        0x309a1221392b89b7b0ca1125,
        0x49d9ff7cc14a0f508d594ce1,
        0x13ddb286c41ad82d,
        0x0,
        0x7d8bf99e211181e3b6b268e,
        0xafac4182601ea0d3dfc654be,
        0x16294b15adc40e07,
        0x0,
        0x5,
        0xc7cf03a7dc1e1872787be0b9,
        0x8a73ea280825e723f5fbc141,
        0x183341e0c31f65df,
        0x2da43fc0dfb2a1e7089c3892,
        0x1ed37c3ea479448f3ad677c1,
        0xb32401baab8b953,
        0x7843614984a74c5b7710d737,
        0x7499ae4b94269994665ed804,
        0xbe7b952ed1d2361,
        0xc9defda70b75828d5ab2e2b5,
        0x9606f5d7d9a5ccb016642136,
        0x27ffd0bd7455a5eb,
        0x9ce3e24ec9a983607c3c988f,
        0xfc357526b2543fea74335ce,
        0x22c31f31a09a58fc,
        0x6,
        0x8115a06e6e21416380de142c,
        0xb8407b5b1a9298008948a361,
        0x2bda4e116800f532,
        0xc9ff174b2f621ad3736aaf2b,
        0x265cf1fd1e5af82ba6354b31,
        0x1ca5dc718e1ef36f,
        0xfc126c1a7c7f24c538a66e03,
        0xa9c16ac52b40ec282acea139,
        0x70cbefb51a123bc,
        0xea4936746da638c900d35314,
        0x2f18d7000fecf4414192d601,
        0x1eb8e2291784c5cc,
        0x7e5055f2cb8ea7f5bb47366,
        0x71792206106898832aa4d9e5,
        0x22e71fb1444f0e52,
        0x1,
        0x0,
        0x0,
        0x6,
        0xd05bfc4c5ac756987a056170,
        0xd1d66cb00b7b152ce886a67d,
        0x15badb9f64464956,
        0x34d624ab4fcf635f50e9ed38,
        0xd31167b64d06f5cde618f606,
        0x186eca9e932c3442,
        0xcad2d800de9ee43b49143a0e,
        0x543deefb78fd1ad730a67712,
        0x1e330b34c0ab5bc9,
        0x6926f9e264c8a70d791bb8fc,
        0x141d96c6d5c56292bd7e56bb,
        0xf428e586347ebf6,
        0x4894026a287cc5f68285aa1e,
        0x3e82594153beeb570d50d454,
        0x8c476605253080b,
        0x4b8384f44c5a619b78aa271e,
        0xb78492db10810bff433ab981,
        0x3037b46db410196,
        0x9,
        0xb25d4c30d222abfcd1a041f6,
        0xb820e6a44cb517466cd71501,
        0x22c64d4e759f9f44,
        0xf58b7b545205c46381c3103a,
        0xbac69040d98f90255b1e7703,
        0x258d46e1c92b3a23,
        0xf437444f757d6e4fa9f34a09,
        0xfd44404f81c2c478806be3ad,
        0x15263cf1f4e36b35,
        0x6f0daeb13ed2d390d25e12da,
        0xd4ea74ee4756c4091efe5044,
        0x273c57a6ec2c0643,
        0x10ca924e3d4bc223d58e0ecf,
        0xa27cca24c9210f9f72103be,
        0x24929e9f98a8de13,
        0xfc126c1a7c7f24c538a66e06,
        0xa9c16ac52b40ec282acea139,
        0x70cbefb51a123bc,
        0xea4936746da638c900d35314,
        0x2f18d7000fecf4414192d601,
        0x1eb8e2291784c5cc,
        0x7e5055f2cb8ea7f5bb47366,
        0x71792206106898832aa4d9e5,
        0x22e71fb1444f0e52,
        0x1,
        0x0,
        0x0,
        0x3bbf78cfb82cd221ccfed640,
        0xdb577ef0108f39ac80ccbe23,
        0x16674b09e00e362c,
        0x0,
        0x0,
    ]
        .span();
    let sch_with_hints = Serde::<
        SchnorrSignatureWithHint<u288>,
    >::deserialize(ref sch_sig_with_hints_serialized)
        .expect('FailToDeserialize');
    let is_valid = is_valid_schnorr_signature(sch_with_hints, 0);
    assert!(is_valid);
}


#[test]
fn test_schnorr_BLS12_381() {
    let mut sch_sig_with_hints_serialized = array![
        0xde4f62a6588c9401ffefbd3,
        0x9bb5f797ac6d3395b71420b5,
        0xdc39e973aaf31de52219df08,
        0x105dcc4dce3960447d21d3c1,
        0xb83ced7922696854920e4dce5618fd79,
        0x1efa0c12855ed037f8665a14d0c63ba1,
        0x12e0c8b2bad640fb19488dec4f65d4da,
        0x2a43e70faf19922ad9b8a714e61a441c,
        0xe4f817e54aede0613c17035c,
        0xdff1f15010392a6da1f95a6,
        0xbed78d3d341e911d49f15454,
        0x18154782ce0913b21588066d,
        0x73dc29ec930fa565a5979354,
        0x9429c7a3a7a2e40636af119e,
        0x63acb8cedd134d23d3ccba66,
        0x18e6b0be5c742604e8963d45,
        0x4ee73ea607d4cd52e9f59b73,
        0x4d7bc7ca6b60220ce415153a,
        0xd1310211e1bd7748e78c80da,
        0x12068b0d663619485e59d473,
        0xa20a7038c9688e73cee3df47,
        0x2a7bc5f50365a0f038329ef5,
        0x20617a1b4de7557c4309aeaf,
        0x71d0283a2b3d8b587dc9d62,
        0x66524bae875e5d352b365d0b,
        0xa21112a49db21a6732c83a4,
        0x19febc10f1c97eeb58295b44,
        0x9abb73ef779cb5bced1563d,
        0xf2ca85f6efc73535d83b55e4,
        0xa87ea15c443182d0ca4c0d74,
        0x60659e23e0f84b8a1355f717,
        0x83d00a817ca859b0accd25d,
        0xb2cc6563a243413704f5c36d,
        0xd05db3492361c37f023d2933,
        0xed9b94f57074720b3e566f7f,
        0xf6784dd2d6f256ff32513a5,
        0x1b949e90b882ac24ae689580,
        0x8363c90223379dad16fe3692,
        0x7679c6eaf4a35faba23d5038,
        0xccad3b4d55f090a1d318a6b,
        0x5,
        0xe75769236deb7075b1327f73,
        0xf01b0396d0719c968011285b,
        0x51f9d692b7099ca57e62eb1d,
        0x105ddfb5672e72318fdf0729,
        0xc4be188c4ea1b6f93919f2f0,
        0xf2831746790c9ef9be55fd8c,
        0xaa0b046d4d5f96bf838962bb,
        0x14f7035d2d4f521512385246,
        0xe5de2941455f24e03a60662a,
        0x10eaae426c96fae38cc17f51,
        0x8e7a56030091810f7c1a6b9a,
        0xfc5f270eb923cc3c2c7e3f9,
        0xc562f73e71c1b5124333907,
        0x44cf55486bcb7d573cb5999d,
        0xfd800833d52cf3d63d5e81f3,
        0xc61d931773e9b0602633d1e,
        0x989dbc71a5586573b98e7216,
        0x7bb347dc32fad6c9b53c72fb,
        0x31872f4db3be72ac56442660,
        0x19631c90180640ddd6edd78d,
        0x6,
        0x3e07807635cbfc181c6b493d,
        0x18948de8684d95bad4833588,
        0x4a00ecb5b6cf849262f772fa,
        0xc05dfd34b1df4d48311851c,
        0x2e4a73c1f9952c8c1cbfdd17,
        0xdc1ad9c756fee5a3a7d98a85,
        0xaa16818f3a24ac751087d91e,
        0x7e0f6888cf48fa8a181f829,
        0x23a2bf555b12666c20eabc5a,
        0x9caedc4950e326165a88dacc,
        0x6b3744868a07fb9dc187646d,
        0x61451fe3163bd0e7b55c8c0,
        0x84e9b6e1682a70285ed3bbc0,
        0x2a90a048ab694b121f77e959,
        0xe56f4f2c4deb70ca5b80dd64,
        0x17e7e226148a0f95867cf797,
        0x7ed7dd71705cc3d4cea324aa,
        0xc57b64f1ea07925edabbc001,
        0x25e226f8565aa8676ea1f205,
        0xce365555b3fa50ed000f688,
        0x1,
        0x0,
        0x0,
        0x0,
        0x6,
        0x1f51d734d2c5fa77eb9fa0cd,
        0x8e08c5c15667d21a4820ed24,
        0xd5edf1bc617b36ff99b1fd84,
        0xf91bcee11f2e0f363e6981b,
        0x73188c4768fb26fa374031b4,
        0x6cf8130194b702f0165b61e4,
        0x58efabe09bf6f993ebc7d718,
        0x1681815b2d776f918f8ad39d,
        0xe6fb24899005289d08661753,
        0x7a2ebb8f3ad94ceb185e0699,
        0xc32b81ddb62c65e037b087b6,
        0x741968abb4b640bc6cb2a65,
        0xd8bc143ef2f191bc19510a0f,
        0x1e500ff6b238130af17492b9,
        0xe6918ff176d5c41d1af9efaa,
        0xf8e45ae6ebebd403338fff0,
        0xc803dd23fbbac8a56501ab1a,
        0x522025adcdf6fbf603685300,
        0x321bc0c6e63f8c7c353ff5d4,
        0x26be8b8fb2fd3a19e0dbfef,
        0x82c6e40fed3b95c32b26c1dc,
        0xe2f81f6a134bb05009fc6f1c,
        0xab46f0ac450b561780c6326d,
        0x18d9f0b7e4059c8cd589b017,
        0x9,
        0x46ca01d91d30f06071ad7a49,
        0xfb216500aa8560c73360d622,
        0xe4b805ff76c6c6c49858b928,
        0x16166d62f2f7ecb7c12a6cba,
        0x7d5cf082c55b23072ffc9b1,
        0x93a947c654aa06a80ba2a16,
        0x650e5965841b664f4e9a51bc,
        0x582c837fa5258083aec38f0,
        0x8e8afd556c4999b083aaf168,
        0x72bb7125438c98596a236b30,
        0xacdd121a281fee77061d91b6,
        0x185147f8c58ef439ed572301,
        0x8c5e5bfcee79bcb997bb8d91,
        0x2613c4873b2ee972d7b2daf3,
        0xd28f76095ca019a802e69d8d,
        0x3a120c2b74698c17096c4a2,
        0xc701e988470a3bdf574d1a69,
        0x23a6c84d11bb42d6d5708a8d,
        0xbb07c3c1caa0b708e4057bb7,
        0x76c680986f356af4b4e82dd,
        0x23a2bf555b12666c20eabc5e,
        0x9caedc4950e326165a88dacc,
        0x6b3744868a07fb9dc187646d,
        0x61451fe3163bd0e7b55c8c0,
        0x84e9b6e1682a70285ed3bbc0,
        0x2a90a048ab694b121f77e959,
        0xe56f4f2c4deb70ca5b80dd64,
        0x17e7e226148a0f95867cf797,
        0x7ed7dd71705cc3d4cea324aa,
        0xc57b64f1ea07925edabbc001,
        0x25e226f8565aa8676ea1f205,
        0xce365555b3fa50ed000f688,
        0x1,
        0x0,
        0x0,
        0x0,
        0xdb200275765b08bf72c07501,
        0x97e2293c103ddaf84f234f72,
        0x2d4f8f36b524eaea8a57043a,
        0xc9794daf04e124d99955fc0,
        0x0,
    ]
        .span();
    let sch_with_hints = Serde::<
        SchnorrSignatureWithHint<u384>,
    >::deserialize(ref sch_sig_with_hints_serialized)
        .expect('FailToDeserialize');
    let is_valid = is_valid_schnorr_signature(sch_with_hints, 1);
    assert!(is_valid);
}


#[test]
fn test_schnorr_SECP256R1() {
    let mut sch_sig_with_hints_serialized = array![
        0xd3ff147ff0ee4213f51f677d,
        0x431366a7732a6e4a6b942255,
        0x9fe743b25d39a591,
        0x0,
        0x227664fcd18152d34168f6ded74ab915,
        0x69b292ba7d07a7c252d76438f5ee7ec1,
        0xe443df789558867f5ba91faf7a024205,
        0x23a7711a8133287637ebdcd9e87a1613,
        0x113c8d620e3745e45e4389b8,
        0x85b8ff52d905fd02fe191c3f,
        0xf5d132d685201517,
        0x0,
        0x60c0ba1b358f375b2362662e,
        0x6abfc829d93e09aa5174ec04,
        0x7bc4637aca93cb5a,
        0x0,
        0xfbf6466eee2a5327f4bc8960,
        0xe74f725a6b8d6686e529d72a,
        0xe0369d77b234639f,
        0x0,
        0xa88f2706d30398f85b1fdec7,
        0xb91b98877e6be71c56f23086,
        0x2ca865820a33b0d,
        0x0,
        0x47d028c30c2046628c5c84dc,
        0xea016ae885b149a6a36a574f,
        0x1d0a600aff7dd383,
        0x0,
        0xcd00f4d091eeac4a64275015,
        0xf047f8771c86a6827c9b0e27,
        0xe20998778971cbe7,
        0x0,
        0x2c883d9f06e406aa476c663c,
        0xf9baebf536569143976c806d,
        0xb4b2e6d0bdad0216,
        0x0,
        0x2aed3dfbc0596450e4d0b926,
        0x5c9183b1b60ef55ede4c8834,
        0xc071afd308b9d4d2,
        0x0,
        0x5,
        0xe5d560a8b08cdab660482d56,
        0x576bf3f8ea6a4ce270c9f34a,
        0xe356f61616e17d8b,
        0x816f18f4aacbceb3c216bca7,
        0x234186bea7644d3bcec64857,
        0x2c9191ccfe837b42,
        0x2cec404aba0419c08527647f,
        0xb595284b4ad4d70a85c9d540,
        0x948ea13b28fdfc2a,
        0x8d9fa00c7d85a88a2a0a0f25,
        0x7076dc22f13455fdea635930,
        0x4931a7ecd0b428d3,
        0x459e86b94cd6462e30312600,
        0x539428d67247fe60ee96e6db,
        0x9f31f675636a6155,
        0x6,
        0xc62a21c39062eea06c1f1c9c,
        0x9dfbbd7d6f22db3369cbe195,
        0xecefbd019a424f92,
        0x6255ff4247527fb4b2577d15,
        0x8564abd743666b79be0e6125,
        0x9e6a7ca0fe86eeb8,
        0x6c23bf538979f155c22f181,
        0xae7ae8af9c6c616d5af05345,
        0x9f951331b0f8ddd2,
        0x7e59fffda8b463227e80143a,
        0xc0d1069d02d9f847f50e1507,
        0x47aa9a9c765add90,
        0x5089922bfbf8e0a1009e3f36,
        0xb67e508f9bc080996ae2b75c,
        0xed2316df2a546f69,
        0x1,
        0x0,
        0x0,
        0x6,
        0xa4ffec847f446656e09b160a,
        0x638548a39de963b59da72e6b,
        0x48645c756dc20beb,
        0xba0996efa2d346880275ebfc,
        0x8cf3247a54829f044e9edb54,
        0x1dc3f24ec4296b02,
        0xef3fc1e3f83c6da6555fa797,
        0x126c9608bce8578abb15ed69,
        0x969c21253b2e3fc3,
        0xd1e7d7eb8b1ba70f430a1db,
        0x31e36e727559230db1995197,
        0xc15ccf005a8dbfc6,
        0x70925314d278f8f623b34171,
        0x9194b584d4571515f053b231,
        0x336d5ad0cf9e4a25,
        0xa45037300ee3f76573bc985,
        0x35c75bd20c5a177c065bc559,
        0xbbcff16fcdd9df9d,
        0x9,
        0x6f479006b88db9fe5d390f97,
        0x90073e7ece1863d0284e3bd8,
        0xa3e1330a81cef64f,
        0xe8b84f536cb05df337373def,
        0x379f57b3738d84bfc753966f,
        0x2504e14cc854458d,
        0x520917ebd66ace5d417041e3,
        0xd846aa88acbc1835924e86ef,
        0xf269a50fc7aba3fc,
        0x9e38453e42b8c3fddbde63c9,
        0xaf11d34a389979d292ad3f9e,
        0xf1026541bbc06fb8,
        0x30ece2793aa107086ebd8687,
        0xfc71dc25fe488ddea5ba2c16,
        0xbdce0b84908af70b,
        0xe1793667807b3970821a9428,
        0x3eebb4563fc3665d7f6533e2,
        0x32f2046adc36237f,
        0x7e59fffda8b463227e801437,
        0xc0d1069d02d9f847f50e1507,
        0x47aa9a9c765add90,
        0x5089922bfbf8e0a1009e3f36,
        0xb67e508f9bc080996ae2b75c,
        0xed2316df2a546f69,
        0x1,
        0x0,
        0x0,
        0x6381850f4f857c5a0e634a27,
        0x506ec22b98ba6c33d077c195,
        0x2599a4ee5a5fa066,
        0x0,
        0x0,
    ]
        .span();
    let sch_with_hints = Serde::<
        SchnorrSignatureWithHint<u288>,
    >::deserialize(ref sch_sig_with_hints_serialized)
        .expect('FailToDeserialize');
    let is_valid = is_valid_schnorr_signature(sch_with_hints, 3);
    assert!(is_valid);
}


#[test]
fn test_schnorr_SECP256K1() {
    let mut sch_sig_with_hints_serialized = array![
        0xfdfdc509f368ba4395773d3a,
        0x8de2b60b577a13d0f83b578e,
        0xc2dd970269530ba2,
        0x0,
        0x2cad564f3e93c6683bd94b5438ce08f0,
        0xcbbfcb3b677e87eff66c9a804800a3b3,
        0xe443df789558867f5ba91faf7a024205,
        0x23a7711a8133287637ebdcd9e87a1613,
        0x393dead57bc85a6e9bb44a70,
        0x64d4b065b3ede27cf9fb9e5c,
        0xda670c8c69a8ce0a,
        0x0,
        0x789872895ad7121175bd78f8,
        0xc0deb0b56fb251e8fb5d0a8d,
        0x3f10d670dc3297c2,
        0x0,
        0x69fe67c02fa974c11409e90c,
        0xd1d39c6e135bbb4a5f7aa00d,
        0x982bd49c05ed1eaa,
        0x0,
        0x1e8a5f770004a90d9c77e6fa,
        0x733f5f2e918297f64bd41f90,
        0x607b7afbb60a2859,
        0x0,
        0xe1091bc56dacd9c8d98424d3,
        0x63d346f5909f5f838dd532c,
        0x3e0c552bae27ef1b,
        0x0,
        0x893b067190dd309933abf08d,
        0xd2d95535150c9bb0c0658331,
        0x4e5bbeb0e6ec68ec,
        0x0,
        0x32317af352d9b8c3b033ec36,
        0x79caf3e7cf682cadcfc1feb9,
        0x909988e5d62e73bc,
        0x0,
        0x64dacbac909a43d336f6540c,
        0x5adf8238c0e6a8ae76625241,
        0xe581aa696533eae6,
        0x0,
        0x5,
        0xe161b667f5afb158090a82fc,
        0xad02d126c819a63b90f1b2c9,
        0x9b872c507e36619,
        0x811867dc7dfdd87a81f72ec5,
        0x9d6e95aef6ce78195b4f2987,
        0x2cc537778efa8c24,
        0x24b065954ddec0b12e4f415,
        0x1f719fcfedd108421afbd79b,
        0xf63f7fb446182c9f,
        0xd1f05fb153aba7d1c5a0e75a,
        0xc9271a161a986f9afb0a3a1a,
        0x9dcf1c819b20e47c,
        0x4682b00ed4178b8637f9172c,
        0x368c7457f4b75f2b57faeb94,
        0x59ded73750119bc4,
        0x6,
        0x2b851662dcc84b8c3aedfa3c,
        0x5ad3c0614da0066a79ae9d74,
        0x2622ba68f53813e1,
        0x115e91af6cc2915b7f5589bd,
        0x1f2bda8f4f41af4e7e251cb7,
        0x68b5edb60d46ceda,
        0x4eabce6130a675f459a302e4,
        0xa9737397f381c5b2b7b74d1c,
        0xd2932c27642d1b43,
        0x72234ca400ea3dd934971a56,
        0x13b1a8e211e995180940626e,
        0xe63d4a20b5b9ff2e,
        0x1bbaedd83a151ce5af919870,
        0xf3af283f41bd348b9b4e72d5,
        0x4508da471236f4c6,
        0x1,
        0x0,
        0x0,
        0x6,
        0xb072c48295dfaaa1d282b2ce,
        0x79e8130d90bd0cf0b4dcdf84,
        0x547598ac8188ede9,
        0x9c79806a3945112c593be6e3,
        0x5385524ed0422c839efddc16,
        0xab2cc510f9a8f8db,
        0xdcec119601d6bbba5dd823ab,
        0x4f1ead5b76e91f55e09e7ffa,
        0x3318899bfa8b4670,
        0x4ccca178fe4a0f3500f1d843,
        0xcc98657ec982270a12fdee24,
        0xa9b2cd6caec0a736,
        0xec6457039d97cc351ae169d2,
        0xce3f48d45be7c1b6094795ea,
        0xcb5fcebc9a835c1c,
        0x4df40e5db8743a16476c5e55,
        0x106d00f6ad75e4513a094ca5,
        0x242b60ece93c6264,
        0x9,
        0x30a39cb4097a10d69c81db75,
        0x7bca42a91f602ce953c64e2d,
        0xaf318deb4888b29,
        0x7995fbcbf951f9827b56cbcd,
        0xda32f9eb2acbcb257303c901,
        0xdcf97ffa5cefa7f6,
        0x26b2a4a8548d39b373752751,
        0xa2282927a88c67e306031bc6,
        0xc2063513bd3bbed9,
        0x4a7c2edee32ffc82ab0fc97c,
        0xe4af5e8fcb031a12ba714e79,
        0x71cfc14ded4e0e23,
        0xd37b129903565ba54c50bc6f,
        0xc8f5f44a1b6e1f1fbd4a408a,
        0x4bf3e5a78cc7804a,
        0x4eabce6130a675f459a302eb,
        0xa9737397f381c5b2b7b74d1c,
        0xd2932c27642d1b43,
        0x72234ca400ea3dd934971a56,
        0x13b1a8e211e995180940626e,
        0xe63d4a20b5b9ff2e,
        0x1bbaedd83a151ce5af919870,
        0xf3af283f41bd348b9b4e72d5,
        0x4508da471236f4c6,
        0x1,
        0x0,
        0x0,
        0x727358087a7b52e41be869cf,
        0x4816a0f7e8c38cf05218f7fc,
        0x667f58f47d268f67,
        0x0,
        0x3,
        0xf777f51bcb266542a2998dd9,
        0xc3ffb60de7f6bd4a193ebedf,
        0x5a8a6899b4cefaba,
        0x0,
        0x7f356fbe0160bc2e42f9234d,
        0xc978cf946830f3a455b5e8de,
        0x1bb88cf9ecaeffcd,
        0x0,
        0xfd733d4fec6909a9b5b2ec58,
        0xd73e194e1db3de4bd96f91e9,
        0x2a99e120f1a9e063,
        0x0,
    ]
        .span();
    let sch_with_hints = Serde::<
        SchnorrSignatureWithHint<u288>,
    >::deserialize(ref sch_sig_with_hints_serialized)
        .expect('FailToDeserialize');
    let is_valid = is_valid_schnorr_signature(sch_with_hints, 2);
    assert!(is_valid);
}


#[test]
fn test_schnorr_ED25519() {
    let mut sch_sig_with_hints_serialized = array![
        0x82e4a33f8e4e5881e791d86b,
        0xbcb062435ae8ec5fdaeac4bf,
        0x179e1bae9e0f9f34,
        0x0,
        0xa84dfdd6e617589384812f69a2d349c1,
        0xa968f5c0a623e3b190de39304eb726a,
        0x12e0c8b2bad640fb19488dec4f65d4da,
        0xa90f9c3af19922ad9b8a714e61a441c,
        0x7238f02b9f20e09c2181a557,
        0x2cedcc5b0be371c337fd7e9e,
        0x41f3bbeb280fe8a2,
        0x0,
        0xfb9073291a58a0358e22e52,
        0x76d4b9ec10a3a720b1096d5b,
        0xad805c90a8c77b8,
        0x0,
        0x4585fd086440c38e653a751e,
        0x669694f28472416ed5bfb351,
        0x766868d31ada4a44,
        0x0,
        0x78ca1a264d3bb32089bf0b52,
        0x561e86e50ec46f70d691a0cc,
        0x4efcfa46e6e8354f,
        0x0,
        0x9adcbcfed5513c0320aeae2d,
        0xace751a6cfea9f3117053181,
        0x6ce27b7166d7d631,
        0x0,
        0x8fceb5cbe6541f5917c2f71d,
        0x32b36f09b0ecfec974c7f43f,
        0x42dc63c44f909ffc,
        0x0,
        0x7fed65c709d4de0b41e9102b,
        0x73e8ec27e5d58ca83affd196,
        0x90afd4dba6fb834,
        0x0,
        0x105aeb49d024ab451c1cb3a7,
        0x771bd22f356c17da39829062,
        0x28f7fb49313fd37b,
        0x0,
        0x5,
        0xc67996b6b682c2a2858460c8,
        0x6e89c788952f216a51dd1c2b,
        0x4cc6855dceebb2bb,
        0x19ff590b5e40ddd73d28514a,
        0x6dfa0720352ee7dd476de7d,
        0x341253e918c8be00,
        0x9200e7ce68f088cfd132374a,
        0xb145e0f28eb6fea3dddcf80c,
        0x68772b06407084d9,
        0xf94b28461a3c03284942bef7,
        0xffd515c312b28f62551acd0c,
        0x1ff282f73ff98d6f,
        0x731acf946559d8e9ac7a103b,
        0xf2f77f498e41eaa47eab45eb,
        0x5d57a5d6afcbdc42,
        0x6,
        0x97de48ba79860754164e26a2,
        0x19e9e03986cceaa211c09029,
        0x65a8d779ecd7727f,
        0xc6e79d78977459a3736ac90d,
        0xb782c63b929c74028f5345ab,
        0x45220a469fe6ff07,
        0xca55dc80dd2e142a36e1145,
        0xa5eb3ebaee4cf1507dd7104b,
        0x11bccfdbc83ec18d,
        0x2f9ebd70cfdb859569d26227,
        0x1d05586d99349f7fe2e16708,
        0x1917cbf4f0dabc05,
        0x2015736b5322792c145137c5,
        0x5b9fd1e0c8281adbf67c8b19,
        0x273d8572cba23b79,
        0x1,
        0x0,
        0x0,
        0x6,
        0x5f4c8626c7027fa7c48b58b9,
        0xfab6b20476d1fb9c460013dd,
        0x2739c4d81b5617ea,
        0x27e2a0ff65e6822fa6a4c1e8,
        0xe07e7c827507768c01ec4597,
        0x701d325672a71e1,
        0xd9020d8fb7f9997566f3ed8a,
        0xde0eec8ff1a110462411463d,
        0x2ae5c5d9813f6c42,
        0xad9130da44b5b39e112048b4,
        0xa95e3ff5054911af2eb221d9,
        0x11b13d081dae51d0,
        0xe1fe4d1ce7bd1be85a4bd21c,
        0x8e9ab67a01c36a08dd66b57a,
        0x111ea75bd379fc3e,
        0x8572943e42f1f75a47d07032,
        0x301ec2d883bb32a64560e23,
        0x40b22bd702a0a400,
        0x9,
        0x7acc99f1132667cb45bfd5d6,
        0x2557dcdd48cd0c087355ecdc,
        0x6ecf7abe15e20a79,
        0xda66fd0327532da685449e25,
        0x6ffd1cbca9bbfc3155dd753a,
        0x3c20ddd28c45eb26,
        0xdaf7f33131e2524f01b147eb,
        0x2987b26103514aec0d4bc1f4,
        0x75d85b3c4a441c6c,
        0x5ff7b8a139cbfe4571a86835,
        0x94b6bcd058ee261ec9f814e9,
        0x6f2b7361393cc1fe,
        0x17009a2502a75fd0dc53ff64,
        0x12a385eb3deea977032a6420,
        0x4c6f162c357f0244,
        0x92bd8f8f7fa78b558bc96db4,
        0x9810d74f01e283a9dd9d392f,
        0x7a443154a481a064,
        0x3c43e8687c4d6724628e7954,
        0x4e9d397afaafdd564e9a1d65,
        0x766678c896947aeb,
        0x2015736b5322792c145137c5,
        0x5b9fd1e0c8281adbf67c8b19,
        0x273d8572cba23b79,
        0x1,
        0x0,
        0x0,
        0x95cdc7bd5e5b945f64dda5fb,
        0xd9f06d7f7133e162e4a7270,
        0xd5acc22603b3a7,
        0x0,
        0x2,
        0xd8f9704fc575a92b262063f8,
        0x4afe5a9c479f59c08b497110,
        0x1c3ec6a81e56e98d,
        0x0,
        0xf9d83c10acb36fe5232fd0c7,
        0xe50af5da6ea32afa0ba1e750,
        0x341266a0f3948d20,
        0x0,
    ]
        .span();
    let sch_with_hints = Serde::<
        SchnorrSignatureWithHint<u288>,
    >::deserialize(ref sch_sig_with_hints_serialized)
        .expect('FailToDeserialize');
    let is_valid = is_valid_schnorr_signature(sch_with_hints, 4);
    assert!(is_valid);
}


#[test]
fn test_schnorr_GRUMPKIN() {
    let mut sch_sig_with_hints_serialized = array![
        0x20669ef12954f8e3bbc8b4d3,
        0x396a6f7243c27ce553121ee3,
        0x11438ca2ec259aed,
        0x0,
        0x7c7059f6158e689893dd21a94f41e410,
        0x2454f3702220747f9b72cc1f2d34af71,
        0x12e0c8b2bad640fb19488dec4f65d4da,
        0x1521f387af19922ad9b8a714e61a441c,
        0x86b402ce02e7c7ca81f13d51,
        0x39493672733a9289a36020c1,
        0x7f40d91dc5413d3,
        0x0,
        0x429af526e7e0a5381bccb180,
        0x88f6dad23856d096b8b80e2e,
        0x2684532513785230,
        0x0,
        0x69cc161f03ce9c9bba04f7c4,
        0x29b93d65c392949480208ad1,
        0x13ed8d80f83c637e,
        0x0,
        0x2ed31099827456ae8d37b1a3,
        0x1be170db514855e99708a530,
        0x1f1f9a30a2cd6221,
        0x0,
        0x1bbbd927f7b9f19508d70c0e,
        0x627c01de295a67f8335d8216,
        0x234707ffb2283034,
        0x0,
        0x8b4f60acc35ad7917678f015,
        0x858bb3a97635aee2527d71c4,
        0x190138f209c44f74,
        0x0,
        0x1612ce872e41ee2b3e31b3f,
        0x4b29d9a3469648287bf0a8e8,
        0x2cfa7f861d537c33,
        0x0,
        0x5cd76553627a9c2a85aaa172,
        0x3584744a3c1192037bf61bca,
        0x302d82ebd1c315a8,
        0x0,
        0x5,
        0x17b69aa71dc5720c06f674f0,
        0x6b30939e8bdce2152c3fba15,
        0xba7e5643da02867,
        0x8487e54b4c1c2085e0122d48,
        0xf284b4a82b16b74abce885c5,
        0x296034b703221661,
        0x19c79f2144f5f8061e474877,
        0xd0e258175e4ebbcdf456c77,
        0x2c0944e661e5156b,
        0x68d9065b3f5b19ac7cf35475,
        0x3a0073d590c785e030ffee1f,
        0x1e8cac40634221bc,
        0x3bd6a5acd0eaed778609947a,
        0x1ec6f1a5cd81ccfd81f1e7c7,
        0x24235386cf4804fb,
        0x6,
        0xa9082aeca42ce913fcd298ab,
        0x5112034de137f929bcca0ca1,
        0x1cc0edf22f704961,
        0x12e9567191fdeb3a7bc19cea,
        0xc4639d473aca04b2cf90906a,
        0x27a3ec62f67db78f,
        0x16a78a01c4c0b0e42c61746,
        0x401d0fcc364df0ce95394110,
        0x22c2e26bbb9bb3c6,
        0x504124ff1edd95813d560f87,
        0xbb159ef8546de893b13af875,
        0x4fb65d7c2826f01,
        0x5f8f32b65a516bddd74fa3a0,
        0x184881c9ddc631d8a5cce248,
        0x2509c8bfff88bcc4,
        0x1,
        0x0,
        0x0,
        0x6,
        0x4c93ca2926d58a52340799b3,
        0xc33780ab8b7598d3a80433c0,
        0x110a812b2d31eee5,
        0x668371894f884528b5f960cf,
        0x29455959b896f9d08cb92f21,
        0x119ac86306314d1a,
        0x9f886c347d1013975af5d3e4,
        0x468f1fa64b339839ee49e74a,
        0x5f7817313deda4d,
        0x85fac09c9d3a55f1a98b79b6,
        0x69dd486d03bbdb4f93d233ce,
        0xf94d5f2dd5ac596,
        0xd852edb7978f73a4c65d0980,
        0xb26a47b7a9f9437711fb1324,
        0x1e72e14ecf6a9884,
        0x3516fff8ff259810f673297c,
        0xdb34045b6e83651127b8250c,
        0x317a7319b9e3966,
        0x9,
        0x16cfc8703ba13078603dcb0,
        0x8940c6ab9bd7403b30d02461,
        0x2b7f91da86ad0254,
        0x66a56a67047ecf34e8249484,
        0x9c65e402da885386a3d1ceb,
        0x39997b5f25d91bc,
        0x1658b4be916cbc90c0d87467,
        0x1a257db4f8647f0321d5799e,
        0x2626f2adfa2e31f4,
        0x4827971e1f39e6a6ca1b90b6,
        0x5543003d48ee381548475d68,
        0x28d7c784072a2a97,
        0xe8d1afb6050f3a025f77bf57,
        0x83a689241432320ad7985549,
        0x271593786dee50a8,
        0x16a78a01c4c0b0e42c61735,
        0x401d0fcc364df0ce95394110,
        0x22c2e26bbb9bb3c6,
        0x504124ff1edd95813d560f87,
        0xbb159ef8546de893b13af875,
        0x4fb65d7c2826f01,
        0x5f8f32b65a516bddd74fa3a0,
        0x184881c9ddc631d8a5cce248,
        0x2509c8bfff88bcc4,
        0x1,
        0x0,
        0x0,
        0x89e20af377d741f77f5027,
        0x94bf414c971c37bc858370b1,
        0xc919d2f6a928446,
        0x0,
        0x1,
        0x9aaba4e39293aed7d7c9d35,
        0xfbf79e83b95ca11bbda2393c,
        0xa471c0c37ac712b,
        0x0,
    ]
        .span();
    let sch_with_hints = Serde::<
        SchnorrSignatureWithHint<u288>,
    >::deserialize(ref sch_sig_with_hints_serialized)
        .expect('FailToDeserialize');
    let is_valid = is_valid_schnorr_signature(sch_with_hints, 5);
    assert!(is_valid);
}

