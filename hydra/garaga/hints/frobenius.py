from functools import lru_cache

from garaga.algebra import BaseField, Polynomial, PyFelt
from garaga.definitions import CURVES, CurveID, get_irreducible_poly
from garaga.hints.tower_backup import E6, E12

# Cache directory path
CACHE_DIR = "build/frobenius_cache"


@lru_cache(maxsize=32)
def get_p_powers_of_V(curve_id: int, extension_degree: int, k: int) -> list[Polynomial]:
    """
    Computes V^(i*p^k) for i in range(extension_degree), where V is the polynomial V(X) = X.

    Args:
        curve_id (int): Identifier for the curve.
        extension_degree (int): Degree of the field extension.
        k (int): Exponent in p^k, must be 1, 2, or 3.

    Returns:
        list[Polynomial]: List of polynomials representing V^(i*p^k) for i in range(extension_degree).
    """
    assert k in [1, 2, 3], f"Supported k values are 1, 2, 3. Received: {k}"

    field = BaseField(CURVES[curve_id].p)

    V = Polynomial(
        [field.zero() if i != 1 else field.one() for i in range(extension_degree)]
    )
    if extension_degree == 12:
        V_tower = E12.from_poly(V, curve_id)
    elif extension_degree == 6:
        V_tower = E6.from_poly(V, curve_id)
    else:
        raise ValueError(f"Unsupported extension degree: {extension_degree}")

    V_pow_E12 = [V_tower ** (i * field.p**k) for i in range(extension_degree)]

    V_pow = [v.to_poly() for v in V_pow_E12]
    return V_pow


@lru_cache(maxsize=32)
def get_V_torus_powers(curve_id: int, extension_degree: int, k: int) -> Polynomial:
    """
    Computes 1/V^((p^k - 1) // 2) where V is the polynomial V(X) = X.
    This is used to compute the Frobenius automorphism in the Torus.
    Usage is deprecated since torus arithmetic is not used anymore with the final exp witness.

    Args:
        curve_id (int): Identifier for the curve.
        extension_degree (int): Degree of the field extension.
        k (int): Exponent in p^k, must be 1, 2, or 3.

    Returns:
        list[Polynomial]: List of polynomials representing V^(i*p^k) for i in range(extension_degree).
    """
    assert k in [1, 2, 3], f"Supported k values are 1, 2, 3. Received: {k}"

    field = BaseField(CURVES[curve_id].p)
    irr = get_irreducible_poly(curve_id, extension_degree)

    V = Polynomial(
        [field.zero() if i != 1 else field.one() for i in range(extension_degree)]
    )

    V_pow = V.pow((field.p**k - 1) // 2, irr)
    inverse, _, _ = Polynomial.xgcd(V_pow, irr)
    return inverse


def frobenius(
    F: list[PyFelt], V_pow: list[Polynomial], p: int, frob_power: int, irr: Polynomial
) -> Polynomial:
    """
    Applies the Frobenius automorphism to a polynomial in a direct extension field.

    Args:
        F (list[PyFelt]): Coefficients of the polynomial.
        V_pow (list[Polynomial]): Precomputed powers of V (using get_p_powers_of_V).
        p (int): Prime number of the base field.
        frob_power (int): Power of the Frobenius automorphism.
        irr (Polynomial): Irreducible polynomial for the field extension.

    Returns:
        Polynomial: Result of applying Frobenius automorphism.
    """
    assert len(F) == len(V_pow), "Mismatch in lengths of F and V_pow."
    acc = Polynomial([PyFelt(0, p)])
    for i, f in enumerate(F):
        acc += V_pow[i] * f
    assert acc == (
        Polynomial(F).pow(p**frob_power, irr)
    ), "Mismatch in expected result."
    return acc


@lru_cache(maxsize=32)
def generate_frobenius_maps(
    curve_id, extension_degree: int, frob_power: int
) -> tuple[list[str], list[list[tuple[int, int]]]]:
    """
    Generates symbolic expressions for Frobenius map coefficients and a list of tuples with constants.

    Args:
        curve_id (CurveID): Identifier for the curve.
        extension_degree (int): Degree of the field extension.
        frob_power (int): Power of the Frobenius automorphism.

    Returns:
        tuple[list[str], list[list[tuple[int, int]]]]: Symbolic expressions for each coefficient and a list of tuples with constants.
    """
    curve_id = curve_id if isinstance(curve_id, int) else curve_id.value

    V_pow = get_p_powers_of_V(curve_id, extension_degree, frob_power)

    k_expressions = ["" for _ in range(extension_degree)]
    constants_list = [[] for _ in range(extension_degree)]
    for i in range(extension_degree):
        for f_index, poly in enumerate(V_pow):
            if poly[i] != 0:
                hex_value = f"0x{poly[i].value:x}"
                compact_hex = (
                    f"{hex_value[:6]}...{hex_value[-4:]}"
                    if len(hex_value) > 10
                    else hex_value
                )
                k_expressions[i] += f" + {compact_hex} * f_{f_index}"
                constants_list[i].append([f_index, poly[i].value])

    return k_expressions, constants_list


def get_frobenius_maps(curve_id, extension_degree, frob_power):
    res = FROBENIUS_MAPS[curve_id][extension_degree][frob_power]
    return res["k_expressions"], res["constants_list"]


FROBENIUS_MAPS = {
    CurveID.BN254.value: {
        6: {
            1: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x12 * f_3",
                    " + 0x242b...21a7 * f_1 + 0x3598...2536 * f_4",
                    " + 0x2c84...048b * f_2 + 0xc33b...a7b5 * f_5",
                    " + 0x3064...fd46 * f_3",
                    " + 0x16c9...cba2 * f_1 + 0xc38d...dba0 * f_4",
                    " + 0x2c14...8126 * f_2 + 0x3df9...f8bc * f_5",
                ],
                "constants_list": [
                    [[0, 1], [3, 18]],
                    [
                        [
                            1,
                            16360020762774556598013388786114916077431217727990580677342011753074458436007,
                        ],
                        [
                            4,
                            1515075255943902619915209849611390435230609634891435693592219128690297546038,
                        ],
                    ],
                    [
                        [
                            2,
                            20136284445039654443521573293420200948986700144072064670248776058768820274315,
                        ],
                        [
                            5,
                            5519090358942869774631834397357627544196820822321065521472227381981946161077,
                        ],
                    ],
                    [
                        [
                            3,
                            21888242871839275222246405745257275088696311157297823662689037894645226208582,
                        ]
                    ],
                    [
                        [
                            1,
                            10307601595873709700152284273816112264069230130616436755625194854815875713954,
                        ],
                        [
                            4,
                            5528222109064718624233016959142359011265093429307242985347026141570767772576,
                        ],
                    ],
                    [
                        [
                            2,
                            19937756971775647987995932169929341994314640652964949448313374472400716661030,
                        ],
                        [
                            5,
                            1751958426799620778724832451837074139709611013225758992440261835876405934268,
                        ],
                    ],
                ],
            },
            2: {
                "k_expressions": [
                    " + 0x1 * f_0",
                    " + 0x3064...fd48 * f_1",
                    " + 0x59e2...fffe * f_2",
                    " + 0x1 * f_3",
                    " + 0x3064...fd48 * f_4",
                    " + 0x59e2...fffe * f_5",
                ],
                "constants_list": [
                    [[0, 1]],
                    [
                        [
                            1,
                            21888242871839275220042445260109153167277707414472061641714758635765020556616,
                        ]
                    ],
                    [[2, 2203960485148121921418603742825762020974279258880205651966]],
                    [[3, 1]],
                    [
                        [
                            4,
                            21888242871839275220042445260109153167277707414472061641714758635765020556616,
                        ]
                    ],
                    [[5, 2203960485148121921418603742825762020974279258880205651966]],
                ],
            },
            3: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x12 * f_3",
                    " + 0xc3a5...3ae6 * f_1 + 0x2ce0...77f4 * f_4",
                    " + 0x1bfe...9cc0 * f_2 + 0x697b...2fbd * f_5",
                    " + 0x3064...fd46 * f_3",
                    " + 0x4f1d...86de * f_1 + 0x2429...c261 * f_4",
                    " + 0x23d5...239f * f_2 + 0x1465...6087 * f_5",
                ],
                "constants_list": [
                    [[0, 1], [3, 18]],
                    [
                        [
                            1,
                            5530884290053922304144789698142497171615764627662268383765069573573149473510,
                        ],
                        [
                            4,
                            20297833428213404246748847976138555224655679424027567639634210889891384752116,
                        ],
                    ],
                    [
                        [
                            2,
                            12662075878685592334176167466297648270258898084773409719342381002174283488448,
                        ],
                        [
                            5,
                            2981953136242954199074806921510952041507639786040776490510130360411260071869,
                        ],
                    ],
                    [
                        [
                            3,
                            21888242871839275222246405745257275088696311157297823662689037894645226208582,
                        ]
                    ],
                    [
                        [
                            1,
                            2236595495967245188281701248203181795121068902605861227855261137820944008926,
                        ],
                        [
                            4,
                            16357358581785352918101616047114777917080546529635555278923968321072076735073,
                        ],
                    ],
                    [
                        [
                            2,
                            16208900380737693084919495127334387981393726419856888799917914180988844123039,
                        ],
                        [
                            5,
                            9226166993153682888070238278959626818437413072524413943346656892470942720135,
                        ],
                    ],
                ],
            },
        },
        12: {
            1: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x12 * f_6",
                    " + 0x1d8c...5955 * f_1 + 0x217e...a71a * f_7",
                    " + 0x242b...21a7 * f_2 + 0x3598...2536 * f_8",
                    " + 0x2143...d5ed * f_3 + 0x1885...f771 * f_9",
                    " + 0x2c84...048b * f_4 + 0xc33b...a7b5 * f_10",
                    " + 0x1b00...cfa8 * f_5 + 0x215d...3977 * f_11",
                    " + 0x3064...fd46 * f_6",
                    " + 0x2469...62ac * f_1 + 0x12d7...a3f2 * f_7",
                    " + 0x16c9...cba2 * f_2 + 0xc38d...dba0 * f_8",
                    " + 0x7c03...b0e3 * f_3 + 0xf20e...275a * f_9",
                    " + 0x2c14...8126 * f_4 + 0x3df9...f8bc * f_10",
                    " + 0x12ac...2c4b * f_5 + 0x1563...2d9f * f_11",
                ],
                "constants_list": [
                    [[0, 1], [6, 18]],
                    [
                        [
                            1,
                            13365409060938474037306578913838458522380504351979534994799168652879942015317,
                        ],
                        [
                            7,
                            15149388816844991028686460567044464535476179991058260916837039682243069519642,
                        ],
                    ],
                    [
                        [
                            2,
                            16360020762774556598013388786114916077431217727990580677342011753074458436007,
                        ],
                        [
                            8,
                            1515075255943902619915209849611390435230609634891435693592219128690297546038,
                        ],
                    ],
                    [
                        [
                            3,
                            15045457014669079880857698262349813226890047910746430923333052506178758170093,
                        ],
                        [
                            9,
                            11091343436809180351614910509573166200913051272729455615890601373803728140145,
                        ],
                    ],
                    [
                        [
                            4,
                            20136284445039654443521573293420200948986700144072064670248776058768820274315,
                        ],
                        [
                            10,
                            5519090358942869774631834397357627544196820822321065521472227381981946161077,
                        ],
                    ],
                    [
                        [
                            5,
                            12213237718317714435432069045728674390396718360292308943147966475590979932072,
                        ],
                        [
                            11,
                            15091102541443398914402572935544421557437151058424932771830130262738472679799,
                        ],
                    ],
                    [
                        [
                            6,
                            21888242871839275222246405745257275088696311157297823662689037894645226208582,
                        ]
                    ],
                    [
                        [
                            1,
                            16469823323077808223889137241176536799009286646108169935659301613961712198316,
                        ],
                        [
                            7,
                            8522833810900801184939826831418816566315806805318288667889869241765284193266,
                        ],
                    ],
                    [
                        [
                            2,
                            10307601595873709700152284273816112264069230130616436755625194854815875713954,
                        ],
                        [
                            8,
                            5528222109064718624233016959142359011265093429307242985347026141570767772576,
                        ],
                    ],
                    [
                        [
                            3,
                            3505843767911556378687030309984248845540243509899259641013678093033130930403,
                        ],
                        [
                            9,
                            6842785857170195341388707482907461861806263246551392739355985388466468038490,
                        ],
                    ],
                    [
                        [
                            4,
                            19937756971775647987995932169929341994314640652964949448313374472400716661030,
                        ],
                        [
                            10,
                            1751958426799620778724832451837074139709611013225758992440261835876405934268,
                        ],
                    ],
                    [
                        [
                            5,
                            8447204650696766136447902020341177575205426561248465145919723016860428151883,
                        ],
                        [
                            11,
                            9675005153521560786814336699528600698299592797005514719541071419054246276511,
                        ],
                    ],
                ],
            },
            2: {
                "k_expressions": [
                    " + 0x1 * f_0",
                    " + 0x3064...fd49 * f_1",
                    " + 0x3064...fd48 * f_2",
                    " + 0x3064...fd46 * f_3",
                    " + 0x59e2...fffe * f_4",
                    " + 0x59e2...ffff * f_5",
                    " + 0x1 * f_6",
                    " + 0x3064...fd49 * f_7",
                    " + 0x3064...fd48 * f_8",
                    " + 0x3064...fd46 * f_9",
                    " + 0x59e2...fffe * f_10",
                    " + 0x59e2...ffff * f_11",
                ],
                "constants_list": [
                    [[0, 1]],
                    [
                        [
                            1,
                            21888242871839275220042445260109153167277707414472061641714758635765020556617,
                        ]
                    ],
                    [
                        [
                            2,
                            21888242871839275220042445260109153167277707414472061641714758635765020556616,
                        ]
                    ],
                    [
                        [
                            3,
                            21888242871839275222246405745257275088696311157297823662689037894645226208582,
                        ]
                    ],
                    [[4, 2203960485148121921418603742825762020974279258880205651966]],
                    [[5, 2203960485148121921418603742825762020974279258880205651967]],
                    [[6, 1]],
                    [
                        [
                            7,
                            21888242871839275220042445260109153167277707414472061641714758635765020556617,
                        ]
                    ],
                    [
                        [
                            8,
                            21888242871839275220042445260109153167277707414472061641714758635765020556616,
                        ]
                    ],
                    [
                        [
                            9,
                            21888242871839275222246405745257275088696311157297823662689037894645226208582,
                        ]
                    ],
                    [[10, 2203960485148121921418603742825762020974279258880205651966]],
                    [[11, 2203960485148121921418603742825762020974279258880205651967]],
                ],
            },
            3: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x12 * f_6",
                    " + 0x13d0...dd76 * f_1 + 0x18a0...7a66 * f_7",
                    " + 0xc3a5...3ae6 * f_2 + 0x2ce0...77f4 * f_8",
                    " + 0xf20e...275a * f_3 + 0x17de...05d6 * f_9",
                    " + 0x1bfe...9cc0 * f_4 + 0x697b...2fbd * f_10",
                    " + 0x7a0e...c6fe * f_5 + 0x1b76...267f * f_11",
                    " + 0x3064...fd46 * f_6",
                    " + 0xabf8...c101 * f_1 + 0x1c93...1fd1 * f_7",
                    " + 0x4f1d...86de * f_2 + 0x2429...c261 * f_8",
                    " + 0x28a4...4c64 * f_3 + 0x2143...d5ed * f_9",
                    " + 0x23d5...239f * f_4 + 0x1465...6087 * f_10",
                    " + 0x16db...2499 * f_5 + 0x28c3...3649 * f_11",
                ],
                "constants_list": [
                    [[0, 1], [6, 18]],
                    [
                        [
                            1,
                            8962796994142561318020731828686235839805240740882031587688271515838210497910,
                        ],
                        [
                            7,
                            11139888828927304715070170254258059606344477568910959609173468391830532880998,
                        ],
                    ],
                    [
                        [
                            2,
                            5530884290053922304144789698142497171615764627662268383765069573573149473510,
                        ],
                        [
                            8,
                            20297833428213404246748847976138555224655679424027567639634210889891384752116,
                        ],
                    ],
                    [
                        [
                            3,
                            6842785857170195341388707482907461861806263246551392739355985388466468038490,
                        ],
                        [
                            9,
                            10796899435030094870631495235684108887783259884568368046798436520841498068438,
                        ],
                    ],
                    [
                        [
                            4,
                            12662075878685592334176167466297648270258898084773409719342381002174283488448,
                        ],
                        [
                            10,
                            2981953136242954199074806921510952041507639786040776490510130360411260071869,
                        ],
                    ],
                    [
                        [
                            5,
                            3450433697903417549302685618164879376276650884475927416516222736246212970238,
                        ],
                        [
                            11,
                            12422063293602986478931835435357103568858507930143618368233720881093900838527,
                        ],
                    ],
                    [
                        [
                            6,
                            21888242871839275222246405745257275088696311157297823662689037894645226208582,
                        ]
                    ],
                    [
                        [
                            1,
                            303847389135065887422783454877609941456349188919719272345083954437860409601,
                        ],
                        [
                            7,
                            12925445877696713904225673916571039248891070416415792075000766378807015710673,
                        ],
                    ],
                    [
                        [
                            2,
                            2236595495967245188281701248203181795121068902605861227855261137820944008926,
                        ],
                        [
                            8,
                            16357358581785352918101616047114777917080546529635555278923968321072076735073,
                        ],
                    ],
                    [
                        [
                            3,
                            18382399103927718843559375435273026243156067647398564021675359801612095278180,
                        ],
                        [
                            9,
                            15045457014669079880857698262349813226890047910746430923333052506178758170093,
                        ],
                    ],
                    [
                        [
                            4,
                            16208900380737693084919495127334387981393726419856888799917914180988844123039,
                        ],
                        [
                            10,
                            9226166993153682888070238278959626818437413072524413943346656892470942720135,
                        ],
                    ],
                    [
                        [
                            5,
                            10338197737521362862238855242243140895517409139741313354160881284257516364953,
                        ],
                        [
                            11,
                            18437809173935857672943720127092395712419660272821896246172815158399013238345,
                        ],
                    ],
                ],
            },
        },
    },
    CurveID.BLS12_381.value: {
        6: {
            1: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x2 * f_3",
                    " + 0x5f19...ffff * f_1",
                    " + 0x1a01...aaad * f_2 + 0x1a01...aaaf * f_5",
                    " + 0x1a01...aaaa * f_3",
                    " + 0x1a01...aaac * f_1 + 0x1a01...aaac * f_4",
                    " + 0x5f19...fffe * f_5",
                ],
                "constants_list": [
                    [[0, 1], [3, 2]],
                    [
                        [
                            1,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351,
                        ]
                    ],
                    [
                        [
                            2,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437,
                        ],
                        [
                            5,
                            4002409555221667391830831044277473131314123416672164991210284655561910664469924889588124330978063052796376809319087,
                        ],
                    ],
                    [
                        [
                            3,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [
                        [
                            1,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ],
                        [
                            4,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ],
                    ],
                    [
                        [
                            5,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350,
                        ]
                    ],
                ],
            },
            2: {
                "k_expressions": [
                    " + 0x1 * f_0",
                    " + 0x5f19...fffe * f_1",
                    " + 0x1a01...aaac * f_2",
                    " + 0x1 * f_3",
                    " + 0x5f19...fffe * f_4",
                    " + 0x1a01...aaac * f_5",
                ],
                "constants_list": [
                    [[0, 1]],
                    [
                        [
                            1,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350,
                        ]
                    ],
                    [
                        [
                            2,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ]
                    ],
                    [[3, 1]],
                    [
                        [
                            4,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350,
                        ]
                    ],
                    [
                        [
                            5,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ]
                    ],
                ],
            },
            3: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x2 * f_3",
                    " + 0x1a01...aaaa * f_1",
                    " + 0x1a01...aaaa * f_2 + 0x1a01...aaa9 * f_5",
                    " + 0x1a01...aaaa * f_3",
                    " + 0x1 * f_1 + 0x1 * f_4",
                    " + 0x1 * f_5",
                ],
                "constants_list": [
                    [[0, 1], [3, 2]],
                    [
                        [
                            1,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [
                        [
                            2,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ],
                        [
                            5,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559785,
                        ],
                    ],
                    [
                        [
                            3,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [[1, 1], [4, 1]],
                    [[5, 1]],
                ],
            },
        },
        12: {
            1: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x2 * f_6",
                    " + 0x1808...14c5 * f_1 + 0x1808...14c5 * f_7",
                    " + 0x5f19...ffff * f_2",
                    " + 0xd5e1...9812 * f_9",
                    " + 0x1a01...aaad * f_4 + 0x1a01...aaaf * f_10",
                    " + 0xb659...022c * f_5 + 0xb659...022c * f_11",
                    " + 0x1a01...aaaa * f_6",
                    " + 0xfc3e...4af3 * f_1 + 0x1f87...95e6 * f_7",
                    " + 0x1a01...aaac * f_2 + 0x1a01...aaac * f_8",
                    " + 0x6af0...cc09 * f_3",
                    " + 0x5f19...fffe * f_10",
                    " + 0x144e...2995 * f_5 + 0xe9b7...a87f * f_11",
                ],
                "constants_list": [
                    [[0, 1], [6, 2]],
                    [
                        [
                            1,
                            3699099184852670630486504326366823957760732022002356992020042909103225195948437585701677765097109891745284740289733,
                        ],
                        [
                            7,
                            3699099184852670630486504326366823957760732022002356992020042909103225195948437585701677765097109891745284740289733,
                        ],
                    ],
                    [
                        [
                            2,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351,
                        ]
                    ],
                    [
                        [
                            9,
                            2057464292470212699950648958431590554769679873859515792311286236065221686597310451751142621105086029381756709738514,
                        ]
                    ],
                    [
                        [
                            4,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437,
                        ],
                        [
                            10,
                            4002409555221667391830831044277473131314123416672164991210284655561910664469924889588124330978063052796376809319087,
                        ],
                    ],
                    [
                        [
                            5,
                            1754153922101215937019363459062510355973529075922864898999271009044415232054910173010132757073180257089147177468460,
                        ],
                        [
                            11,
                            1754153922101215937019363459062510355973529075922864898999271009044415232054910173010132757073180257089147177468460,
                        ],
                    ],
                    [
                        [
                            6,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [
                        [
                            1,
                            151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027,
                        ],
                        [
                            7,
                            303310370368996762931285499369080198796150797936650893312015227020806454542400278741009864031905772292609532270054,
                        ],
                    ],
                    [
                        [
                            2,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ],
                        [
                            8,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ],
                    ],
                    [
                        [
                            3,
                            1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257,
                        ]
                    ],
                    [
                        [
                            10,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350,
                        ]
                    ],
                    [
                        [
                            5,
                            3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557,
                        ],
                        [
                            11,
                            2248255633120451456398426366673393800583353744016142986332787127079616418435927691432554872055835406948747095091327,
                        ],
                    ],
                ],
            },
            2: {
                "k_expressions": [
                    " + 0x1 * f_0",
                    " + 0x5f19...ffff * f_1",
                    " + 0x5f19...fffe * f_2",
                    " + 0x1a01...aaaa * f_3",
                    " + 0x1a01...aaac * f_4",
                    " + 0x1a01...aaad * f_5",
                    " + 0x1 * f_6",
                    " + 0x5f19...ffff * f_7",
                    " + 0x5f19...fffe * f_8",
                    " + 0x1a01...aaaa * f_9",
                    " + 0x1a01...aaac * f_10",
                    " + 0x1a01...aaad * f_11",
                ],
                "constants_list": [
                    [[0, 1]],
                    [
                        [
                            1,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351,
                        ]
                    ],
                    [
                        [
                            2,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350,
                        ]
                    ],
                    [
                        [
                            3,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [
                        [
                            4,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ]
                    ],
                    [
                        [
                            5,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437,
                        ]
                    ],
                    [[6, 1]],
                    [
                        [
                            7,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351,
                        ]
                    ],
                    [
                        [
                            8,
                            793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350,
                        ]
                    ],
                    [
                        [
                            9,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [
                        [
                            10,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436,
                        ]
                    ],
                    [
                        [
                            11,
                            4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437,
                        ]
                    ],
                ],
            },
            3: {
                "k_expressions": [
                    " + 0x1 * f_0 + 0x2 * f_6",
                    " + 0xca2f...1299 * f_1 + 0xca2f...1299 * f_7",
                    " + 0x1a01...aaaa * f_2",
                    " + 0xca2f...1299 * f_9",
                    " + 0x1a01...aaaa * f_4 + 0x1a01...aaa9 * f_10",
                    " + 0xd5e1...9812 * f_5 + 0xd5e1...9812 * f_11",
                    " + 0x1a01...aaaa * f_6",
                    " + 0x6af0...cc09 * f_1 + 0xd5e1...9812 * f_7",
                    " + 0x1 * f_2 + 0x1 * f_8",
                    " + 0x1352...dea2 * f_3",
                    " + 0x1 * f_10",
                    " + 0x1352...dea2 * f_5 + 0xca2f...1299 * f_11",
                ],
                "constants_list": [
                    [[0, 1], [6, 2]],
                    [
                        [
                            1,
                            1944945262751454693467140867304313601787202946079492093020771900058809963893527412691545008023929634656137562821273,
                        ],
                        [
                            7,
                            1944945262751454693467140867304313601787202946079492093020771900058809963893527412691545008023929634656137562821273,
                        ],
                    ],
                    [
                        [
                            2,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [
                        [
                            9,
                            1944945262751454693467140867304313601787202946079492093020771900058809963893527412691545008023929634656137562821273,
                        ]
                    ],
                    [
                        [
                            4,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ],
                        [
                            10,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559785,
                        ],
                    ],
                    [
                        [
                            5,
                            2057464292470212699950648958431590554769679873859515792311286236065221686597310451751142621105086029381756709738514,
                        ],
                        [
                            11,
                            2057464292470212699950648958431590554769679873859515792311286236065221686597310451751142621105086029381756709738514,
                        ],
                    ],
                    [
                        [
                            6,
                            4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786,
                        ]
                    ],
                    [
                        [
                            1,
                            1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257,
                        ],
                        [
                            7,
                            2057464292470212699950648958431590554769679873859515792311286236065221686597310451751142621105086029381756709738514,
                        ],
                    ],
                    [[2, 1], [8, 1]],
                    [
                        [
                            3,
                            2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530,
                        ]
                    ],
                    [[10, 1]],
                    [
                        [
                            5,
                            2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530,
                        ],
                        [
                            11,
                            1944945262751454693467140867304313601787202946079492093020771900058809963893527412691545008023929634656137562821273,
                        ],
                    ],
                ],
            },
        },
    },
}


if __name__ == "__main__":
    from random import randint

    # Frobenius maps
    def test_frobenius_maps():
        constants_lists = {}
        for extension_degree in [6, 12]:
            for curve_id in [CurveID.BN254, CurveID.BLS12_381]:
                if curve_id.name not in constants_lists:
                    constants_lists[curve_id.name] = {}
                if extension_degree not in constants_lists[curve_id.name]:
                    constants_lists[curve_id.name][extension_degree] = {}
                p = CURVES[curve_id.value].p
                for frob_power in [1, 2, 3]:
                    print(
                        f"\nFrobenius^{frob_power} for {curve_id.name} Fp{extension_degree}"
                    )
                    irr = get_irreducible_poly(curve_id.value, extension_degree)

                    V_pow = get_p_powers_of_V(
                        curve_id.value, extension_degree, frob_power
                    )
                    # print(
                    #     f"Torus Inv: {get_V_torus_powers(curve_id.value, extension_degree, frob_power).get_value_coeffs()}"
                    # )
                    F = [PyFelt(randint(0, p - 1), p) for _ in range(extension_degree)]
                    _ = frobenius(F, V_pow, p, frob_power, irr)

                    k_expressions, constants_list = generate_frobenius_maps(
                        curve_id, extension_degree, frob_power
                    )
                    print(
                        f"f = f0 + f1v + ... + f{extension_degree-1}v^{extension_degree-1}"
                    )
                    print(
                        f"Frob(f) = f^p = f0 + f1v^(p^{frob_power}) + f2v^(2p^{frob_power}) + ... + f{extension_degree-1}*v^(({extension_degree-1})p^{frob_power})"
                    )
                    print(
                        f"Frob(f) = k0 + k1v + ... + k{extension_degree-1}v^{extension_degree-1}"
                    )
                    for i, expr in enumerate(k_expressions):
                        print(f"k_{i} = {expr}")
                        print(f"Constants: {constants_list[i]}")
                    constants_lists[curve_id.name][extension_degree][
                        frob_power
                    ] = constants_list
        return constants_lists

    frobs = test_frobenius_maps()

    from garaga.hints.tower_backup import E12

    x = E12.random(1)
    frobenius(
        x.to_poly().get_coeffs(),
        get_p_powers_of_V(1, 12, 1),
        CURVES[1].p,
        1,
        get_irreducible_poly(1, 12),
    )
