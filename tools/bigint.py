

BASE = 2**86
p = 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
PRIME = 2**251 + 17*2**192 + 1

def as_int(val):
    return val if val < PRIME // 2 else val - PRIME

def pack(z):
    return sum(limb * 2 ** (86 * i) for i, limb in enumerate(z))

def rp(num):
    a = []
    for _ in range(3):
        num, residue = divmod(num, BASE)
        a.append(hex(residue))
    assert num == 0
    return a

b2m = rp(BASE**2 % p)
b3m = rp(BASE**3 % p)
b4m = rp(BASE**4 % p)

# print("b3m", b3m)
# print("b4m", b4m)

def reduce_mod(rep):
    res = [rep[0] + rep[3]*b3m[0] + rep[4]*b4m[0], 
           rep[1] + rep[3]*b3m[1] + rep[4]*b4m[1], 
           rep[2] + rep[3]*b3m[2] + rep[4]*b4m[2]]
    return res

def print_rp(title, x):
    print(title, f'= BigInt3({", ".join(rp(x))})')

def print_point(name, point):
    print(f'let {name}: EcPoint = EcPoint(\n\tBigInt3({", ".join(rp(point[0]))}),\n\tBigInt3({", ".join(rp(point[1]))}))')


def main():
    twogx = 1368015179489954701390400359078579693043519447331113978918064868415326638035
    twogy = 9918110051302171585080402603319702774565515993150576347155970296011118125764
    threegx = 3353031288059533942658390886683067124040920775575537747144343083137631628272
    threegy = 19321533766552368860946552437480515441416830039777911637913418824951667761761

    neg1x = 1 
    neg1y = 21888242871839275222246405745257275088696311157297823662689037894645226208581 
    neg2x = 1368015179489954701390400359078579693043519447331113978918064868415326638035
    neg2y = 11970132820537103637166003141937572314130795164147247315533067598634108082819 
    neg3x = 3353031288059533942658390886683067124040920775575537747144343083137631628272
    neg3y = 2566709105286906361299853307776759647279481117519912024775619069693558446822

    print_point("two", (twogx, twogy))
    print_point("three", (threegx, threegy))
    print_point("negone", (neg1x, neg1y))
    print_point("negtwo", (neg2x, neg2y))
    print_point("negthree", (neg3x, neg3y))

    print_rp("", 11559732032986387107991004021392285783925812861821192530917403151452391805634)
    print_rp("", 10857046999023057135944570762232829481370756359578518086990519993285655852781)
    print_rp("", 4082367875863433681332203403145435568316851327593401208105741076214120093531)
    print_rp("", 8495653923123431417604973247489272438418190587263600148770280649306958101930)
    exit()

    print(rp(0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001))
    print(rp(2 ** 256 - (2 ** 32 + 2 ** 9 + 2 ** 8 + 2 ** 7 + 2 ** 6 + 2 ** 4 + 1)))

    print(rp(1368015179489954701390400359078579693043519447331113978918064868415326638035))
    print(rp(9918110051302171585080402603319702774565515993150576347155970296011118125764))
    print(hex(pack([0x315ececbb6406837bf51f5, 0x2d29f03e7858af38cd5dac, 0x4fe342e2fe1a7f9b8ee7e])))
    exit()
    n = [2, 3, 4, 1, 0]
    pn = pack(n) % p
    rpn = reduce_mod(n)
    print(rpn)
    print(pn)
    print(pack(rpn) % p)
    

main()